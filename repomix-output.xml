This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
src/
  _data/
    client.js
  _includes/
    components/
      featured-posts.html
      home-schema.html
      post-schema.html
    layouts/
      base.html
      post.html
    sections/
      cta.html
      footer.html
      header.html
  admin/
    config.yml
    decap-preview-styles.css
    index.html
  assets/
    favicons/
      favicon.svg
      site.webmanifest
    js/
      dark.js
      nav.js
    less/
      about.less
      blog.less
      contact.less
      critical.less
      local.less
      projects.less
      reviews.less
      root.less
    svgs/
      chevron.svg
      dropdown.svg
      facebook.svg
      google.svg
      instagram.svg
      logo-black.svg
      logo-light.svg
      moon.svg
      profile.svg
      quote.svg
      s1.svg
      s2.svg
      s3.svg
      s4.svg
      stars.svg
      sun.svg
  config/
    filters/
      isoDate.js
      postDate.js
    plugins/
      images.js
      sitemap.js
    processors/
      javascript.js
      less.js
  content/
    blog/
      acuti-modo.md
      blog.json
      canitiem-saxa.md
      sucos-creati.md
    pages/
      _template.txt
      about.html
      blog.html
      contact.html
      project-one.html
      project-two.html
      reviews.html
    content.json
  _redirects
  index.html
  robots.html
  sitemap.html
.eleventy.js
.gitignore
LICENSE.md
netlify.toml
package.json
README.md
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="src/_data/client.js">
module.exports = {
    name: "NexSite",
    email: "hello@nexsite.com",
    phoneForTel: "555-779-4407",
    phoneFormatted: "(555) 779-4407",
    address: {
        lineOne: "First Address Line",
        lineTwo: "Second Address Line",
        city: "Denver",
        state: "CO",
        zip: "80206",
        country: "US",
        mapLink: "https://maps.app.goo.gl/TEdS5KoLC9ZcULuQ6",
    },
    socials: {
        facebook: "https://www.facebook.com/",
        instagram: "https://www.instagram.com/",
    },
    //! Make sure you include the file protocol (e.g. https://) and that NO TRAILING SLASH is included
    domain: "https://www.example.com",
    // Passing the isProduction variable for use in HTML templates
    isProduction: process.env.ELEVENTY_ENV === "PROD",
};
</file>

<file path="src/_includes/components/featured-posts.html">
<!-- ============================================ -->
<!--                Featured Posts                -->
<!-- ============================================ -->

<div id="blog-sidebar">
    <!--Featured-->
    <div class="cs-featured-group">
        <span class="cs-sidebar-header">Featured Posts</span>
        {%- for post in collections.featured | reverse -%}
            <a class="cs-sidebar-link" href="{{ post.url }}">
                <picture class="cs-sidebar-img">
                    <img src="{% getUrl post.data.image | resize({ width: 120, height: 120 }) | jpeg %}" alt="{{ post.data.alt }}" width="60" height="60" loading="lazy" decoding="async">
                </picture>
                <div class="cs-content-group">
                    <h3 class="cs-sidebar-title">{{ post.data.title }}</h3>
                    <span class="cs-sidebar-date">{{ post.date | postDate }}</span>
                </div>
            </a>
        {%- endfor -%}
    </div>
</div>
</file>

<file path="src/_includes/components/home-schema.html">
<script type="application/ld+json">
    {
        "@context": "http://schema.org",
        "@type": "LocalBusiness",
        "name": "{{ client.name }}",
        {% if preloadImg %}"image": "{{ client.domain }}{{ preloadImg }}",{% endif %}
        {% if client.phoneFormatted %}"telephone": "{{ client.phoneFormatted }}",{% endif %}
        {% if client.email %}"email": "{{ client.email }}",{% endif %}
        {% if client.address %}
            "address": {
                "@type": "PostalAddress" {%- if client.address.lineOne -%},
                    "streetAddress": "{{ client.address.lineOne }}{% if client.address.lineTwo %}, {{ client.address.lineTwo }}{% endif %}"
                {%- endif -%}
                {%- if client.address.city -%},
                    "addressLocality": "{{ client.address.city }}"
                {%- endif -%}
                {%- if client.address.state -%},
                    "addressRegion": "{{ client.address.state }}"
                {%- endif -%}
                {%- if client.address.zip -%},
                    "postalCode": "{{ client.address.zip }}"
                {%- endif -%}
                {%- if client.address.country -%},
                    "addressCountry": "{{ client.address.country }}"
                {%- endif -%}
            },
        {% endif %}
        {% if client.domain and page.url %}"url": "{{ client.domain }}{{ page.url }}",{% endif %}
        {% if client.socials %}
            "sameAs": [{%- for platform, url in client.socials -%}
                    {% if not loop.first %},{% endif %}"{{ url }}"
                {%- endfor -%}]
        {% endif %}
    }
</script>
</file>

<file path="src/_includes/components/post-schema.html">
<script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "Article",
        "mainEntityOfPage": {
            "@type": "WebPage",
            "@id": "{{ client.domain }}{{ page.url }}"
        },
        {% if title %}"headline": "{{ title | escape }}",{% endif %}
        {% if description %}"description": "{{ description | escape }}",{% endif %}
        {% if image %}
            "image": {
                "@type": "ImageObject",
                "url": "{{ client.domain }}{{ image }}",
                "width": 1200,
                "height": 630
            },
        {% endif %}
        {% if date %}"datePublished": "{{ date | isoDate }}",{% endif %}
        {% if date %}"dateModified": "{{ date | isoDate }}",{% endif %}
        {% if author %}
            "author": {
                "@type": "Person",
                "name": "{{ author | escape }}"
            },
        {% endif %}
        {% if client.name %}
            "publisher": {
                "@type": "Organization",
                "name": "{{ client.name | escape }}",
                "logo": {
                    "@type": "ImageObject",
                    "url": "{{ client.domain }}/assets/svgs/logo-black.svg",
                    "width": 210,
                    "height": 28
                }
            }
        {% endif %}
    }
</script>
</file>

<file path="src/_includes/layouts/base.html">
<!-- A fully fleshed-out <head>, dynamically changing based on client.json and the page front matter -->

<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Standard meta tags -->
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="description" content="{{ description }}">
        <link rel="canonical" href="{{ client.domain }}{{ page.url }}">
        <meta name="generator" content="{{ eleventy.generator }}">

        <!--Social Media Display-->
        <meta property="og:title" content="{{ title }}"/>
        <meta property="og:description" content="{{ description }}"/>
        <meta property="og:type" content="website"/>
        <meta property="og:url" content="{{ client.domain }}{{ page.url }}"/>
        <meta property="og:image" content="{{ image or "/assets/images/logo-small.png" }}"/>
        <meta property="og:image:secure_url" content="{{ image or "/assets/images/logo-small.png" }}"/>

        <!--Favicons-->
        <!-- https://realfavicongenerator.net/ -->
        <link rel="icon" type="image/png" href="/assets/favicons/favicon-96x96.png" sizes="96x96"/>
        <link rel="icon" type="image/svg+xml" href="/assets/favicons/favicon.svg"/>
        <link rel="shortcut icon" href="/assets/favicons/favicon.ico"/>
        <link rel="apple-touch-icon" sizes="180x180" href="/assets/favicons/apple-touch-icon.png"/>
        <meta name="apple-mobile-web-app-title" content="NexSite template"/>
        <link rel="manifest" href="/assets/favicons/site.webmanifest"/>

        <!-- Preloads -->
        <link rel="preload" as="image" href="/assets/svgs/logo-black.svg">
        <link rel="preload" as="font" type="font/woff2" href="/assets/fonts/roboto-v29-latin-regular.woff2" crossorigin>
        <link rel="preload" as="font" type="font/woff2" href="/assets/fonts/roboto-v29-latin-700.woff2" crossorigin>

        <!-- Sitewide Stylesheets and Scripts -->
        <link rel="stylesheet" href="/assets/css/root.css">
        <script defer src="/assets/js/dark.js"></script>
        <script defer src="/assets/js/nav.js"></script>

        {% block head %}{% endblock %}

        <title>{{ title }}</title>
    </head>
    <body>
        <!--Screen reader skip main nav-->
        <a class="skip" aria-label="skip to main content" href="#main">Click To Skip To Main Content</a>

        {% include "sections/header.html" %}
        <main id="main">
            {% block body %}{% endblock %}
        </main>
        {% include "sections/footer.html" %}

    </body>
</html>
</file>

<file path="src/_includes/layouts/post.html">
{% extends "layouts/base.html" %}

{% block head %}
    <link rel="stylesheet" href="/assets/css/blog.css">

    <!-- To ensure proper validation, prevent errors, and encourage developers to check, schema's are an opt-in feature. They're very bespoke and requires some customising  -->
    <!-- Uncomment the code below to enable Structured Data, and test it when you deploy to Netlify - https://developers.google.com/search/docs/appearance/structured-data -->
    <!-- {% include "components/post-schema.html" %} -->
{% endblock %}

{% block body %}
    <!-- ============================================ -->
    <!--                   Banner                     -->
    <!-- ============================================ -->

    <div id="banner-310">
        <div class="cs-container"></div>
        <!--Background Image-->
        <picture class="cs-background">
            <!--Mobile Image-->
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | avif %}" type="image/avif">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | webp %}" type="image/webp">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | jpeg %}" type="image/jpeg">
            <!--Tablet Image-->
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | avif %}" type="image/avif">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | webp %}" type="image/webp">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | jpeg %}" type="image/jpeg">
            <!--Desktop Image-->
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | avif %}" type="image/avif">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | webp %}" type="image/webp">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" type="image/jpeg">
            <img src="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" alt="library" width="1920" height="482" decoding="async">
        </picture>
    </div>

    <!-- ============================================ -->
    <!--                Post Content                  -->
    <!-- ============================================ -->

    <div id="single-article">
        <div class="cs-container">
            <article class="cs-article-post">
                <picture class="cs-article-image">
                    <!--Mobile Image-->
                    <source media="(max-width: 600px)" srcset="{% getUrl image | resize({ width: 576, height: 400 }) | avif %}" type="image/avif">
                    <source media="(max-width: 600px)" srcset="{% getUrl image | resize({ width: 576, height: 400 }) | webp %}" type="image/webp">
                    <source media="(max-width: 600px)" srcset="{% getUrl image | resize({ width: 576, height: 400 }) | jpeg %}" type="image/jpeg">
                    <!--Tablet Image-->
                    <source media="(max-width: 1024px)" srcset="{% getUrl image | resize({ width: 1600, height: 614 }) | avif %}" type="image/avif">
                    <source media="(max-width: 1024px)" srcset="{% getUrl image | resize({ width: 1600, height: 614 }) | webp %}" type="image/webp">
                    <source media="(max-width: 1024px)" srcset="{% getUrl image | resize({ width: 1600, height: 614 }) | jpeg %}" type="image/jpeg">
                    <!--Desktop Image-->
                    <source media="(min-width: 1024px)" srcset="{% getUrl image | resize({ width: 1600, height: 800 }) | avif %}" type="image/avif">
                    <source media="(min-width: 1024px)" srcset="{% getUrl image | resize({ width: 1600, height: 800 }) | webp %}" type="image/webp">
                    <source media="(min-width: 1024px)" srcset="{% getUrl image | resize({ width: 1600, height: 800 }) | jpeg %}" type="image/jpeg">
                    <img src="{% getUrl image | resize({ width: 1600, height: 800 }) | jpeg %}" alt="{{ alt }}" width="800" height="400" loading="lazy" decoding="async" aria-hidden="true">
                </picture>
                <div class="cs-article-group">
                    <h1 class="cs-article-title">{{ title }}</h1>
                    <div class="cs-author-group">
                        <picture class="cs-author-img">
                            <img src="/assets/svgs/profile.svg" alt="Profile icon" width="32" height="32" decoding="async" loading="lazy" aria-hidden="true"/>
                        </picture>
                        <span class="cs-author-name">{{ author }}</span>
                        <span aria-hidden="true" class="cs-dot"></span>
                        <span class="cs-date">{{ date | postDate }}</span>
                    </div>
                </div>
                <section class="cs-article-content">
                    {{ content | safe }}
                </section>
            </article>
        </div>

        {% include 'components/featured-posts.html' %}
    </div>
{% endblock %}
</file>

<file path="src/_includes/sections/cta.html">
<!-- ============================================ -->
<!--                     CTA                      -->
<!-- ============================================ -->

<section id="cta-51">
    <div class="cs-container">
        <div class="cs-content">
            <span class="cs-topper">Contact Us</span>
            <h2 class="cs-title">Get It Done With Us Today</h2>
            <p class="cs-text">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quis at sit pellentesque molestie.  Diam, adipiscing ultrices eu turpis gravida.
            </p>
            <a href="/contact/" class="cs-button-solid">Get A Free Quote</a>
        </div>
    </div>
    <!-- Background Image-->
    <picture class="cs-picture">
        <!--Mobile Image-->
        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 812 }) | avif %}" type="image/avif">
        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 812 }) | webp %}" type="image/webp">
        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 812 }) | jpeg %}" type="image/jpeg">
        <!--Tablet Image-->
        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 750 }) | avif %}" type="image/avif">
        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 750 }) | webp %}" type="image/webp">
        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 750 }) | jpeg %}" type="image/jpeg">
        <!--Desktop Image-->
        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 555 }) | avif %}" type="image/avif">
        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 555 }) | webp %}" type="image/webp">
        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 555 }) | jpeg %}" type="image/jpeg">
        <img src="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 555 }) | jpeg %}" alt="cabinets" width="1920" height="426" loading="lazy" decoding="async">
    </picture>
</section>
</file>

<file path="src/_includes/sections/footer.html">
<!-- ============================================ -->
<!--                   Footer                     -->
<!-- ============================================ -->

<footer id="cs-footer-275">
    <div class="cs-container">
        <!-- Logo Group -->
        <div class="cs-logo-group">
            <a aria-label="go back to home" class="cs-logo" href="/">
                <img class="cs-logo-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/logo-light.svg" alt="NexSite logo" width="240" height="32">
            </a>
            <p class="cs-text">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi elementum tincidunt vitae velit dolor cras tellus nisl habitant. Consectetur pellentesque dignissim sed amet.
            </p>
            <div class="cs-social">
                <a class="cs-social-link" aria-label="visit google profile" href="{{ client.address.mapLink }}" target="_blank" rel="noopener">
                    <img class="cs-social-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/google.svg" alt="google" width="11" height="11">
                </a>
                <a class="cs-social-link" aria-label="visit facebook profile" href="{{ client.socials.facebook }}" target="_blank" rel="noopener">
                    <img class="cs-social-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/facebook.svg" alt="facebook" width="6" height="11">
                </a>
                <a class="cs-social-link" aria-label="visit instagram profile" href="{{ client.socials.instagram }}" target="_blank" rel="noopener">
                    <img class="cs-social-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/instagram.svg" alt="instagram" width="11" height="11">
                </a>
            </div>
        </div>
        <!-- Links -->
        <ul class="cs-nav">
            <li class="cs-nav-li">
                <span class="cs-header">Sitemap</span>
            </li>
            <li class="cs-nav-li">
                <a class="cs-nav-link" href="/">Home</a>
            </li>
            <li class="cs-nav-li">
                <a class="cs-nav-link" href="/about/">About</a>
            </li>
            <li class="cs-nav-li">
                <a class="cs-nav-link" href="/reviews/">Reviews</a>
            </li>
            <li class="cs-nav-li">
                <a class="cs-nav-link" href="/blog/">Blog</a>
            </li>
            <li class="cs-nav-li">
                <a class="cs-nav-link" href="/contact/">Contact</a>
            </li>
        </ul>
        <ul class="cs-nav">
            <li class="cs-nav-li">
                <span class="cs-header">Projects</span>
            </li>
            <li class="cs-nav-li">
                <a class="cs-nav-link" href="/project-one/">Project One</a>
            </li>
            <li class="cs-nav-li">
                <a class="cs-nav-link" href="/project-two/">Project Two</a>
            </li>
        </ul>
        <!-- Contact Info -->
        <ul class="cs-contact">
            <li class="cs-nav-li">
                <span class="cs-header">Contact</span>
            </li>
            <li class="cs-contact-li">
                <a class="cs-contact-link cs-address" href="{{ client.address.mapLink }}" target="_blank" rel="noopener">
                    {{ client.address.lineOne }}, <br>
                    {{ client.address.lineTwo }}, <br>
                    {{ client.address.city }}, {{ client.address.state }}
                    {{ client.address.zip }}
                </a>
            </li>
            <li class="cs-contact-li">
                <a class="cs-contact-link" href="tel:{{ client.phoneForTel }}">{{ client.phoneFormatted }}</a>
            </li>
            <li class="cs-contact-li">
                <a class="cs-contact-link" href="mailto:{{ client.email }}">{{ client.email }}</a>
            </li>
        </ul>
    </div>
</footer>
</file>

<file path="src/_includes/sections/header.html">
<!-- ============================================ -->
<!--                 Navigation                   -->
<!-- ============================================ -->

<header id="cs-navigation">
    <div class="cs-container">
        <!--Nav Logo-->
        <a href="/" class="cs-logo" aria-label="back to home">
            <img src="/assets/svgs/logo-black.svg" alt="NexSite logo" width="210" height="29" aria-hidden="true" decoding="async">
        </a>
        <!--Navigation List-->
        <nav class="cs-nav" role="navigation">
            <!--Mobile Nav Toggle-->
            <button class="cs-toggle" aria-label="mobile menu toggle">
                <div class="cs-box" aria-hidden="true">
                    <span class="cs-line cs-line1" aria-hidden="true"></span>
                    <span class="cs-line cs-line2" aria-hidden="true"></span>
                    <span class="cs-line cs-line3" aria-hidden="true"></span>
                </div>
            </button>
            <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how mnay there are-->
            <div class="cs-ul-wrapper">
                <ul id="cs-expanded" class="cs-ul" aria-expanded="false">
                    <li class="cs-li">
                        <a href="/" class="cs-li-link {% if page.url == "/" %} cs-active {% endif %}">
                            Home
                        </a>
                    </li>
                    <li class="cs-li">
                        <a href="/about/" class="cs-li-link {% if page.url == "/about/" %} cs-active {% endif %}">
                            About
                        </a>
                    </li>
                    <!--Copy and paste this cs-dropdown list item and replace any .cs-li with this cs-dropdown group to make a new dropdown and it will work-->
                    <li class="cs-li cs-dropdown">
                        <span class="cs-li-link {% if page.url == "/project-one/" or page.url == "/project-two/" %} cs-active {% endif %}">
                            Projects
                            <img class="cs-drop-icon" src="/assets/svgs/dropdown.svg" alt="dropdown icon" width="15" height="15" decoding="async" aria-hidden="true">
                        </span>
                        <ul class="cs-drop-ul">
                            <li class="cs-drop-li">
                                <a href="/project-one/" class="cs-li-link cs-drop-link">Project One</a>
                            </li>
                            <li class="cs-drop-li">
                                <a href="/project-two/" class="cs-li-link cs-drop-link">Project Two</a>
                            </li>
                        </ul>
                    </li>
                    <li class="cs-li">
                        <a href="/reviews/" class="cs-li-link {% if page.url == "/reviews/" %} cs-active {% endif %}">
                            Reviews
                        </a>
                    </li>
                    <li class="cs-li">
                        <a href="/blog/" class="cs-li-link {% if page.url == "/blog/" %} cs-active {% endif %}">
                            Blog
                        </a>
                    </li>
                    <li class="cs-li cs-hide-on-desktop">
                        <a href="/contact/" class="cs-li-link {% if page.url == "/contact/" %} cs-active {% endif %}">
                            Contact
                        </a>
                    </li>
                </ul>
            </div>
        </nav>
        <a href="/contact/" class="cs-button-solid cs-nav-button">Contact Us</a>
        <!--Dark Mode toggle, uncomment button code if you want to enable a dark mode toggle-->
        <button id="dark-mode-toggle" aria-label="dark mode toggle">
            <img class="cs-moon" aria-hidden="true" src="/assets/svgs/moon.svg" decoding="async" alt="moon" width="15" height="15">
            <img class="cs-sun" aria-hidden="true" src="/assets/svgs/sun.svg" decoding="async" alt="sun" width="15" height="15">
        </button>
    </div>
</header>
</file>

<file path="src/admin/config.yml">
# Replace the "backend" object below with the snippet from DecapBridge. We need something here to get the CMS to work locally, but this alone won't work in production
backend:
    name: git-gateway

# Keep this to allow you to edit the cms locally
local_backend: true

# change url to a link to the image you want to use, no file paths, must be a URL
logo_url: https://codestitch.app/frontend/images/logo.png

# Image folders
media_folder: "src/assets/images/blog"
public_folder: "/assets/images/blog"

# Decap CMS Collections
collections:
    - name: "blog"
      label: "Blog"
      folder: "src/content/blog"
      create: true
      slug: "{{slug}}"
      fields:
          - { label: "Title", name: "title", widget: "string" }
          - {
                label: "URL Slug",
                name: "url",
                widget: "string",
                hint: 'Specify where the page will be written to. If you use "Blog Post", the post will be accessible from "blog/blog-post"',
            }
          - { label: "Description", name: "description", widget: "string" }
          - { label: "Author", name: "author", widget: "string" }
          - { label: "Date", name: "date", widget: "datetime" }
          - { label: "Tags", name: "tags", widget: "list", default: ["post"] }
          - { label: "Featured Image", name: "image", widget: "image" }
          - { label: "Image Caption", name: "imageAlt", widget: "string" }
          - { label: "Body", name: "body", widget: "markdown" }
</file>

<file path="src/admin/decap-preview-styles.css">
/* This style sheet is used to style the blog preview in the Decap CMS admin panel. */
/* THe classses should match the elements created in the Decap CMS preview pane script in admin.astro */

:root {
	--primary: hsl(80, 90%, 55%);
	--primaryLight: hsl(80, 60%, 40%);
	--secondary: #001f3f;
	--secondaryLight: #001f3f;
	--headerColor: #1a1a1a;
	--bodyTextColor: #4e4b66;
	--bodyTextColorWhite: #fafbfc;

	/* 13px - 16px */
	--topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
	/* 31px - 49px */
	--headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
	--bodyFontSize: 1rem;

	/* 60px - 100px top and bottom */
	--sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
}

.frame-content {
	font-family: "Roboto", sans-serif;
	line-height: 1.6em;
}

.frame-content h1,
.frame-content h2,
.frame-content h3,
.frame-content h4,
.frame-content h5,
.frame-content h6 {
	font-family: "Roboto", sans-serif;
	color: var(--headerColor);
}

.frame-content img {
	max-width: 100%;
}

.frame-content .blog {
	padding: 2rem;
	max-width: 48rem;
	margin-inline: auto;
}

.frame-content .blog .title {
	margin-top: 40px;
}

.frame-content .blog .cover {
	border-radius: 0.5em;
	min-width: 100%;
	height: clamp(200px, 30vw, 400px);
	margin-bottom: 50px;
	object-fit: cover;
}

.frame-content .blog .metadata {
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 1rem;
	margin-bottom: 50px;
	color: var(--bodyTextColor);
}

.frame-content .blog .metadata .author {
	margin: 0;
	font-size: 0.875rem;
}

.frame-content .blog .metadata .dot {
	display: block;
	width: 3px;
	height: 3px;
	background-color: var(--primary);
	border-radius: 50%;
	margin-bottom: 1px;
}

.frame-content .blog .metadata .date {
	font-size: 0.875rem;
}

.frame-content .blog .divider {
	margin-top: 0;
	margin-bottom: 1.5625em;
	background-color: #a2a0a0;
}

.frame-content .blog .markdown {
	margin-top: 3rem;
	max-width: 80ch;
}

.frame-content .blog .markdown h1,
.frame-content .blog .markdown h2,
.frame-content .blog .markdown h3,
.frame-content .blog .markdown h4,
.frame-content .blog .markdown h5,
.frame-content .blog .markdown h6 {
	color: var(--headerColor);
}

.frame-content .blog .markdown a {
	color: var(--bodyTextColor);
}

.frame-content .blog .markdown a:hover {
	color: var(--primary);
	text-decoration-color: var(--primary);
}

.frame-content .blog .markdown *:not(pre *, .admonition *, details *, blockquote *, span, a, h1, h2, h3, h4, h5, h6) {
	color: var(--bodyTextColor);
}

.frame-content .blog .markdown pre {
	padding: 1rem;
	margin: 1rem 0;
	background-color: #24292e;
	color: #e1e4e8 !important;
	overflow-x: auto;
	border-radius: 0.5em;
}
</file>

<file path="src/admin/index.html">
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <script crossorigin src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

    <title>Content Manager</title>
</head>

<body>
    <script src="https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js"></script>

    <!-- Decap CMS preview pane script -->
    <!-- Edit this script to customize the preview pane for your blog posts.  -->
    <!-- Documentation: https://decapcms.org/docs/customization/ -->
    <script type="text/babel">
        const BlogPreview = createClass({
            render: function () {
                // Get all the props from the collection
                const data = this.props.entry.get("data").toJS();
                const { title, author, date: rawDate, image } = data;
                const date = typeof rawDate === "string" ? new Date(rawDate) : rawDate;
                let formattedDate = "";
                if (date) {
                    formattedDate = Intl.DateTimeFormat("en-US", {
                        month: "long",
                        day: "numeric",
                        year: "numeric"
                    }).format(date);
                }

                const cover = this.props.getAsset(image);

                // Create elements for the preview pane in JSX, to be processed by Babel
                return (
                    <div className="blog">
                        <h1 className="title">{title}</h1>

                        <div className="metadata">
                            <span className="author">{author}</span>
                            <span className="dot"></span>
                            <span className="date">{formattedDate}</span>
                        </div>

                        <img src={cover?.toString()} className="cover" alt="Cover" />

                        <hr className="divider" />

                        <div className="markdown">
                            {this.props.widgetFor("body")}
                        </div>
                    </div>
                );
            }
        });

        // Register the elements and styles for the "blog" collection
        CMS.registerPreviewTemplate("blog", BlogPreview);
        CMS.registerPreviewStyle("/admin/decap-preview-styles.css");
    </script>
</body>

</html>
</file>

<file path="src/assets/favicons/favicon.svg">
<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" width="919" height="812"><svg width="919" height="812" viewBox="0 0 919 812" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="0.00012207" width="919" height="812" rx="32" fill="white"></rect>
<path d="M801.38 32C710.417 32 573.371 198.163 573.371 198.163L459.433 336.676L402.398 406L430.849 440.595L316.911 579.109L208.583 447.541C188.548 423.231 188.548 388.769 208.583 364.459L422.968 103.995C446.877 75.01 425.639 32 387.304 32H117.487C70.3355 32 32.0001 69.2664 32.0001 115.081V696.919C32.0001 742.867 72.7398 780 117.487 780C208.45 780 345.496 613.837 345.496 613.837L459.433 475.324L516.469 406L488.018 371.405L601.956 232.891L710.283 364.459C730.319 388.769 730.319 423.231 710.283 447.541L496.032 708.005C472.123 736.99 493.361 780 531.696 780H801.513C848.665 780 887 742.734 887 696.919V115.081C887 69.1329 846.26 32 801.513 32H801.38Z" fill="#09293E"></path>
</svg><style>@media (prefers-color-scheme: light) { :root { filter: none; } }
@media (prefers-color-scheme: dark) { :root { filter: none; } }
</style></svg>
</file>

<file path="src/assets/favicons/site.webmanifest">
{
  "name": "NexSite template",
  "short_name": "NexSite",
  "icons": [
    {
      "src": "/assets/favicons/web-app-manifest-192x192.png",
      "sizes": "192x192",
      "type": "image/png",
      "purpose": "maskable"
    },
    {
      "src": "/assets/favicons/web-app-manifest-512x512.png",
      "sizes": "512x512",
      "type": "image/png",
      "purpose": "maskable"
    }
  ],
  "theme_color": "#ffffff",
  "background_color": "#ffffff",
  "display": "standalone"
}
</file>

<file path="src/assets/js/dark.js">
//
//    The Dark Mode System
//

// helper functions to toggle dark mode
function enableDarkMode() {
    document.body.classList.add("dark-mode");
    localStorage.setItem("theme", "dark");
}
function disableDarkMode() {
    document.body.classList.remove("dark-mode");
    localStorage.setItem("theme", "light");
}

// determines a new users dark mode preferences
function detectColorScheme() {
    // default to the light theme
    let theme = "light";

    // check localStorage for a saved 'theme' variable. if it's there, the user has visited before, so apply the necessary theme choices
    if (localStorage.getItem("theme")) {
        theme = localStorage.getItem("theme");
    }
    // if it's not there, check to see if the user has applied dark mode preferences themselves in the browser
    else if (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches) {
        theme = "dark";
    }

    // if there is no preference set, the default of light will be used. apply accordingly
    theme === "dark" ? enableDarkMode() : disableDarkMode();
}

// run on page load
detectColorScheme();

// add event listener to the dark mode button toggle
document.getElementById("dark-mode-toggle").addEventListener("click", () => {
    // on click, check localStorage for the dark mode value, use to apply the opposite of what's saved
    localStorage.getItem("theme") === "light" ? enableDarkMode() : disableDarkMode();
});
</file>

<file path="src/assets/js/nav.js">
// Select DOM elements
const bodyElement = document.querySelector("body");
const navbarMenu = document.querySelector("#cs-navigation");
const hamburgerMenu = document.querySelector("#cs-navigation .cs-toggle");

// Function to toggle the aria-expanded attribute
function toggleAriaExpanded(element) {
    const isExpanded = element.getAttribute("aria-expanded");
    element.setAttribute("aria-expanded", isExpanded === "false" ? "true" : "false");
}

// Function to toggle the menu open or closed
function toggleMenu() {
    hamburgerMenu.classList.toggle("cs-active");
    navbarMenu.classList.toggle("cs-active");
    bodyElement.classList.toggle("cs-open");
    toggleAriaExpanded(hamburgerMenu);
}

// Add click event listener to the hamburger menu
hamburgerMenu.addEventListener("click", toggleMenu);

// Add click event listener to the navbar menu to handle clicks on the pseudo-element
navbarMenu.addEventListener("click", function (event) {
    if (event.target === navbarMenu && navbarMenu.classList.contains("cs-active")) {
        toggleMenu();
    }
});

// Function to handle dropdown toggle
function toggleDropdown(element) {
    element.classList.toggle("cs-active");
    const dropdownButton = element.querySelector(".cs-dropdown-button");
    if (dropdownButton) {
        toggleAriaExpanded(dropdownButton);
    }
}

// Add event listeners to each dropdown element for accessibility
const dropdownElements = document.querySelectorAll(".cs-dropdown");
dropdownElements.forEach(element => {
    let escapePressed = false;

    element.addEventListener("focusout", function (event) {
        // Skip the focusout logic if escape was pressed
        if (escapePressed) {
            escapePressed = false;
            return;
        }

        // If the focus has moved outside the dropdown, remove the active class from the dropdown 
        if (!element.contains(event.relatedTarget)) {
            element.classList.remove("cs-active");
            const dropdownButton = element.querySelector(".cs-dropdown-button");

            if (dropdownButton) {
                toggleAriaExpanded(dropdownButton);
            }
        }
    });

    element.addEventListener("keydown", function (event) {
        if (element.classList.contains("cs-active")) {
            event.stopPropagation();
        }

        // Pressing Enter or Space will toggle the dropdown and adjust the aria-expanded attribute
        if (event.key === "Enter" || event.key === " ") {
            event.preventDefault();
            toggleDropdown(element);
        }

        // Pressing Escape will remove the active class from the dropdown. The stopPropagation above will stop the hamburger menu from closing
        if (event.key === "Escape") {
            escapePressed = true;
            toggleDropdown(element);
        }
    });

    // Handles dropdown menus on mobile - the matching media query (max-width: 63.9375rem) is necessary so that clicking the dropdown button on desktop does not add the active class and thus interfere with the hover state
    const maxWidthMediaQuery = window.matchMedia("(max-width: 63.9375rem)");
    if (maxWidthMediaQuery.matches) {
        element.addEventListener("click", () => toggleDropdown(element));
    }
});

// Pressing Enter will redirect to the href
const dropdownLinks = document.querySelectorAll(".cs-drop-li > .cs-li-link");
dropdownLinks.forEach(link => {
    link.addEventListener("keydown", function (event) {
        if (event.key === "Enter") {
            window.location.href = this.href;
        }
    });
});

// If you press Escape and the hamburger menu is open, close it
document.addEventListener("keydown", (event) => {
    if (event.key === "Escape" && hamburgerMenu.classList.contains("cs-active")) {
        toggleMenu();
    }
});
</file>

<file path="src/assets/less/about.less">
// ─────────────────────────────────────────────────────────────────────────────
// PAGE STYLES
// Interior pages have their own stylesheet for styles that only exist on
// that page. Any styles shared between pages, including repeated sections,
// should go into root.less
// ─────────────────────────────────────────────────────────────────────────────

/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #RPsbs-313 {
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (542/16rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-text {
            margin-bottom: (16/16rem);
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-quote {
            margin: 0 0 (32/16rem) 0;
            /* 16px - 32px */
            padding: clamp(1rem, 3vw, 2rem);
            background-color: #f7f7f7;
            border-radius: (16/16rem);
            position: relative;
        }

        .cs-quote-text {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            margin: 0 0 (16/16rem);
            color: #767676;
            display: block;
        }

        .cs-name {
            font-size: (16/16rem);
            line-height: 1.2em;
            text-transform: uppercase;
            font-weight: bold;
            margin: 0 0 (4/16rem);
            color: var(--headerColor);
            display: block;
        }

        .cs-job {
            font-size: (14/16rem);
            line-height: 1.5em;
            color: #767676;
            display: block;
        }

        .cs-quote-icon {
            /* 60px - 136px */
            width: clamp(3.75rem, 10vw, 8.5rem);
            height: auto;
            position: absolute;
            bottom: (0/16rem);
            /* 16px - 32px */
            right: clamp(1rem, 4vw, 2rem);
        }

        .cs-image-group {
            /* scaling the font size with the view width */
            font-size: ~"min(2.31vw, .7em)";
            /* using ems so we can use font size to scale the whole section */
            width: (631/16em);
            height: (636/16em);
            position: relative;
        }

        .cs-picture {
            border-radius: (24/16em);
            /* clips img tag corners */
            overflow: hidden;
            position: absolute;
            display: block;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* makes image act like a background image */
                object-fit: cover;
            }
        }

        .cs-picture1 {
            width: (522/16em);
            height: (581/16em);
            left: 0;
            top: 0;
        }

        .cs-picture2 {
            width: (414/16em);
            height: (400/16em);
            background-color: #fff;
            box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 40px;
            /* 6px - 12px */
            border: clamp(0.375em, 1.5vw, 0.75em) solid #fff;
            right: 0;
            bottom: 0;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #RPsbs-313 {
        .cs-container {
            flex-flow: row;
            justify-content: space-between;
            gap: (52/16rem);
        }

        .cs-image-group {
            font-size: ~"min(1.2vw, 1em)";
            flex: none;
        }

        .cs-content {
            margin: 0;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #RPsbs-313 {
            .cs-image-group {
                &:before,
                &:after {
                    background: var(--accent);
                }
            }

            .cs-picture2 {
                background-color: var(--dark);
                /* 6px - 12px */
                border: clamp(0.375em, 1.5vw, 0.75em) solid var(--dark);
            }

            .cs-topper {
                color: var(--primaryLight);
            }

            .cs-title,
            .cs-text,
            .cs-h3,
            .cs-quote-text,
            .cs-name {
                color: var(--bodyTextColorWhite);
            }

            .cs-quote {
                background-color: var(--accent);
            }

            .cs-job {
                color: var(--bodyTextColorWhite);
                opacity: 0.8;
            }

            .cs-quote-icon {
                opacity: 0.2;
            }
        }
    }
}
</file>

<file path="src/assets/less/blog.less">
// ─────────────────────────────────────────────────────────────────────────────
// PAGE STYLES
// Interior pages have their own stylesheet for styles that only exist on
// that page. Any styles shared between pages, including repeated sections,
// should go into root.less
// ─────────────────────────────────────────────────────────────────────────────

/*-- -------------------------- -->
<---          Sidebar           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #blog-sidebar {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        max-width: (800/16rem);
        width: 100%;
        box-sizing: border-box;
        gap: (20/16rem);

        .cs-featured-group {
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: center;
            border: 1px solid #ebebeb;
            border-radius: (8/16rem);
            width: 100%;
            padding: (32/16rem) (20/16rem);
        }

        .cs-sidebar-header {
            position: relative;
            display: block;
            margin-bottom: (16/16rem);
            font-size: (20/16rem);
            font-weight: bold;
            color: var(--headerColor);
            text-align: center;

            &:after {
                position: relative;
                content: "";
                display: block;
                border-radius: (4/16rem);
                margin: (16/16rem) auto;
                background: var(--headerColor);
                height: 3px;
                width: (64/16rem);
            }
        }

        .cs-sidebar-link {
            display: flex;
            justify-content: flex-start;
            align-items: center;
            border-bottom: 1px solid #ebebeb;
            width: 100%;
            padding: (24/16rem) 0;
            text-decoration: none;
            gap: (24/16rem);

            &:nth-of-type(1) {
                padding-top: 0;
            }

            &:last-of-type {
                border: none;
                padding-bottom: 0;
            }
        }

        .cs-sidebar-img {
            position: relative;
            display: block;
            border-radius: 50%;
            height: (60/16rem);
            width: (60/16rem);
            overflow: hidden;
            flex: none;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }

        .cs-sidebar-title {
            display: block;
            margin: 0;
            margin-bottom: (4/16rem);
            text-decoration: none;
            font-size: (16/16rem);
            line-height: 1.5em;
            font-weight: 700;
            color: var(--headerColor);
        }

        .cs-sidebar-date {
            display: block;
            font-size: (14/16rem);
            line-height: 1.5em;
            color: var(--bodyTextColor);
        }

        .cs-toc {
            display: flex;
            flex-direction: column;
            margin-top: 1rem;
            width: 100%;
            padding: 0;
            list-style: none;
            font-size: (14/16rem);
            gap: 1rem;
        }

        .cs-toc-item {
            margin: 0;
            padding: 0;
            list-style: none;

            &.cs-active {
                border-left: 4px solid var(--primary);
                padding-left: (16/16rem);

                .cs-toc-link {
                    font-weight: 700;
                    color: var(--primary);
                }
            }
        }

        .cs-toc-link {
            display: block;
            width: 100%;
            text-decoration: none;
            color: var(--bodyTextColor);
            transition: color 0.2s ease-in-out;

            &:hover {
                color: var(--primary);
            }
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #blog-sidebar {
        position: sticky;
        top: 10rem;
        max-width: (360/16rem);
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #blog-sidebar {
            .cs-sidebar-header,
            .cs-toc-link,
            .cs-sidebar-title,
            .cs-sidebar-date {
                color: var(--bodyTextColorWhite);
            }

            .cs-sidebar-date {
                opacity: 0.8;
            }

            .cs-sidebar-header {
                &::after {
                    background-color: var(--bodyTextColorWhite);
                }
            }

            .cs-toc-item {
                &.cs-active {
                    border-color: var(--secondary);

                    .cs-toc-link {
                        color: var(--secondary);
                    }
                }
            }
        }
    }
}

/*-- -------------------------- -->
<---        Blog Listing        -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #blog-listing {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin: auto;
        max-width: (1280/16rem);
        width: 100%;
        padding: var(--sectionPadding);
        /* 48px - 64px */
        gap: clamp(3rem, 6vw, 4rem);

        .cs-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            width: 100%;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-article {
            display: block;
            width: 100%;
            overflow: hidden;
            flex: none;
        }

        .cs-article-image {
            position: relative;
            display: block;
            border-radius: (8/16rem) (8/16rem) 0 0;
            /* 200px - 400px */
            height: clamp(12.5rem, 30vw, 25rem);
            width: 100%;
            overflow: hidden;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }

        .cs-article-group {
            border: 1px solid #ebebeb;
            border-radius: 0 0 (8/16rem) (8/16rem);
            /* 30px - 50px */
            padding: clamp(1.875rem, 5vw, 3.125rem);
        }

        .cs-author-img {
            position: relative;
            display: block;
            border-radius: 50%;
            height: (32/16rem);
            width: (32/16rem);
            overflow: hidden;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }

        .cs-author-group {
            display: flex;
            justify-content: flex-start;
            align-items: center;
            gap: (12/16rem);
        }

        .cs-author-name,
        .cs-date {
            font-size: (14/16rem);
            line-height: 1.5em;
            color: var(--bodyTextColor);
        }

        .cs-dot {
            display: block;
            border-radius: 50%;
            background-color: var(--primary);
            height: 3px;
            width: 3px;
        }

        .cs-article-title {
            margin: (16/16rem) 0;
            /* 20px - 32px */
            font-size: clamp(1.25rem, 5vw, 2rem);
            line-height: 1.5em;
            font-weight: 700;
            color: var(--headerColor);
        }

        .cs-article-desc {
            margin: (16/16rem) 0 (32/16rem);
            font-size: (16/16rem);
            line-height: 1.5em;
            color: var(--bodyTextColor);
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #blog-listing {
        flex-direction: row;
        align-items: flex-start;

        .cs-article-title {
            max-width: (550/16rem);
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #blog-listing {
            .cs-article-title,
            .cs-author-name,
            .cs-date,
            .cs-article-desc {
                color: var(--bodyTextColorWhite);
            }

            .cs-author-name,
            .cs-date,
            .cs-article-desc {
                opacity: 0.8;
            }
        }
    }
}

/*-- -------------------------- -->
<---     Single Blog Article    -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #single-article {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin: auto;
        max-width: (1280/16rem);
        width: 100%;
        padding: var(--sectionPadding);
        gap: (64/16rem);

        .cs-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            width: 100%;
            gap: (64/16rem);
        }

        .cs-article-post {
            display: block;
            max-width: (800/16rem);
            width: 100%;
        }

        .cs-article-image {
            position: relative;
            display: block;
            border-radius: (8/16rem);
            margin: 0 0 (48/16rem);
            /* 200px - 400px */
            height: clamp(12.5rem, 30vw, 25rem);
            width: 100%;
            overflow: hidden;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }

        .cs-author-img {
            position: relative;
            display: block;
            border-radius: 50%;
            height: (32/16rem);
            width: (32/16rem);
            overflow: hidden;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }

        .cs-author-group {
            display: flex;
            justify-content: flex-start;
            align-items: center;
            gap: (12/16rem);
        }

        .cs-author-name,
        .cs-date {
            font-size: (14/16rem);
            line-height: 1.5em;
            color: var(--bodyTextColor);
        }

        .cs-dot {
            display: block;
            border-radius: 50%;
            background-color: var(--primary);
            height: (3/16rem);
            width: (3/16rem);
        }

        .cs-article-title {
            margin: 0 0 (16/16rem);
            max-width: (550/16rem);
            /* 20px - 39px */
            font-size: clamp(1.25rem, 5vw, 2.4375rem);
            line-height: 1.4em;
            font-weight: 700;
            color: var(--headerColor);
        }

        .cs-article-content {
            border-top: 1px solid #ebebeb;
            margin-top: (16/16rem);
            padding-top: (24/16rem);

            h1 {
                margin-bottom: (16/16rem);
                font-size: (32/16rem);
                line-height: 1.75em;
                font-weight: 700;
                color: var(--headerColor);
            }
        }

        .cs-article-group,
        .cs-article-content {
            h2 {
                margin-bottom: (16/16rem);
                font-size: (28/16rem);
                line-height: 1.5em;
                font-weight: 700;
                color: var(--headerColor);
            }

            h3 {
                margin-bottom: (16/16rem);
                font-size: (24/16rem);
                line-height: 1.5em;
                font-weight: 700;
                color: var(--primary);
            }

            h4,
            h5,
            h6 {
                margin-bottom: (16/16rem);
                font-size: (20/16rem);
                line-height: 1.5em;
                font-weight: 700;
                color: var(--headerColor);
            }

            p {
                margin: 0;
                margin-bottom: (16/16rem);
                font-size: (16/16rem);
                line-height: 1.6em;
                color: var(--bodyTextColor);
            }

            a:not(.cs-button-solid) {
                text-decoration: underline;
                font-size: inherit;
                color: var(--secondary);
            }

            .cs-button-solid {
                margin-bottom: (32/16rem);
            }

            ul,
            ol {
                margin: (16/16rem) 0;
                padding-left: (40/16rem);

                li {
                    margin-bottom: (16/16rem);
                    list-style: circle;
                    font-size: (16/16rem);
                    line-height: 1.6em;
                    color: var(--bodyTextColor);
                }
            }
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #single-article {
        flex-direction: row;
        align-items: flex-start;
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #single-article {
            .cs-article-group,
            .cs-article-content {
                h1,
                h2,
                h3,
                h4,
                h5,
                h6,
                p,
                span,
                li {
                    color: var(--bodyTextColorWhite);
                }

                p,
                span,
                li {
                    opacity: 0.8;
                }
            }
        }
    }
}
</file>

<file path="src/assets/less/contact.less">
// ─────────────────────────────────────────────────────────────────────────────
// PAGE STYLES
// Interior pages have their own stylesheet for styles that only exist on
// that page. Any styles shared between pages, including repeated sections,
// should go into root.less
// ─────────────────────────────────────────────────────────────────────────────

/*-- -------------------------- -->
<---          Contact           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #cs-contact-265 {
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            /* changes to 1280px at tablet */
            max-width: (550/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            margin: 0 0 (32/16rem) 0;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        #cs-form-265 {
            label {
                font-size: (16/16rem);
                line-height: 1.5em;
                font-weight: 700;
                /* 12px - 20px */
                margin-bottom: clamp(0.75rem, 1.3em, 1.25rem);
                color: var(--headerColor);
                display: flex;
                justify-content: center;
                align-items: flex-start;
                flex-direction: column;
            }

            .cs-label-message {
                /* 32px - 48px */
                margin-bottom: clamp(2rem, 6.3vw, 3rem);
            }

            input,
            textarea {
                font-size: (16/16rem);
                width: 100%;
                height: (64/16rem);
                margin-top: (4/16rem);
                padding-left: (20/16rem);
                border: 1px solid #b4b2c7;
                border-radius: (4/16rem);
                /* prevents border & padding from affecting height */
                box-sizing: border-box;
                transition: border 0.3s;

                &:hover {
                    border: 1px solid var(--primary);
                }
            }

            textarea {
                font-family: inherit;
                padding-top: (20/16rem);
                min-height: (120/16rem);
            }

            .cs-button-solid {
                width: 100%;
            }
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
            font-weight: 700;
            text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primary);
            border-radius: (4/16rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: "";
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-submit {
            width: 100%;
            border: none;
            &:hover {
                cursor: pointer;
            }
        }

        .cs-right-section {
            width: 100%;
            height: (320/16rem);
            /* 24px - 40px top & bottom */
            /* 20px - 40px left & right */
            padding: clamp(1.5rem, 3vw, 2.5rem) clamp(1.25rem, 3vw, 2.5rem);
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            border-radius: (4/16rem);
            /* cuts off corners on img tag */
            overflow: hidden;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: flex-end;
            position: relative;
        }

        .cs-header {
            /* 16px - 20px */
            font-size: clamp(1rem, 3vw, 1.25rem);
            line-height: 1.2em;
            font-weight: 700;
            margin-bottom: (8/16rem);
            color: var(--bodyTextColorWhite);
            display: block;
        }

        .cs-link {
            /* 16px - 20px */
            font-size: clamp(1rem, 3vw, 1.25rem);
            line-height: 1.2em;
            text-decoration: none;
            margin-bottom: (20/16rem);
            color: var(--bodyTextColorWhite);
            display: block;
            position: relative;

            &:before {
                /* Animated underline */
                content: "";
                width: 0%;
                height: 2px;
                /* current color of the parent */
                background: currentColor;
                opacity: 1;
                position: absolute;
                display: block;
                bottom: (-2/16rem);
                left: 0;
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }

            &:last-of-type {
                margin-bottom: 0;
            }
        }

        .cs-block {
            /* sends second address line to the bottom on its own line */
            display: block;
        }

        .cs-bg-picture {
            width: 100%;
            height: 100%;
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;
            transition: transform 0.6s;

            &:before {
                /* background color overlay */
                content: "";
                position: absolute;
                display: block;
                height: 100%;
                width: 100%;
                background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 100%);
                top: 0;
                left: 0;
                z-index: 1;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* Makes img tag act as a background image */
                object-fit: cover;
            }
        }
    }
}

/* Tablet - 700px */
@media only screen and (min-width: 43.75rem) {
    #cs-contact-265 {
        .cs-container {
            max-width: (1280/16rem);
        }

        #cs-form-265 {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            flex-wrap: wrap;

            label {
                width: 48%;
            }

            .cs-label-message {
                width: 100%;
            }
        }
    }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #cs-contact-265 {
        .cs-container {
            flex-direction: row;
            justify-content: space-between;
            align-items: flex-start;
            gap: (80/16rem);
        }

        .cs-left-section {
            max-width: (630/16rem);
        }

        #cs-form-265 {
            label {
                width: 100%;
            }
        }

        .cs-right-section {
            /* changes to 578px at 1300px wide */
            height: (686/16rem);
            width: 40vw;
            max-width: (542/16rem);
            /* prevents flexbox from squishing it */
            flex: none;

            &:hover {
                .cs-bg-picture {
                    transform: scale(1.1);
                }
            }
        }

        .cs-block {
            /* goes back to inline so it stays "in line" with the rest of the text */
            display: inline-block;
        }
    }
}

/* Small Desktop - 1300px */
@media only screen and (min-width: 81.25rem) {
    #cs-contact-265 {
        #cs-form-265 {
            column-gap: (0/16rem);
            label {
                width: 48%;
                max-width: (305/16rem);
            }

            .cs-label-message {
                max-width: 100%;
            }
        }

        .cs-right-section {
            height: (578/16rem);
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #cs-contact-265 {
            .cs-text,
            .cs-title {
                color: var(--bodyTextColorWhite);
            }

            #cs-form-265 {
                label,
                input,
                textarea {
                    background-color: transparent;
                    color: var(--bodyTextColorWhite);

                    &::placeholder {
                        /* lighten up the color of the text by 40%*/
                        filter: brightness(1.4);
                    }
                }
            }

            .cs-bg-picture {
                background-color: #000;

                img {
                    /* lets parent background-color bleed through and darken it */
                    opacity: 0.5;
                }
            }
        }
    }
}
</file>

<file path="src/assets/less/critical.less">
// ─────────────────────────────────────────────────────────────────────────────
// CRITICAL PAGE STYLES
// Above-the-fold and high-priority styles for the home page's landing section.
// Put the first section of the home page in here, so it loads immediately.
// The rest of the home page styles in local.css will be deferred and
// ─────────────────────────────────────────────────────────────────────────────

/*-- -------------------------- -->
<---           Hero             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #hero-143 {
        /* Centers button */
        text-align: center;
        /* 144px - 300px - leaving extra space for the navigation */
        padding: clamp(9rem, 25.95vw, 18.75rem) (16/16rem) 0;
        /* 130px - 450px */
        padding-bottom: clamp(12.125rem, 30.95vw, 28.125rem);
        position: relative;
        z-index: 1;
        /* Prevents white rectangle pseudos from overlapping the sections below */
        overflow: hidden;

        &:before {
            /* Left side of the triangle */
            content: "";
            width: (500/16rem);
            /* make really long so it covers the whole screen all the way to desktop */
            height: (4000/16rem);
            background: #fff;
            opacity: 1;
            transform: rotate(-67deg);
            transform-origin: center;
            position: absolute;
            display: block;
            bottom: (-2235/16rem);
            /* this makes the right edge sit at the 50% line at all times */
            right: 50%;
            z-index: 0;
        }

        &:after {
            /* Right side of the triangle */
            content: "";
            width: (500/16rem);
            height: (4000/16rem);
            background: #fff;
            opacity: 1;
            transform: rotate(67deg);
            transform-origin: center;
            position: absolute;
            display: block;
            bottom: (-2235/16rem);
            /* this makes the left edge sit at the 50% line at all times */
            left: 50%;
            z-index: 0;
        }

        .cs-background {
            width: 100%;
            height: 100%;
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -2;

            &:before {
                /* Overlay */
                content: "";
                width: 100%;
                height: 100%;
                background: #000;
                opacity: 0.7;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                z-index: 1;
                /* prevents the cursor from interacting with it */
                pointer-events: none;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
        }

        .cs-title {
            /* 39px - 61px */
            font-size: clamp(2.4375rem, 6.4vw, 3.8125rem);
            font-weight: 700;
            line-height: 1.2em;
            text-align: center;
            max-width: (829/16rem);
            /* 16px - 24px */
            margin: 0 auto clamp(1rem, 4vw, 1.5rem);
            color: #fff;
            position: relative;

            &:after {
                /* Divider Line */
                content: "";
                /* 60px - 100px */
                width: clamp(3.75rem, 9.5vw, 6.25rem);
                /* 4px - 8px */
                height: clamp(0.25rem, 0.8vw, 0.5rem);
                /* 16px - 24px */
                margin: clamp(1rem, 4vw, 1.5rem) auto clamp(1rem, 4vw, 1.5rem);
                background: var(--primary);
                opacity: 1;
                position: relative;
                display: block;
            }
        }

        .cs-text {
            /* 16px - 25px */
            font-size: clamp(1rem, 1.95vw, 1.5625rem);
            line-height: 1.5em;
            text-align: center;
            width: 100%;
            /* 464px - 800px */
            max-width: clamp(29rem, 60vw, 50rem);
            margin: 0 auto;
            /* 40px - 48px */
            margin-bottom: clamp(2.5rem, 4vw, 3rem);
            color: #fff;
        }
    }
}

/* Desktop - 1300px (To make image background parallax) */
@media only screen and (min-width: 81.25rem) {
    #hero-143 {
        background: url("/assets/images/landing.jpg");
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        /* makes the parallax effect */
        background-attachment: fixed;

        .cs-background {
            img {
                display: none;
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #hero-143 {
            &:before,
            &:after {
                background: var(--dark);
            }

            .cs-background {
                &:before {
                    opacity: 0.85;
                }
            }
        }
    }
}

/*-- -------------------------- -->
<---         Services           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #h-services-143 {
        /* 40px - 100px */
        padding: 0 (16/16em) clamp(2.5rem, 7.9vw, 6.25rem) (16/16rem);
        position: relative;
        /* give a higher z index than the hero so it can sit on top */
        z-index: 10;

        .cs-card-group {
            width: 100%;
            max-width: (465/16rem);
            margin: 0 auto 0;
            /* negative margin pulls it up on top of the hero section */
            /* -46px to -76px - we're calculating whatever clamp is and multiplying by -1
            to make the value negative since clamp doesn't work with negative values */
            margin-top: ~"calc(clamp(5rem, 13vw, 4.75rem)*-1)";
            /* 40px - 60px top and bottom, 16px - 44px left & right */
            padding: clamp(2.5rem, 4.7vw, 3.75rem) clamp(1rem, 5.3vw, 2.75rem);
            box-shadow: 0px 20px 40px 0px rgba(0, 0, 0, 0.05);
            border-radius: (5/16rem);
            border-top: 8px solid var(--primary);
            background-color: #fff;
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
        }

        .cs-item {
            list-style: none;
            margin: 0 auto (32/16rem);
            width: 100%;
            max-width: (360/16rem);

            &:last-of-type {
                margin-bottom: 0;
            }
        }

        .cs-icon {
            /* 68px - 88px */
            width: clamp(4.25rem, 8.8vw, 5.5rem);
            /* 68px - 88px */
            height: clamp(4.25rem, 8.8vw, 5.5rem);
            margin: auto;
            /* 20px - 24px */
            margin-bottom: clamp(1.25rem, 5vw, 1.5rem);
            background: var(--primary);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;

            img {
                /* 44px - 52px */
                width: clamp(2.75rem, 5.8vw, 3.25rem);
                height: auto;
            }
        }

        .cs-title {
            font-size: (20/16rem);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: center;
            margin: 0 auto (8/16rem);
            color: var(--headerColor);
        }

        .cs-text {
            font-size: (16/16rem);
            text-align: center;
            line-height: 1.5em;
            max-width: (360/16rem);
            margin: 0 auto;
            color: var(--bodyTextColor);
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #h-services-143 {
        .cs-card-group {
            max-width: (784/16rem);
            /* -76px to -320px - we're calculating whatever clamp is and multiplying by -1
               to make the value negative since clamp doesn't work with negative values */
            margin-top: ~"calc(clamp(4.75rem, 20vw, 20rem)*-1)";
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            column-gap: (40/16rem);
        }

        .cs-item {
            width: 45%;
            max-width: (314/16rem);
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }
    }
}

/* Desktop - 1300px */
@media only screen and (min-width: 81.25rem) {
    #h-services-143 {
        .cs-card-group {
            max-width: (1280/16rem);
            flex-wrap: nowrap;
        }

        .cs-item {
            margin: 0;
            &:last-of-type {
                margin-bottom: 0;
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #h-services-143 {
            .cs-card-group {
                background: var(--medium);
            }

            .cs-icon {
                background: var(--darkTint);
            }

            .cs-title {
                color: #fff;
            }

            .cs-text {
                color: #fff;
            }
        }
    }
}
</file>

<file path="src/assets/less/local.less">
// ─────────────────────────────────────────────────────────────────────────────
// HOME PAGE STYLES
// Below-the-fold styles for the homepage that load after critical styles.
// The first section of the home page should go in critical.less, while the
// rest of the home page styles go in here.
// ─────────────────────────────────────────────────────────────────────────────

/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #RPsbs-313,
    #RPsbsr-313 {
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (542/16rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-text {
            margin-bottom: (16/16rem);
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-quote {
            margin: 0 0 (32/16rem) 0;
            /* 16px - 32px */
            padding: clamp(1rem, 3vw, 2rem);
            background-color: #f7f7f7;
            border-radius: (16/16rem);
            position: relative;
        }

        .cs-quote-text {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            margin: 0 0 (16/16rem);
            color: #767676;
            display: block;
        }

        .cs-name {
            font-size: (16/16rem);
            line-height: 1.2em;
            text-transform: uppercase;
            font-weight: bold;
            margin: 0 0 (4/16rem);
            color: var(--headerColor);
            display: block;
        }

        .cs-job {
            font-size: (14/16rem);
            line-height: 1.5em;
            color: #767676;
            display: block;
        }

        .cs-quote-icon {
            /* 60px - 136px */
            width: clamp(3.75rem, 10vw, 8.5rem);
            height: auto;
            position: absolute;
            bottom: (0/16rem);
            /* 16px - 32px */
            right: clamp(1rem, 4vw, 2rem);
        }

        .cs-image-group {
            /* scaling the font size with the view width */
            font-size: ~"min(2.31vw, .7em)";
            /* using ems so we can use font size to scale the whole section */
            width: (631/16em);
            height: (636/16em);
            position: relative;
        }

        .cs-picture {
            border-radius: (24/16em);
            /* clips img tag corners */
            overflow: hidden;
            position: absolute;
            display: block;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* makes image act like a background image */
                object-fit: cover;
            }
        }

        .cs-picture1 {
            width: (522/16em);
            height: (581/16em);
            left: 0;
            top: 0;
        }

        .cs-picture2 {
            width: (414/16em);
            height: (400/16em);
            background-color: #fff;
            box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 40px;
            /* 6px - 12px */
            border: clamp(0.375em, 1.5vw, 0.75em) solid #fff;
            right: 0;
            bottom: 0;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #RPsbs-313,
    #RPsbsr-313 {
        .cs-container {
            flex-flow: row;
            justify-content: space-between;
            gap: (52/16rem);
        }

        .cs-image-group {
            font-size: ~"min(1.2vw, 1em)";
            flex: none;
        }

        .cs-content {
            margin: 0;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #RPsbs-313,
        #RPsbsr-313 {
            .cs-image-group {
                &:before,
                &:after {
                    background: var(--accent);
                }
            }

            .cs-picture2 {
                background-color: var(--dark);
                /* 6px - 12px */
                border: clamp(0.375em, 1.5vw, 0.75em) solid var(--dark);
            }

            .cs-topper {
                color: var(--primaryLight);
            }

            .cs-title,
            .cs-text,
            .cs-h3,
            .cs-quote-text,
            .cs-name {
                color: var(--bodyTextColorWhite);
            }

            .cs-quote {
                background-color: var(--accent);
            }

            .cs-job {
                color: var(--bodyTextColorWhite);
                opacity: 0.8;
            }

            .cs-quote-icon {
                opacity: 0.2;
            }
        }
    }
}

/*-- -------------------------- -->
<---    Side By Side Reverse    -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #RPsbsr-313 {
        background-color: #f7f7f7;
        .cs-picture1 {
            left: auto;
            right: 0;
        }

        .cs-picture2 {
            right: auto;
            left: 0;
        }

        .cs-quote {
            background-color: rgba(0, 0, 0, 0.05);
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #RPsbsr-313 {
        .cs-image-group {
            /* sends it to the right in the 2nd position */
            order: 2;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #RPsbsr-313 {
            background-color: rgba(0, 0, 0, 0.2);
        }
    }
}

/*-- -------------------------- -->
<---          Gallery           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #gallery-48 {
        padding: var(--sectionPadding);
        position: relative;

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-title {
            margin: 0;
            max-width: 20ch;
        }

        .cs-image-group {
            /* used rem so it doesn't scale with the font size of on parent */
            font-size: ~"min(1.1vw, 1em)";
            width: 100%;
            padding: 0;
            margin: 0;
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            /* 8px - 20px */
            gap: clamp(0.5rem, 2vw, 1.25rem);
        }

        .cs-row {
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: center;
            /* 8px - 20px */
            gap: clamp(0.5rem, 2vw, 1.25rem);
        }

        .cs-picture {
            width: 100%;
            position: relative;
            display: block;
            border-radius: (8/16rem);
            overflow: hidden;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }

        .cs-row-1 {
            .cs-picture-1 {
                height: (567/16em);
            }

            .cs-picture-2 {
                height: (629/16em);
            }

            .cs-picture-3 {
                height: (512/16em);
            }
        }

        .cs-row-2 {
            .cs-picture-1 {
                height: (492/16em);
            }

            .cs-picture-2 {
                height: (517/16em);
            }

            .cs-picture-3 {
                height: (629/16em);
            }
        }

        .cs-row-3 {
            .cs-picture-1 {
                height: (625/16em);
            }

            .cs-picture-2 {
                height: (452/16em);
            }

            .cs-picture-3 {
                height: (629/16em);
            }
        }
    }
}

/* Dark mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #gallery-48 {
            .cs-title {
                color: var(--bodyTextColorWhite);
            }
        }
    }
}

/*-- -------------------------- -->
<---          Reviews           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #reviews-67 {
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-card-group {
            padding: 0;
            margin: 0;
            display: flex;
            flex-direction: column;
            column-gap: (20/16rem);
            row-gap: (64/16rem);
        }

        .cs-item {
            text-align: left;
            list-style: none;
            width: 100%;
            max-width: (630/16rem);
            /* pushes up the same amount the cs-item-img overlaps the card */
            margin: (40/16rem) 0 0 0;
            /* Padding L & R - 16px - 32px */
            padding: (60/16rem) clamp(1rem, 3.2vw, 2rem) 0;
            /* 32px - 40px */
            padding-bottom: clamp(2rem, 5.4vw, 2.5rem);
            box-shadow: 0px 20px 39px 0px rgba(0, 0, 0, 0.05);
            border-radius: (8/16rem);
            background: #fff;
            position: relative;
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            align-items: center;
            /* Prevents padding from affecting height & width */
            box-sizing: border-box;

            &:last-of-type {
                margin-bottom: 0;
            }
        }

        .cs-item-img {
            width: (80/16rem);
            height: (80/16rem);
            position: absolute;
            top: (-40/16rem);
        }

        .cs-item-text {
            font-size: (16/16rem);
            line-height: 1.5em;
            margin: 0 0 (20/16rem);
            padding-bottom: (20/16rem);
            color: var(--bodyTextColor);
            border-bottom: 1px solid #e8e9ec;
        }

        .cs-info {
            width: 100%;
            /* margin-top auto pushes up against the rest of the card, that way when one card has more text than the other, the reviewer info is always pushed to the bottom and lined up with the rest of them.  This ensures better responsiveness for changing content */
            margin: auto 0 0 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .cs-flex-group {
            width: 100%;
            margin: 0;
        }

        .cs-name {
            font-size: (16/16rem);
            line-height: 1.5em;
            font-weight: 700;
            width: 40%;
            margin: 0;
            display: block;
            color: var(--headerColor);
        }

        .cs-desc {
            font-size: (14/16rem);
            font-weight: 400;
            color: #7d799c;
            display: block;
        }

        .cs-item-stars {
            width: (96/16rem);
            height: (16/16rem);
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
            font-weight: 700;
            text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primary);
            border-radius: (4/16rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: "";
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #reviews-67 {
        .cs-card-group {
            flex-direction: row;
            justify-content: space-between;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #reviews-67 {
            .cs-title,
            .cs-text,
            .cs-item-text,
            .cs-name {
                color: var(--bodyTextColorWhite);
            }

            .cs-item {
                background: rgba(0, 0, 0, 0.2);
            }

            .cs-desc {
                color: var(--primaryLight);
            }
        }
    }
}
</file>

<file path="src/assets/less/projects.less">
// ─────────────────────────────────────────────────────────────────────────────
// PAGE STYLES
// Interior pages have their own stylesheet for styles that only exist on
// that page. Any styles shared between pages, including repeated sections,
// should go into root.less
// ─────────────────────────────────────────────────────────────────────────────

/*-- -------------------------- -->
<---          Gallery           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #gallery-48 {
        padding: var(--sectionPadding);
        position: relative;

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .cs-image-group {
            /* used rem so it doesn't scale with the font size of on parent */
            font-size: ~"min(1.1vw, 1em)";
            width: 100%;
            padding: 0;
            margin: 0;
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            /* 8px - 20px */
            gap: clamp(0.5rem, 2vw, 1.25rem);
        }

        .cs-row {
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: center;
            /* 8px - 20px */
            gap: clamp(0.5rem, 2vw, 1.25rem);
        }

        .cs-picture {
            width: 100%;
            position: relative;
            display: block;
            border-radius: (8/16rem);
            overflow: hidden;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }

        .cs-row-1 {
            .cs-picture-1 {
                height: (567/16em);
            }

            .cs-picture-2 {
                height: (629/16em);
            }

            .cs-picture-3 {
                height: (512/16em);
            }
        }

        .cs-row-2 {
            .cs-picture-1 {
                height: (492/16em);
            }

            .cs-picture-2 {
                height: (517/16em);
            }

            .cs-picture-3 {
                height: (629/16em);
            }
        }

        .cs-row-3 {
            .cs-picture-1 {
                height: (625/16em);
            }

            .cs-picture-2 {
                height: (452/16em);
            }

            .cs-picture-3 {
                height: (629/16em);
            }
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
            font-weight: 700;
            text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primary);
            border-radius: (4/16rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: "";
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }
    }
}

/* Dark mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #gallery-48 {
            .cs-title {
                color: var(--bodyTextColorWhite);
            }
        }
    }
}
</file>

<file path="src/assets/less/reviews.less">
// ─────────────────────────────────────────────────────────────────────────────
// PAGE STYLES
// Interior pages have their own stylesheet for styles that only exist on
// that page. Any styles shared between pages, including repeated sections,
// should go into root.less
// ─────────────────────────────────────────────────────────────────────────────

/*-- -------------------------- -->
<---          Reviews           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #reviews-67 {
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-card-group {
            padding: 0;
            margin: 0;
            display: grid;
            column-gap: (20/16rem);
            row-gap: (64/16rem);
            width: 100%;
            grid-template-columns: repeat(12, 1fr);
        }

        .cs-item {
            grid-column: span 12;
            text-align: left;
            list-style: none;
            width: 100%;
            /* pushes up the same amount the cs-item-img overlaps the card */
            margin: (40/16rem) 0 0 0;
            /* Padding L & R - 16px - 32px */
            padding: (60/16rem) clamp(1rem, 3.2vw, 2rem) 0;
            /* 32px - 40px */
            padding-bottom: clamp(2rem, 5.4vw, 2.5rem);
            box-shadow: 0px 20px 39px 0px rgba(0, 0, 0, 0.05);
            border-radius: (4/16rem);
            background: #fff;
            position: relative;
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            align-items: center;
            /* Prevents padding from affecting height & width */
            box-sizing: border-box;

            &:last-of-type {
                margin-bottom: 0;
            }
        }

        .cs-item-img {
            width: (80/16rem);
            height: (80/16rem);
            position: absolute;
            top: (-40/16rem);
        }

        .cs-item-text {
            font-size: (16/16rem);
            line-height: 1.5em;
            margin: 0 0 (20/16rem);
            padding-bottom: (20/16rem);
            color: var(--bodyTextColor);
            border-bottom: 1px solid #e8e9ec;
        }

        .cs-info {
            width: 100%;
            /* margin-top auto pushes up against the rest of the card, that way when one card has more text than the other, the reviewer info is always pushed to the bottom and lined up with the rest of them.  This ensures better responsiveness for changing content */
            margin: auto 0 0 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .cs-flex-group {
            width: 100%;
            margin: 0;
        }

        .cs-name {
            font-size: (16/16rem);
            line-height: 1.5em;
            font-weight: 700;
            width: 40%;
            margin: 0;
            display: block;
            color: var(--headerColor);
        }

        .cs-desc {
            font-size: (14/16rem);
            font-weight: 400;
            color: #7d799c;
            display: block;
        }

        .cs-item-stars {
            width: (96/16rem);
            height: (16/16rem);
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #reviews-67 {
        .cs-item {
            grid-column: span 6;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #reviews-67 {
        .cs-item {
            grid-column: span 4;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #reviews-67 {
            .cs-title,
            .cs-text,
            .cs-item-text,
            .cs-name {
                color: var(--bodyTextColorWhite);
            }

            .cs-item {
                background: rgba(0, 0, 0, 0.2);
            }

            .cs-desc {
                color: var(--primaryLight);
            }
        }
    }
}
</file>

<file path="src/assets/less/root.less">
// ─────────────────────────────────────────────────────────────────────────────
// NexSite GLOBAL STYLES
// Core stylesheet containing CSS variables, dark mode styles, base element
// styling, typography rules, utility classes, component styles, navigation,
// footer, and other repeated section styles for the entire site
// ─────────────────────────────────────────────────────────────────────────────

/*-- -------------------------- -->
<---        Core Styles         -->
<--- -------------------------- -*/

/* NexSite Core Styles + Reset */
@media only screen and (min-width: 0rem) {
    /* All elements in the library derive their variables and base styles from this central sheet, simplifying site-wide edits. For instance, if you want to modify how your h2's appear across the site, you just update it once in the global styles, and the changes apply everywhere. */
    :root {
        --primary: #ff6a3e;
        --primaryLight: #ffba43;
        --secondary: #ffba43;
        --secondaryLight: #ffba43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4e4b66;
        --bodyTextColorWhite: #fafbfc;

        /* Dark Mode Styles */
        --dark: #082032;
        --medium: #2c394b;
        --accent: #334756;

        /* 13px - 16px */
        --topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;
        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;

        --headerFont: "Roboto", Arial, sans-serif;
        --bodyFont: "Roboto", Arial, sans-serif;
    }

    html,
    body {
        margin: 0;
        padding: 0;
        overflow-x: hidden;
        font-family: var(--bodyFont);
        font-size: 100%;
        transition: background-color 0.3s;
        color: var(--bodyTextColor);
    }

    *,
    *:before,
    *:after {
        /* prevents padding from affecting height and width */
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    .cs-topper {
        font-size: var(--topperFontSize);
        line-height: 1.2em;
        text-transform: uppercase;
        text-align: inherit;
        letter-spacing: 0.1em;
        font-weight: 700;
        color: var(--primary);
        margin-bottom: 0.25rem;
        display: block;
    }

    .cs-title {
        font-size: var(--headerFontSize);
        font-weight: 900;
        line-height: 1.2em;
        text-align: inherit;
        max-width: 43.75rem;
        margin: 0 0 1rem 0;
        color: var(--headerColor);
        position: relative;
    }

    .cs-text {
        font-size: var(--bodyFontSize);
        line-height: 1.5em;
        text-align: inherit;
        width: 100%;
        max-width: 40.625rem;
        margin: 0;
        color: var(--bodyTextColor);
    }
}

/* Components + Utilities */
@media only screen and (min-width: 0rem) {
    // Hidden screen reader skip nav button
    .skip {
        z-index: -1111111;
        position: absolute;
        top: 0;
        left: 0;
        opacity: 0;
    }

    // Buttons - can be replaced using NexSite's "Button" components. Make sure to clear the default .cs-button-solid/outline styles from any new components you place.
    .cs-button-solid {
        z-index: 1;
        position: relative;
        display: inline-block;
        background-color: var(--primary);
        width: auto;
        padding: (16/16rem) (32/16rem);
        text-decoration: none;
        text-transform: uppercase;
        font-size: (16/16rem);
        line-height: (16/16em);
        font-weight: bold;
        border-radius: (4/16rem);
        overflow: hidden;

        // Transition Properties
        color: var(--bodyTextColorWhite);
        transition: color 0.3s;
        transition-delay: 0.1s;
        text-align: center;

        &:hover {
            color: #fff;

            &:before {
                width: 100%;
            }
        }

        &:before {
            z-index: -1;
            position: absolute;
            top: 0;
            left: 0;
            content: "";
            opacity: 1;
            display: block;
            background-color: #000;
            height: 100%;

            //Transition properties
            width: 0;
            transition: width 0.3s;
        }
    }

    .cs-button-outline {
        z-index: 1;
        position: relative;
        display: inline-block;
        width: auto;
        padding: (16/16rem) (32/16rem);
        text-decoration: none;
        text-transform: uppercase;
        font-size: (16/16rem);
        line-height: (16/16em);
        font-weight: bold;
        border: 2px solid #000;

        // Transition Properties
        color: #000;
        transition: color 0.3s;
        transition-delay: 0.1s;
        text-align: center;

        &:hover {
            color: #fff;

            &:before {
                width: 100%;
            }
        }

        &:before {
            z-index: -1;
            position: absolute;
            top: 0;
            left: 0;
            content: "";
            opacity: 1;
            display: block;
            background-color: #000;
            height: 100%;

            //Transition properties
            width: 0;
            transition: width 0.3s;
        }
    }

    // Utilities - small classes useful in various common situations
    .cs-color {
        color: var(--primary);
    }

    .cs-bold {
        font-weight: 700;
    }

    .cs-hide-on-mobile {
        display: none !important;
    }

    .cs-dark,
    .dark {
        display: none !important;
    }

    body.dark-mode {
        .cs-light,
        .light {
            display: none !important;
        }

        .cs-dark,
        .dark {
            display: block !important;
        }

        .cs-button-outline {
            border-color: #fff;
            color: #fff;
        }
    }
}

/* Desktop Utilities */
@media only screen and (min-width: 64rem) {
    .cs-hide-on-mobile {
        display: block !important;
    }

    .cs-hide-on-desktop {
        display: none !important;
    }
}

/* Base Element Styles */
@media only screen and (min-width: 0rem) {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-family: var(--headerFont);
        line-height: 1.2em;
        color: var(--headerColor);
    }

    p,
    li,
    a {
        font-size: (16/16rem);
        line-height: 1.5em;
    }

    p,
    li {
        color: var(--bodyTextColor);

        a {
            color: var(--primary);
        }
    }

    a,
    button {
        &:hover {
            cursor: pointer;
        }
    }

    body.dark-mode {
        background-color: var(--dark);

        p,
        li,
        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
            color: #fff;
        }
    }
}

/* Fonts */
@media only screen and (min-width: 0rem) {
    // Grab your fonts to locally host from https://gwfh.mranftl.com/fonts
    /* roboto-regular - latin */
    @font-face {
        font-style: normal;
        font-family: "Roboto";
        font-weight: 400;
        font-display: swap;
        src: local(""), url("/assets/fonts/roboto-v29-latin-regular.woff2") format("woff2"),
            /* Chrome 26+, Opera 23+, Firefox 39+ */ url("/assets/fonts/roboto-v29-latin-regular.woff") format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
    }

    /* roboto-700 - latin */
    @font-face {
        font-style: normal;
        font-family: "Roboto";
        font-weight: 700;
        font-display: swap;
        src: local(""), url("/assets/fonts/roboto-v29-latin-700.woff2") format("woff2"),
            /* Chrome 26+, Opera 23+, Firefox 39+ */ url("/assets/fonts/roboto-v29-latin-700.woff") format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
    }

    /* roboto-900 - latin */
    @font-face {
        font-style: normal;
        font-family: "Roboto";
        font-weight: 900;
        font-display: swap;
        src: local(""), url("/assets/fonts/roboto-v29-latin-900.woff2") format("woff2"),
            /* Chrome 26+, Opera 23+, Firefox 39+ */ url("/assets/fonts/roboto-v29-latin-900.woff") format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
    }
}

/*-- -------------------------- -->
<---      Dark Mode Toggle      -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #dark-mode-toggle {
            .cs-sun {
                opacity: 1;
                transform: translate(-50%, -50%);
            }

            .cs-moon {
                opacity: 0;
                transform: translate(-50%, -150%);
                fill: #fff;
            }
        }
    }

    #dark-mode-toggle {
        width: (48/16rem);
        height: (48/16rem);
        padding: 0;
        background: transparent;
        border: none;
        display: block;
        position: absolute;
        top: (10/16rem);
        right: (70/16rem);
        z-index: 1000;
        overflow: hidden;

        img,
        svg {
            width: (20/16rem);
            height: (20/16rem);
            //center image inside button
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            pointer-events: none;
        }

        .cs-moon {
            z-index: 2;
            // Transition properties
            transition: transform 0.3s, opacity 0.3s;

            // fill: yellow; --> uncomment to change the color of the moon if needed
        }

        .cs-sun {
            opacity: 0;
            z-index: 1;
            // Transition property
            transform: translate(-50%, 100%);
            transition: transform 0.3s, opacity 0.3s;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 1024px) {
    #dark-mode-toggle {
        margin: 0;
        position: relative;
        top: auto;
        right: auto;
        transform: none;

        &:hover {
            cursor: pointer;
        }
    }
}

/*-- -------------------------- -->
<---     Mobile Navigation      -->
<--- -------------------------- -*/

/* Mobile - 1023.5px */
@media only screen and (max-width: 1023.5px) {
    body {
        &.cs-open {
            overflow: hidden;
        }
    }

    #cs-navigation {
        width: 100%;
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        padding: (12/16rem) (16/16rem);
        background-color: #fff;
        box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
        position: fixed;
        z-index: 10000;

        &:before {
            /* black blurred overlay */
            content: "";
            width: 0%;
            height: 100vh;
            background: rgba(0, 0, 0, 0.6);
            opacity: 0;
            display: block;
            position: absolute;
            top: 100%;
            right: 0;
            z-index: -11;
            transition: width 0.5s, opacity 0.3s;
            -webkit-backdrop-filter: blur(10px);
            backdrop-filter: blur(10px);
        }

        &.cs-active {
            &:before {
                width: 100%;
                opacity: 1;
            }

            .cs-ul-wrapper {
                opacity: 1;
                transform: scaleX(1);
                transition-delay: 0.2s;
            }

            .cs-li {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .cs-container {
            width: 100%;
            display: flex;
            justify-content: flex-end;
            align-items: center;
        }

        .cs-logo {
            width: 40%;
            max-width: (146/16rem);
            height: 100%;
            margin: 0 auto 0 0;
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 10;

            img {
                width: 100%;
                height: 100%;
                /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
                object-fit: contain;
                /* places the image to the left edge of the parent */
                object-position: left;
            }
        }

        .cs-toggle {
            /* 44px - 48px */
            width: clamp(2.75rem, 6vw, 3rem);
            height: clamp(2.75rem, 6vw, 3rem);
            margin: 0 0 0 auto;
            background-color: transparent;
            border: none;
            border-radius: (4/16rem);
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .cs-active {
            .cs-line1 {
                top: 50%;
                transform: translate(-50%, -50%) rotate(225deg);
            }

            .cs-line2 {
                top: 50%;
                transform: translate(-50%, -50%) translateY(0) rotate(-225deg);
                transform-origin: center;
            }

            .cs-line3 {
                opacity: 0;
                bottom: 100%;
            }
        }

        .cs-box {
            /* 24px - 28px */
            width: clamp(1.5rem, 2vw, 1.75rem);
            /* 14px - 16px */
            height: clamp(0.875rem, 1.5vw, 1rem);
            position: relative;
        }

        .cs-line {
            width: 100%;
            height: 2px;
            background-color: #1a1a1a;
            border-radius: 2px;
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
        }

        .cs-line1 {
            top: 0;
            transition: transform 0.5s, top 0.3s, left 0.3s;
            animation-duration: 0.7s;
            animation-timing-function: ease;
            animation-direction: normal;
            animation-fill-mode: forwards;
            transform-origin: center;
        }

        .cs-line2 {
            top: 50%;
            transform: translateX(-50%) translateY(-50%);
            transition: top 0.3s, left 0.3s, transform 0.5s;
            animation-duration: 0.7s;
            animation-timing-function: ease;
            animation-direction: normal;
            animation-fill-mode: forwards;
        }

        .cs-line3 {
            bottom: 0;
            transition: bottom 0.3s, opacity 0.3s;
        }

        .cs-ul-wrapper {
            height: 100vh;
            background-color: #fff;
            box-shadow: inset rgba(0, 0, 0, 0.2) 0px 8px 24px;
            opacity: 0;
            position: absolute;
            top: 100%;
            right: 0;
            left: auto;
            z-index: -1;
            overflow: hidden;
            transform: scaleX(0);
            transition: transform 0.4s, opacity 0.3s;
            transform-origin: top right;
        }

        .cs-ul {
            width: auto;
            min-width: 40%;
            height: 65vh;
            margin: 0;
            /* 28px - 40px */
            padding: (48/16rem) clamp(1.75rem, 3vw, 2.5rem) (32/16rem) (70/16rem);
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: flex-end;
            gap: (20/16rem);
            overflow: scroll;
        }

        .cs-li {
            text-align: right;
            list-style: none;
            width: 100%;
            margin-right: 0;
            opacity: 0;
            /* transition from these values */
            transform: translateX(-2.5rem);
            transition: transform 0.6s, opacity 0.9s;

            &:nth-of-type(1) {
                transition-delay: 0.05s;
            }
            &:nth-of-type(2) {
                transition-delay: 0.1s;
            }
            &:nth-of-type(3) {
                transition-delay: 0.15s;
            }
            &:nth-of-type(4) {
                transition-delay: 0.2s;
            }
            &:nth-of-type(5) {
                transition-delay: 0.25s;
            }
            &:nth-of-type(6) {
                transition-delay: 0.3s;
            }
            &:nth-of-type(7) {
                transition-delay: 0.35s;
            }
            &:nth-of-type(8) {
                transition-delay: 0.4s;
            }
            &:nth-of-type(9) {
                transition-delay: 0.45s;
            }
        }

        .cs-li-link {
            /* 16px - 24px */
            font-size: clamp(1rem, 2.5vw, 1.5rem);
            line-height: 1.2em;
            text-decoration: none;
            margin: 0;
            color: var(--headerColor);
            display: inline-block;
            position: relative;

            &:before {
                /* active state underline */
                content: "";
                width: 100%;
                height: 1px;
                background: currentColor;
                opacity: 1;
                display: none;
                position: absolute;
                bottom: (-2/16rem);
                left: 0;
            }

            &.cs-active {
                &:before {
                    display: block;
                }
            }
        }

        .cs-button-solid {
            display: none;
        }
    }
}

/* Dark Mode */
@media only screen and (max-width: 1023.5px) {
    body.dark-mode {
        #cs-navigation {
            background-color: var(--dark);

            .cs-logo {
                /* makes it white */
                filter: grayscale(1) brightness(1000%);
            }

            .cs-line {
                background-color: #fff;
            }

            .cs-ul-wrapper {
                background-color: var(--medium);
            }

            .cs-li-link {
                color: var(--bodyTextColorWhite);
            }
        }
    }
}

/*-- -------------------------- -->
<---     Navigation Dropdown    -->
<--- -------------------------- -*/

/* Mobile - 1023.5px */
@media only screen and (max-width: 1023.5px) {
    #cs-navigation {
        .cs-dropdown {
            color: var(--bodyTextColorWhite);
            position: relative;
            &.cs-active {
                .cs-drop-ul {
                    height: auto;
                    margin: (12/16rem) 0 0 0;
                    padding: (24/16rem);
                    opacity: 1;
                    visibility: visible;
                    transform: scale(1);
                }

                .cs-drop-link {
                    opacity: 1;
                }
            }

            .cs-li-link {
                position: relative;
                transition: opacity 0.3s;
            }
        }

        .cs-drop-icon {
            width: (15/16rem);
            height: auto;
            position: absolute;
            top: 50%;
            right: (-20/16rem);
            transform: translateY(-50%);
        }

        .cs-drop-ul {
            width: 100%;
            height: 0;
            margin: 0;
            box-sizing: border-box;
            padding: 0 (24/16rem) 0 (24/16rem);
            background-color: var(--primary);
            opacity: 0;
            display: flex;
            visibility: hidden;
            flex-direction: column;
            justify-content: flex-start;
            align-items: flex-end;
            gap: (12/16rem);
            overflow: hidden;
            transform: scale(0);
            transition: padding 0.3s, margin 0.3s, height 0.3s, opacity 0.3s, transform 0.3s, visibility 0.3s;
            transform-origin: top right;
        }

        .cs-drop-li {
            text-align: inherit;
            list-style: none;
        }

        .cs-li-link {
            &.cs-drop-link {
                /* 14px - 16px */
                font-size: clamp(0.875rem, 2vw, 1.25rem);
                color: #fff;
            }
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 1024px) {
    #cs-navigation {
        .cs-dropdown {
            position: relative;

            &:hover,
            &:focus-within {
                cursor: pointer;

                .cs-drop-ul {
                    opacity: 1;
                    visibility: visible;
                    transform: scaleY(1);
                }

                .cs-drop-li {
                    opacity: 1;
                    transform: translateY(0);
                }
            }
        }

        .cs-drop-icon {
            width: (15/16rem);
            height: auto;
            display: inline-block;
        }

        .cs-drop-ul {
            min-width: (200/16rem);
            margin: 0;
            padding: 0;
            background-color: #fff;
            box-shadow: rgba(149, 157, 165, 0.2) 0px 10px 16px;
            opacity: 0;
            border-bottom: 5px solid var(--primary);
            visibility: hidden;
            /* if you have 8 or more links in your dropdown nav, uncomment the columns property to make the list into 2 even columns. Change it to 3 or 4 if you need extra columns. Then remove the transition delays on the cs-drop-li so they don't have weird scattered animations */
            // columns: 2;
            position: absolute;
            top: 100%;
            z-index: -100;
            overflow: hidden;
            transform: scaleY(0);
            transition: transform 0.3s, visibility 0.3s, opacity 0.3s;
            transform-origin: top;
        }

        .cs-drop-li {
            font-size: (16/16rem);
            text-decoration: none;
            list-style: none;
            width: 100%;
            height: auto;
            color: var(--bodyTextColor);
            opacity: 0;
            display: block;
            transform: translateY(-0.625rem);
            transition: opacity 0.6s, transform 0.6s;

            &:nth-of-type(1) {
                transition-delay: 0.05s;
            }
            &:nth-of-type(2) {
                transition-delay: 0.1s;
            }
            &:nth-of-type(3) {
                transition-delay: 0.15s;
            }
            &:nth-of-type(4) {
                transition-delay: 0.2s;
            }
            &:nth-of-type(5) {
                transition-delay: 0.25s;
            }
            &:nth-of-type(6) {
                transition-delay: 0.3s;
            }
            &:nth-of-type(7) {
                transition-delay: 0.35s;
            }
            &:nth-of-type(8) {
                transition-delay: 0.4s;
            }
            &:nth-of-type(9) {
                transition-delay: 0.45s;
            }
            &:nth-of-type(10) {
                transition-delay: 0.5s;
            }
            &:nth-of-type(11) {
                transition-delay: 0.55s;
            }
            &:nth-of-type(12) {
                transition-delay: 0.6s;
            }
            &:nth-of-type(13) {
                transition-delay: 0.65s;
            }
        }

        .cs-li-link {
            &.cs-drop-link {
                font-size: (16/16rem);
                line-height: 1.5em;
                text-decoration: none;
                white-space: nowrap;
                width: 100%;
                /* prevents padding and border from affecting height and width */
                box-sizing: border-box;
                padding: (12/16rem);
                color: var(--bodyTextColor);
                background-color: #f7f7f7;
                outline: none;
                display: block;
                transition: color 0.3s, background-color 0.3s;

                &:hover {
                    background-color: #f7f7f7;
                }

                &:before {
                    display: none;
                }
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #cs-navigation {
            .cs-drop-ul {
                background-color: var(--dark);
            }

            .cs-li-link {
                &.cs-drop-link {
                    &:hover {
                        background-color: var(--medium);
                    }
                }
            }

            .cs-drop-icon {
                /* turns it white */
                filter: grayscale(1) brightness(1000%);
            }
        }
    }
}

/*-- -------------------------- -->
<---     Desktop Navigation     -->
<--- -------------------------- -*/

/* Small Desktop - 1024px */
@media only screen and (min-width: 1024px) {
    #cs-navigation {
        width: 100%;
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        padding: 0 (16/16rem);
        background-color: #fff;
        box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
        position: fixed;
        z-index: 10000;

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            justify-content: flex-end;
            align-items: center;
            gap: (24/16rem);
        }

        .cs-toggle {
            display: none;
        }

        .cs-logo {
            width: 18.4%;
            max-width: (350/16rem);
            height: (65/16rem);
            /* margin-right auto pushes everything away from it to the right */
            margin: 0 auto 0 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 100;

            img {
                width: 100%;
                height: 100%;
                /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
                object-fit: contain;
            }
        }

        .cs-ul {
            width: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            /* 20px - 36px */
            gap: clamp(1.25rem, 2.6vw, 2.25rem);
        }

        .cs-li {
            list-style: none;
            padding: (32/16rem) 0;
            /* prevent flexbox from squishing it */
            flex: none;
        }

        .cs-li-link {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1vw, 1rem);
            line-height: 1.5em;
            text-decoration: none;
            margin: 0;
            color: var(--bodyTextColor);
            display: block;
            position: relative;
            &:hover {
                &:before {
                    width: 100%;
                }
            }

            &.cs-active {
                &:before {
                    width: 100%;
                }
            }

            &:before {
                /* active state underline */
                content: "";
                width: 0%;
                height: 2px;
                background: var(--primary);
                opacity: 1;
                display: block;
                position: absolute;
                bottom: (0/16rem);
                left: 0;
                transition: width 0.3s;
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 1024px) {
    body.dark-mode {
        #cs-navigation {
            background-color: var(--dark);

            .cs-logo {
                /* makes it turn white */
                filter: grayscale(1) brightness(1000%);
            }

            .cs-li-link {
                color: var(--bodyTextColorWhite);
            }

            .cs-li-link {
                &:before {
                    background-color: var(--primaryLight);
                }
            }
        }
    }
}

/*-- -------------------------- -->
<---          Banner            -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #banner-310 {
        /* 144px - 252px */
        padding-top: clamp(9rem, 25vw, 15.75rem);
        /* 80px - 140px */
        padding-bottom: clamp(5rem, 13vw, 8.75rem);
        position: relative;
        z-index: 1;

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .cs-int-title {
            /* 39px - 49px */
            font-size: clamp(2.4375rem, 4.5vw, 3.0625rem);
            font-weight: 900;
            line-height: 1.2em;
            text-align: center;
            max-width: (700/16rem);
            margin: 0 auto (12/16rem);
            color: var(--bodyTextColorWhite);
            position: relative;
        }

        .cs-breadcrumbs {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .cs-link {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            line-height: 1.2em;
            text-decoration: none;
            color: var(--bodyTextColorWhite);
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;

            &:last-of-type {
                /* remove the chevron on the last list item */
                &::after {
                    display: none;
                }
            }

            &:after {
                /* chevron - added as pseudo to make adding and removing them easier */
                content: "";
                width: (7/16rem);
                height: (12/16rem);
                margin-left: (12/16rem);
                margin-right: (12/16rem);
                background: url("/assets/svgs/chevron.svg");
                background-size: contain;
                background-position: center;
                background-repeat: no-repeat;
            }

            &.cs-active {
                color: var(--primaryLight);
            }
        }

        .cs-background {
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            display: block;
            z-index: -1;

            &:before {
                /* black overlay box */
                content: "";
                width: 100%;
                height: 100%;
                background: #000;
                opacity: 0.72;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                z-index: 1;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }
    }
}

/*-- -------------------------- -->
<---            CTA             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #cta-51 {
        padding: var(--sectionPadding);
        position: relative;

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-title {
            color: var(--bodyTextColorWhite);
        }

        .cs-text {
            margin-bottom: (16/16rem);
            color: var(--bodyTextColorWhite);
            opacity: 0.8;
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-picture {
            height: 100%;
            width: 100%;
            display: block;
            position: absolute;
            z-index: -1;
            top: 0;
            left: 0;
            z-index: -1;

            &:before {
                /* black color overlay */
                content: "";
                position: absolute;
                display: block;
                height: 100%;
                width: 100%;
                background: #000;
                opacity: 0.8;
                top: 0;
                left: 0;
                z-index: 1;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }
    }
}

/*-- -------------------------- -->
<---          Footer            -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #cs-footer-275 {
        padding: var(--sectionPadding);
        background-color: #1a1a1a;

        .cs-container {
            width: 100%;
            /* reset on tablet */
            max-width: (550/16rem);
            margin: auto;
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            flex-wrap: wrap;
            column-gap: (88/16rem);
            row-gap: (32/16rem);
        }

        .cs-logo-group {
            /* takes up all the space, lets the other ul's wrap below it */
            width: 100%;
            position: relative;
        }

        .cs-logo {
            /* 210px - 240px */
            width: clamp(13.125rem, 8vw, 15rem);
            height: auto;
            display: block;
            /* 28px - 44px */
            margin-bottom: clamp(1.75rem, 4.17vw, 2.75rem);
        }

        .cs-logo-img {
            width: 100%;
            height: auto;

            &.dark {
                display: none;
            }
        }

        .cs-text {
            color: var(--bodyTextColorWhite);
            margin-bottom: (16/16rem);
        }

        .cs-social {
            display: inline-flex;
            flex-direction: column;
            justify-content: flex-start;
            gap: (12/16rem);
            position: absolute;
            top: 0;
            right: 0;
        }

        .cs-social-link {
            width: (24/16rem);
            height: (24/16rem);
            background-color: #4e4b66;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            z-index: 1;
            transition: transform 0.3s, background-color 0.3s;

            &:hover {
                background-color: #1a1a1a;
                transform: translateY(-0.1875rem);
            }
        }

        .cs-social-img {
            height: (13/16rem);
            width: auto;
            display: block;
        }

        /* Navigation Links */
        .cs-nav {
            padding: 0;
            margin: 0;
        }

        .cs-nav-li {
            list-style: none;
            margin-bottom: (16/16rem);
            &:last-of-type {
                margin-bottom: 0;
            }
        }

        .cs-header {
            font-size: (16/16rem);
            line-height: 1.5em;
            font-weight: 700;
            color: var(--bodyTextColorWhite);
            position: relative;

            &:after {
                content: "";
                width: (32/16rem);
                height: (4/16rem);
                margin: (16/16rem) auto (24/16rem) 0;
                background: var(--primary);
                opacity: 1;
                position: relative;
                display: block;
            }
        }

        .cs-nav-link {
            font-size: (16/16rem);
            text-decoration: none;
            line-height: 1.5em;
            color: var(--bodyTextColorWhite);
            position: relative;

            &:before {
                /* underline */
                content: "";
                width: 0%;
                height: (2/16rem);
                background: var(--bodyTextColorWhite);
                opacity: 1;
                position: absolute;
                display: block;
                bottom: (-2/16rem);
                left: 0;
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        /* Contact Links */
        .cs-contact {
            margin: 0;
            padding: 0;
            width: 35%;
        }

        .cs-contact-li {
            list-style: none;
            margin-bottom: (0/16rem);
            &:last-of-type {
                margin-bottom: 0;
            }
        }

        .cs-contact-link {
            font-size: (16/16rem);
            text-decoration: none;
            line-height: 1.5em;
            text-align: left;
            color: var(--bodyTextColorWhite);
            display: inline-block;

            &:hover {
                text-decoration: underline;
            }
        }

        .cs-address {
            font-size: (16/16rem);
            margin-bottom: (20/16rem);
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #cs-footer-275 {
        .cs-container {
            max-width: (1280/16rem);
            row-gap: 0;
        }

        .cs-contact {
            flex-direction: row;
            justify-content: space-between;
            border-top: none;
        }

        .cs-contact-li {
            margin: 0;
        }
    }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #cs-footer-275 {
        .cs-container {
            /* pushes all flex children to the top */
            align-items: flex-start;
            justify-content: flex-end;
        }

        .cs-logo-group {
            /* pushes everything to the right of it as far as possible in a flexbox */
            margin-right: auto;
            width: auto;
            max-width: (305/16rem);
        }

        .cs-text {
            width: 100%;
        }

        .cs-social {
            flex-direction: row;
            position: relative;
            top: auto;
            right: auto;
        }

        .cs-contact {
            width: auto;
        }
    }
}
</file>

<file path="src/assets/svgs/chevron.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="7" height="12" fill="none"><path d="M.326.337a1.148 1.148 0 0 0 0 1.605l3.967 4.086-3.967 4.03a1.148 1.148 0 0 0 .365 1.854 1.107 1.107 0 0 0 1.226-.249L6.67 6.837A1.14 1.14 0 0 0 7 6.028a1.154 1.154 0 0 0-.331-.808L1.917.337A1.12 1.12 0 0 0 1.121 0a1.105 1.105 0 0 0-.795.337Z" fill="#fff"/></svg>
</file>

<file path="src/assets/svgs/dropdown.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 32 32" style="enable-background:new 0 0 512 512" xml:space="preserve"><path fill="#ff6a3e" d="M26.925 11.613A1 1 0 0 0 26 11H6a1 1 0 0 0-.925.613 1.05 1.05 0 0 0 .213 1.1l10 10a1.025 1.025 0 0 0 1.424 0l10-10a1.05 1.05 0 0 0 .213-1.1z" data-original="#000000"/></svg>
</file>

<file path="src/assets/svgs/facebook.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 155.139 155.139" style="enable-background:new 0 0 512 512" xml:space="preserve"><path d="M89.584 155.139V84.378h23.742l3.562-27.585H89.584V39.184c0-7.984 2.208-13.425 13.67-13.425l14.595-.006V1.08C115.325.752 106.661 0 96.577 0 75.52 0 61.104 12.853 61.104 36.452v20.341H37.29v27.585h23.814v70.761h28.48z" fill="#fff" data-original="#010002" xmlns="http://www.w3.org/2000/svg"/></svg>
</file>

<file path="src/assets/svgs/google.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 210 210" style="enable-background:new 0 0 512 512" xml:space="preserve"><path xmlns="http://www.w3.org/2000/svg" d="M0 105C0 47.103 47.103 0 105 0c23.383 0 45.515 7.523 64.004 21.756l-24.4 31.696C133.172 44.652 119.477 40 105 40c-35.841 0-65 29.159-65 65s29.159 65 65 65c28.867 0 53.398-18.913 61.852-45H105V85h105v20c0 57.897-47.103 105-105 105S0 162.897 0 105z" fill="#fff" data-original="#000000"/></svg>
</file>

<file path="src/assets/svgs/instagram.svg">
<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 511 511.9" style="enable-background:new 0 0 512 512" xml:space="preserve"><g fill="#fff"><path xmlns="http://www.w3.org/2000/svg" d="M510.95 150.5c-1.2-27.2-5.598-45.898-11.9-62.102-6.5-17.199-16.5-32.597-29.6-45.398-12.802-13-28.302-23.102-45.302-29.5-16.296-6.3-34.898-10.7-62.097-11.898C334.648.3 325.949 0 256.449 0s-78.199.3-105.5 1.5c-27.199 1.2-45.898 5.602-62.097 11.898-17.204 6.5-32.602 16.5-45.403 29.602-13 12.8-23.097 28.3-29.5 45.3-6.3 16.302-10.699 34.9-11.898 62.098C.75 177.801.449 186.5.449 256s.301 78.2 1.5 105.5c1.2 27.2 5.602 45.898 11.903 62.102 6.5 17.199 16.597 32.597 29.597 45.398 12.801 13 28.301 23.102 45.301 29.5 16.3 6.3 34.898 10.7 62.102 11.898 27.296 1.204 36 1.5 105.5 1.5s78.199-.296 105.5-1.5c27.199-1.199 45.898-5.597 62.097-11.898a130.934 130.934 0 0 0 74.903-74.898c6.296-16.301 10.699-34.903 11.898-62.102 1.2-27.3 1.5-36 1.5-105.5s-.102-78.2-1.3-105.5zm-46.098 209c-1.102 25-5.301 38.5-8.801 47.5-8.602 22.3-26.301 40-48.602 48.602-9 3.5-22.597 7.699-47.5 8.796-27 1.204-35.097 1.5-103.398 1.5s-76.5-.296-103.403-1.5c-25-1.097-38.5-5.296-47.5-8.796C94.551 451.5 84.45 445 76.25 436.5c-8.5-8.3-15-18.3-19.102-29.398-3.5-9-7.699-22.602-8.796-47.5-1.204-27-1.5-35.102-1.5-103.403s.296-76.5 1.5-103.398c1.097-25 5.296-38.5 8.796-47.5C61.25 94.199 67.75 84.1 76.352 75.898c8.296-8.5 18.296-15 29.398-19.097 9-3.5 22.602-7.7 47.5-8.801 27-1.2 35.102-1.5 103.398-1.5 68.403 0 76.5.3 103.403 1.5 25 1.102 38.5 5.3 47.5 8.8 11.097 4.098 21.199 10.598 29.398 19.098 8.5 8.301 15 18.301 19.102 29.403 3.5 9 7.699 22.597 8.8 47.5 1.2 27 1.5 35.097 1.5 103.398s-.3 76.301-1.5 103.301zm0 0" data-original="#000000"/><path xmlns="http://www.w3.org/2000/svg" d="M256.45 124.5c-72.598 0-131.5 58.898-131.5 131.5s58.902 131.5 131.5 131.5c72.6 0 131.5-58.898 131.5-131.5s-58.9-131.5-131.5-131.5zm0 216.8c-47.098 0-85.302-38.198-85.302-85.3s38.204-85.3 85.301-85.3c47.102 0 85.301 38.198 85.301 85.3s-38.2 85.3-85.3 85.3zM423.852 119.3c0 16.954-13.747 30.7-30.704 30.7-16.953 0-30.699-13.746-30.699-30.7 0-16.956 13.746-30.698 30.7-30.698 16.956 0 30.703 13.742 30.703 30.699zm0 0" data-original="#000000"/></g></svg>
</file>

<file path="src/assets/svgs/logo-black.svg">
<svg width="210" height="29" viewBox="0 0 210 29" fill="none" xmlns="http://www.w3.org/2000/svg">
  <text x="50%" y="50%" text-anchor="middle" dominant-baseline="central" font-family="Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif" font-size="22" font-weight="700" fill="#1A1A1A" letter-spacing="-0.02em">NexSite</text>
</svg>
</file>

<file path="src/assets/svgs/logo-light.svg">
<svg width="240" height="32" viewBox="0 0 240 32" fill="none" xmlns="http://www.w3.org/2000/svg">
  <text x="50%" y="50%" text-anchor="middle" dominant-baseline="central" font-family="Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif" font-size="24" font-weight="700" fill="#FAFBFC" letter-spacing="-0.02em">NexSite</text>
</svg>
</file>

<file path="src/assets/svgs/moon.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 480 480" style="enable-background:new 0 0 480 480" xml:space="preserve"><path d="M459.782 347.328c-4.288-5.28-11.488-7.232-17.824-4.96-17.76 6.368-37.024 9.632-57.312 9.632-97.056 0-176-78.976-176-176 0-58.4 28.832-112.768 77.12-145.472 5.472-3.712 8.096-10.4 6.624-16.832S285.638 2.4 279.078 1.44C271.59.352 264.134 0 256.646 0c-132.352 0-240 107.648-240 240s107.648 240 240 240c84 0 160.416-42.688 204.352-114.176 3.552-5.792 3.04-13.184-1.216-18.496z"/></svg>
</file>

<file path="src/assets/svgs/profile.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512" xml:space="preserve"><circle style="fill:#eceff1" cx="256" cy="256" r="256"/><path style="fill:#455a64" d="M442.272 405.696c-11.136-8.8-24.704-15.136-39.424-18.208l-70.176-14.08c-7.36-1.408-12.672-8-12.672-15.68v-16.096c4.512-6.336 8.768-14.752 13.216-23.552 3.456-6.816 8.672-17.088 11.264-19.744 14.208-14.272 27.936-30.304 32.192-50.976 3.968-19.392.064-29.568-4.512-37.76 0-20.448-.64-46.048-5.472-64.672-.576-25.216-5.152-39.392-16.672-51.808-8.128-8.8-20.096-10.848-29.728-12.48-3.776-.64-8.992-1.536-10.912-2.56-17.056-9.216-33.92-13.728-54.048-14.08-42.144 1.728-93.952 28.544-111.296 76.352-5.376 14.56-4.832 38.464-4.384 57.664l-.416 11.552c-4.128 8.064-8.192 18.304-4.192 37.76 4.224 20.704 17.952 36.768 32.416 51.232 2.368 2.432 7.712 12.8 11.232 19.648 4.512 8.768 8.8 17.152 13.312 23.456v16.096c0 7.648-5.344 14.24-12.736 15.68l-70.24 14.08c-14.624 3.104-28.192 9.376-39.296 18.176-3.456 2.784-5.632 6.848-5.984 11.264s1.12 8.736 4.096 12.032C115.648 481.728 184.224 512 256 512s140.384-30.24 188.16-83.008c2.976-3.296 4.48-7.648 4.096-12.064a15.99 15.99 0 0 0-5.984-11.232z"/></svg>
</file>

<file path="src/assets/svgs/quote.svg">
<svg width="136" height="78" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M31.282 77.26H0l24.961-77H75l-43.718 77ZM92.281 77.26H61l24.961-77H136l-43.719 77Z" fill="#fff"/></svg>
</file>

<file path="src/assets/svgs/s1.svg">
<svg width="52" height="52" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M36.833 34.667a2.173 2.173 0 0 1-2.166-2.167H17.333a2.173 2.173 0 0 1-2.166 2.167A2.173 2.173 0 0 1 13 32.5H4.333V39a4.346 4.346 0 0 0 4.334 4.333h34.666A4.346 4.346 0 0 0 47.667 39v-6.5H39a2.173 2.173 0 0 1-2.167 2.167ZM43.333 17.333h-6.5V13A4.346 4.346 0 0 0 32.5 8.667h-13A4.346 4.346 0 0 0 15.167 13v4.333h-6.5a4.346 4.346 0 0 0-4.334 4.334v8.666H13v-2.166c0-1.192.975-2.167 2.167-2.167 1.191 0 2.166.975 2.166 2.167v2.166h17.334v-2.166c0-1.192.975-2.167 2.166-2.167 1.192 0 2.167.975 2.167 2.167v2.166h8.667v-8.666a4.346 4.346 0 0 0-4.334-4.334Zm-10.833 0h-13V13h13v4.333Z" fill="#fff"/></svg>
</file>

<file path="src/assets/svgs/s2.svg">
<svg width="52" height="52" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M43.333 6.5H26a2.173 2.173 0 0 0-2.167 2.167v3.488l.022.022 10.833 9.75c1.365 1.213 2.145 2.99 2.145 4.831v1.409h4.334V32.5h-4.334v4.333h4.334v4.334h-4.334V45.5h6.5a2.173 2.173 0 0 0 2.167-2.167V8.667A2.173 2.173 0 0 0 43.333 6.5ZM32.5 15.167h-4.333v-4.334H32.5v4.334Zm8.667 8.666h-4.334V19.5h4.334v4.333Zm0-8.666h-4.334v-4.334h4.334v4.334Z" fill="#fff"/><path d="M32.5 43.333V26.758c0-.606-.26-1.191-.715-1.603l-10.833-9.75a2.082 2.082 0 0 0-1.452-.563c-.52 0-1.04.195-1.452.563l-10.833 9.75a2.1 2.1 0 0 0-.715 1.603v16.575c0 1.192.975 2.167 2.167 2.167H13a2.173 2.173 0 0 0 2.167-2.167v-8.666h8.666v8.666c0 1.192.975 2.167 2.167 2.167h4.333a2.173 2.173 0 0 0 2.167-2.167Z" fill="#fff"/></svg>
</file>

<file path="src/assets/svgs/s3.svg">
<svg width="52" height="52" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M42.098 28.123c.087-.693.152-1.386.152-2.123 0-.737-.065-1.43-.152-2.123l4.572-3.575c.412-.325.52-.91.26-1.387l-4.333-7.497c-.26-.476-.845-.65-1.322-.476l-5.395 2.166a15.833 15.833 0 0 0-3.662-2.123l-.823-5.742c-.065-.52-.52-.91-1.062-.91h-8.666c-.542 0-.997.39-1.062.91l-.823 5.742c-1.322.542-2.535 1.278-3.662 2.123l-5.395-2.166a1.057 1.057 0 0 0-1.322.476L5.07 18.915a1.068 1.068 0 0 0 .26 1.387l4.572 3.575A17.181 17.181 0 0 0 9.75 26c0 .715.065 1.43.152 2.123L5.33 31.698c-.412.325-.52.91-.26 1.387l4.333 7.497c.26.476.845.65 1.322.476l5.395-2.166a15.834 15.834 0 0 0 3.662 2.123l.823 5.742c.065.52.52.91 1.062.91h8.666c.542 0 .997-.39 1.062-.91l.823-5.742c1.322-.542 2.535-1.278 3.662-2.123l5.395 2.166c.498.195 1.062 0 1.322-.476l4.333-7.497c.26-.477.152-1.062-.26-1.387l-4.572-3.575ZM26 33.583c-4.182 0-7.583-3.401-7.583-7.583s3.401-7.583 7.583-7.583 7.583 3.401 7.583 7.583-3.401 7.583-7.583 7.583Z" fill="#fff"/></svg>
</file>

<file path="src/assets/svgs/s4.svg">
<svg width="52" height="52" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#a)"><path d="M26 26a8.664 8.664 0 0 0 8.667-8.667A8.664 8.664 0 0 0 26 8.667a8.664 8.664 0 0 0-8.667 8.666A8.664 8.664 0 0 0 26 26Zm0 4.333c-5.785 0-17.333 2.904-17.333 8.667v4.333h34.666V39c0-5.763-11.548-8.667-17.333-8.667Z" fill="#fff"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h52v52H0z"/></clipPath></defs></svg>
</file>

<file path="src/assets/svgs/stars.svg">
<svg width="112" height="20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M20 7.24a.811.811 0 0 0-.81-.811h-6.333L10.763.539a.81.81 0 0 0-1.526 0l-2.094 5.89H.81a.811.811 0 0 0-.52 1.433L5 11.786l-2.11 7.189a.8.8 0 0 0 1.254.86L10 15.357l5.856 4.478a.801.801 0 0 0 1.254-.86L15 11.785l4.709-3.923A.812.812 0 0 0 20 7.24ZM43 7.24a.811.811 0 0 0-.81-.811h-6.333L33.763.539a.81.81 0 0 0-1.526 0l-2.094 5.89H23.81a.811.811 0 0 0-.52 1.433L28 11.786l-2.11 7.189a.8.8 0 0 0 1.254.86L33 15.357l5.856 4.478a.801.801 0 0 0 1.254-.86L38 11.785l4.709-3.923A.812.812 0 0 0 43 7.24ZM66 7.24a.811.811 0 0 0-.81-.811h-6.333L56.763.539a.81.81 0 0 0-1.526 0l-2.094 5.89H46.81a.811.811 0 0 0-.52 1.433L51 11.786l-2.11 7.189a.8.8 0 0 0 1.254.86L56 15.357l5.856 4.478a.801.801 0 0 0 1.254-.86L61 11.785l4.709-3.923A.812.812 0 0 0 66 7.24ZM89 7.24a.811.811 0 0 0-.81-.811h-6.333L79.763.539a.81.81 0 0 0-1.526 0l-2.094 5.89H69.81a.811.811 0 0 0-.52 1.433L74 11.786l-2.11 7.189a.8.8 0 0 0 1.254.86L79 15.357l5.856 4.478a.801.801 0 0 0 1.254-.86L84 11.785l4.709-3.923A.812.812 0 0 0 89 7.24ZM112 7.24a.811.811 0 0 0-.811-.811h-6.332l-2.094-5.89a.81.81 0 0 0-1.526 0l-2.094 5.89H92.81a.811.811 0 0 0-.52 1.433L97 11.786l-2.11 7.189a.8.8 0 0 0 1.254.86L102 15.357l5.856 4.478a.8.8 0 0 0 1.254-.86l-2.11-7.19 4.709-3.923A.813.813 0 0 0 112 7.24Z" fill="#FFBA43"/></svg>
</file>

<file path="src/assets/svgs/sun.svg">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512" xml:space="preserve"><path style="fill:#ffa600" d="m507.834 301.608-54.769-48.312 52.832-50.399a7.46 7.46 0 0 0 2.099-7.189 7.505 7.505 0 0 0-5.211-5.401l-70.316-20.292 25.988-68.056a7.454 7.454 0 0 0-1.204-7.389 7.55 7.55 0 0 0-7.038-2.657l-72.274 11.652-5.878-72.561a7.485 7.485 0 0 0-4.275-6.161 7.569 7.569 0 0 0-7.504.601l-60.266 41.342-36.609-63.044A7.536 7.536 0 0 0 256.889 0a7.534 7.534 0 0 0-6.519 3.742L208.347 76.11l-72.69-41.953a7.566 7.566 0 0 0-7.528-.018 7.477 7.477 0 0 0-3.78 6.473l-.176 72.795-72.965-6.014a7.55 7.55 0 0 0-6.807 3.194 7.444 7.444 0 0 0-.622 7.459l31.242 65.835-68.513 25.681a7.499 7.499 0 0 0-4.773 5.789 7.456 7.456 0 0 0 2.656 7.003l56.619 46.152-50.813 52.41a7.457 7.457 0 0 0-1.816 7.264 7.508 7.508 0 0 0 5.419 5.194l71.055 17.551-23.295 69.011a7.453 7.453 0 0 0 1.494 7.336 7.554 7.554 0 0 0 7.137 2.382l71.76-14.443 8.721 72.278a7.488 7.488 0 0 0 4.513 5.99 7.565 7.565 0 0 0 7.475-.891l58.596-43.647 39.055 59.566a7.538 7.538 0 0 0 6.662 3.486 7.533 7.533 0 0 0 6.368-3.992l34.107-62.405 61.839 38.974a7.566 7.566 0 0 0 7.522.31 7.482 7.482 0 0 0 4.03-6.322l3.031-72.734 72.674 8.84a7.555 7.555 0 0 0 6.928-2.927 7.45 7.45 0 0 0 .914-7.43L435.75 337.31l69.465-23.003a7.502 7.502 0 0 0 4.997-5.599 7.46 7.46 0 0 0-2.378-7.1z"/><ellipse style="fill:#ffdb2d" cx="254.35" cy="254.691" rx="155.069" ry="154.949"/><path style="fill:#ffca00" d="M254.354 99.743c-3.884 0-7.732.147-11.543.428 80.25 5.901 143.525 72.825 143.525 154.521 0 81.695-63.275 148.619-143.525 154.521 3.811.28 7.66.428 11.543.428 85.641 0 155.068-69.373 155.068-154.948 0-85.577-69.427-154.95-155.068-154.95z"/></svg>
</file>

<file path="src/config/filters/isoDate.js">
const { DateTime } = require("luxon");

module.exports = function (dateObj) {
    return DateTime.fromJSDate(dateObj).toISO();
};
</file>

<file path="src/config/filters/postDate.js">
const { DateTime } = require("luxon");

module.exports = function (dateObj) {
    return DateTime.fromJSDate(dateObj).toLocaleString(DateTime.DATE_MED);
};
</file>

<file path="src/config/plugins/images.js">
module.exports = {
    urlPath: "/assets/images",
    outputDir: "public/assets/images",
};
</file>

<file path="src/config/plugins/sitemap.js">
const client = require("../../_data/client");

module.exports = {
    sitemap: {
        hostname: client.domain,
    },
};
</file>

<file path="src/config/processors/javascript.js">
const esbuild = require("esbuild");
const { glob } = require("glob");

const isProduction = process.env.ELEVENTY_ENV === "PROD";

module.exports = async function () {
    const files = await glob("src/assets/js/**/*.js");
    await esbuild.build({
        entryPoints: files,
        outdir: "./public/assets/js",
        write: true,
        bundle: true,
        minify: isProduction,
        sourcemap: !isProduction,
        target: isProduction ? "es6" : "esnext",
    });
};
</file>

<file path="src/config/processors/less.js">
const { glob } = require("glob");
const fs = require("fs");
const path = require("path");

const less = require("less");
const postcss = require("postcss");

const autoprefixer = require("autoprefixer");
const cssnano = require("cssnano");

const isProduction = process.env.ELEVENTY_ENV === "PROD";

// PostCSS processor - add more plugins here as you see fit. cssnano won't run in development.
const processor = postcss([autoprefixer(), ...(isProduction ? [cssnano({ preset: "default" })] : [])]);

module.exports = async function () {
    // Make the public CSS directory
    fs.mkdirSync("./public/assets/css", { recursive: true });

    // Get LESS files
    const filenames = await glob("src/assets/less/**/*.less");
    const lessFiles = filenames.map((file) => ({
        path: file,
        content: fs.readFileSync(file, "utf-8"),
    }));

    // Setup an array of promises for better build performance.
    const processPromises = lessFiles.map(async (file) => {
        try {
            const filename = path.basename(file.path, path.extname(file.path));
            const cssPath = `./public/assets/css/${filename}.css`;
            const mapPath = `./public/assets/css/${filename}.css.map`;

            // Step 1 - Parse the LESS. Generate a source map if we're in development
            const lessOutput = await less.render(file.content, {
                filename: file.path,
                sourceMap: isProduction
                    ? false
                    : {
                          outputSourceFiles: true,
                          sourceMapFileInline: true,
                      },
            });

            // Step 2 - Run the generated CSS through PostCSS for autoprefixer. Generate a source map (based on the LESS map) if we're in development
            const postcssResult = await processor.process(lessOutput.css, {
                from: file.path,
                to: cssPath,
                map: isProduction
                    ? false
                    : {
                          prev: lessOutput.map,
                          inline: true,
                          annotation: true,
                      },
            });

            // Step 3 - Write the CSS to a file
            fs.writeFileSync(cssPath, postcssResult.css);

            // Step 4 - If there's a map, write that too
            if (postcssResult.map) {
                fs.writeFileSync(mapPath, postcssResult.map.toString());
            }
        } catch (error) {
            console.error(`Error processing ${file.path}:`, error);
        }
    });

    await Promise.all(processPromises);
};
</file>

<file path="src/content/blog/acuti-modo.md">
---
title: Acuti modo
url: acuti-modo
description: Lorem markdownum tardantis unam mitissima dissimulator inposuit   corpus sintque tura tremenda, nec coetum.
author: Code Stitch
date: 2023-06-08T15:26:46.705Z
tags:
    - post
image: /assets/images/blog/landing.jpg
imageAlt: Kitchen
---

## Lacerans aliter tetigit praeterea rite

Lorem markdownum tardantis unam mitissima dissimulator inposuit corpus sintque tura tremenda, nec coetum. Est limen Isthmo sagittas patres emerguntque anxia [defenderet](http://www.morte.com/parvo.html) illi, est.

-   Sua ille submittere viribus verba visa Myconon
-   Qvem nec
-   Frena prior rauco iaculum enim
-   Modo referat
-   Tibi mihi sumit bibit censuque licentia consistite
-   Sumptis Iunonis muneris quiete haec tori

## Aut pedum tendit ut raptae

Est vicinia, est herba ut et [duro](http://pars.net/iamcum), agnosse dicitur spectator gracili aquarum. **Amore adfer metam** queri quartus cunctas ego.

Tectis Iovemque moriens fraternaeque Gorgonei equosque Oceanumque, huius corporis, contigerant metu vecta patietur versasse. Et undis superbus? Cura cortice saepe admisitque tamen iuvenum, vivere Lemnicolae est vidi dilapsa ianua gelidum, Ismenus. Est dic lacertos regnum quippe certo, ut vultus tollere.

## Iacentes temptabat

Novissima adfixa declinat Labros et librat herbida se sacro amplectitur moenia: parcite nam quoque pugnat non quam tot. Sole et enim inundet? Ecce urbesque _obliquis_, non patietur fuga fixa feros horruit [ferox tui](http://www.postquam.org/gravatumiphis.html), de.

1. Argentea ait exstabant trames
2. Nocti liquidum Minervae Cerberus quas
3. Neque removente

## Respondere prior si ingemit bellare

Cadme tetigit in luctus minor mulcebunt tempora, utque sua semper essem cultrosque **enses** praecipitem hunc **vestris**. Restantem iussit poena; quod vendit electarumque mendacem nec sedens quidem Iovi torta cruribus, et? Venit alvum _anima_! Manibusque idem _Aconteus ducat_ multamque et tibi Siphnon; mitissima devenit aut poscitur flumina nymphas revocare obstitit Lyciaeque Meleagros fors.

Orbem dolendi corpore hic [flamma vertere recurvas](http://paruit.com/sineloqui.html), da pedes calido unus armis relinquunt, [flores Minervae formam](http://alumnaesibi.com/unda). Caelo [inposuit](http://invirginibus.org/trahuntur) viribus semper, vesci excipit facta putes. Patitur attonitos acutior dum liquefacta nostra habebat. Duabus victus me suae viscera natorum ferox contulerat, de tuus Pasiphaeia ruunt protinus?

_Multis soror_, mundi paruerit quietem in, temeraria velantque guttura temerarius candens prostravit vera operatus, ut fecimus. Gyaros quaesiti in, a frustra, iacentia hosti. Suae iamque. Sustinet crimen toris, oves hanc est causa tum paravi phocen in natas, crudelis infra erat minimo? Inquit et **loqui studiisque Alpheos** venti spectata velocior [fida](http://www.animiquetantaque.net/atulterius.aspx) Iove habet Cometen rediit; tulisset!
</file>

<file path="src/content/blog/blog.json">
{
    "layout": "layouts/post.html",
    "tags": "post",
    "eleventyComputed": {
        "preloadImg": "{{ image }}",
        "permalink": "/blog/{{ url | slugify }}/index.html"
    }
}
</file>

<file path="src/content/blog/canitiem-saxa.md">
---
title: Canitiem Saxa
url: canitiem-saxa
description: Lorem markdownum trabeati dicere deus.
author: Code Stitch
date: 2023-06-08T15:28:08.486Z
tags:
    - post
    - featured
image: /assets/images/blog/landing.jpg
imageAlt: Kitchen
---

## Aut inter Petraeum

Lorem markdownum trabeati dicere [deus](http://www.aetatis.org/pugnacem.html) traxit certus Scythiam certum, illi mulces. Et nihil dolores? Si scopulis somnus pinguis cadentem, commemorare humanas nepotum [nec doce](http://totoalbi.com/suisfactis), Aiax ipsum! Gente conatur committere esse _efficiens_ fuerat, armis male simulasse, Libys polo.

> Cuperet factus translucet imbres in est templa sua tulit post degener, et quas regia tantus credas graves. Nunc recusat tum moenia per utque deprendi auxiliare quamvis maius tepidae nervos, ultima laqueo! Facto matris, pars saepe loco meosque cuspide.

Equos quod edendo haud, exclamant sum mortale deseret meminisse signat umente. Non fovi lacrimosa mendaci. In ursi, sed removere sequar tamque.

Fera vident; me que adfixa ama mota venabula fertur pectore totoque perculit meosque; placidissime Pergama in. Coeunt _monstri_; dixit sic poma tela, tam eandem flamma auras Rhodopen ultorem in mensae novis numeri. Scelerataque nec decorem modo _silvis medio spoliata_ index **nec chaos Iuno**. Et velis tamquam vulnificus studiisque petunt, expulsumque ille iuncturas ferre feliciter resoluta Euboicam sine, Bellona quem.

1. Bidentum relatus ilice
2. Pes sibila
3. Tamen in est
4. Studiosus foret
5. Sub facit prohibente mihi est

## Portibus Quirino

Enim altam tamen cur magis admiratur [tegebat](http://nepotum-sequantur.org/) Iuppiter forma _perdere possit_. Aniles illum deos longoque, quae si venit tetigit. Huc ferae **refugit**, proles, suggerit videt reliquit, et.

-   Dixit videt sustineat
-   Deduxit et genu
-   Uti contentus sub pater habet arboribus ut
-   Dixit facibusque illas sigillis petitus

Ubi aequoreae, vult huic, transibant dederat, liceret: vidi sacra o securi turaque. Superat hebeti, contortam honoris, di tibi. Vertex exsiluere.

Et patriaeque cum differt tenet [cupies](http://contendere.net/datque.html) contra sic et locuta Aegides opusque. Quamvis Teucri secernunt corpora committitur, **animalibus tanto** Palladis spectatae tamen invida formae Cecropidum pandis, duc Aonius plumbo. Poplitibus stipite fugiebant et rapuere missa iaculabile adunco. Fui caerula territa; latus non reddita, si tecum placet, sepulcrum. Anaxaretes terga patet, figit aulaea nunc quaerentes equo Oebalio Triptolemus exilium tamen preces, vidi alma domestica.

Aere mater potuisse, et _tendit_ alter ferre deseruere _apulus_. Suis _ignis undas_ inops decus scrutantur nymphe, facite latis, si Onetor **ibi**, deme [succincta tinnitibus](http://www.patriae.org/quorumaberant).

Pennis mens restabat sublime iuvenis, _non pariter_ armis. Umbras sed traxit dei latoque petit [triplici ultima](http://etplenum.net/), corpore.
</file>

<file path="src/content/blog/sucos-creati.md">
---
title: Sucos Creati
url: sucos-creati
description: Lorem markdownum Talia. Carinae equis.
author: Code Stitch
date: 2023-06-08T15:27:34.591Z
tags:
    - post
image: /assets/images/blog/landing.jpg
imageAlt: Kitchen
---

## Hospes meus

Lorem markdownum Talia. [Carinae equis](http://lapsasaturnia.com/inducitest).

Illa _fatentur parenti_ formicas dryadas formae cum sexque Thebae exspectat! Turaque lacrimabile patriam aristis. Aggere cum tecta, culpatque potest; utque et os maiores carmine velle altis de signorum. Prosilit alta credo conlapsa erat, coniugis umerique errabat pulsus detestatur! Te dubitat cursu?

Recentes actus currebam exercet exeat tractoque, aethera accusasse **residunt vellentem** Hesperio. Tacitaque lumina _totumque neptis_, mihi genitoris totoque nec vigili.

## Huc est erat

Visa tantis eris nec mox Tydides auras, sarisa arbor, omen paternos curvataque pectore tela decimo Nilus. Postquam _capiat_ Cyllenius unde redditur [inmensum](http://noletiacet.net/aquas-moles) pedibus. Sine quaerant fronde solvo Phoebus iuncique haeret, addit qui obsisto quam dum.

## Et erat

Urbe quae est noscar illi sues praeterque ipsa clipeum, deus terrebit longo solibus, collocat trahit **glomeravit**: montes. Petisses silvas ut, leve [est mei serpit](http://nubespetitis.org/) referuntur nostri, esse tellus Cernis Periphanta belli, hoc sunt.

Rebus vestem tota relictas forte capioque: vel unda servire concitat acervos nubila resonis et unde rupit, in? Ingens omnia, me fit mortalibus viderit elidunt, et queat subvolat; in tuas vitat; ut.

1. Dum et hanc honore ponto parias undam
2. Iuvenci toros nigro numquamque demittitur pro funeribus
3. Dolet fluitque

## Sequitur cortice teneo

Lapsus flammae. Relatus ille irascitur silet querella tacito: misisset! Tamen arduus et, capitis quae, trepidus insequitur illa pactaeque.

-   Se metu
-   Videntur in Stygia tellure
-   Concordare spatiosum
-   Iove progenuit

Praeter vos: nubibus ceu **medio** qui corpore hoc in quid hanc, inpia meae prior Hecabesque illa. Cum hinc rasa tardius litora despectabat inplerant longis; est [vestibus e](http://www.offensa-vana.com/sororibus). Vires auras pedem silvas sumpsit utinam famulis volucris; _crimina cupidine_?

Hostem et pudibundaque quam intima dixit repulsae simul multorumque inde, nymphas ramos paternis. Coepit [Hodites](http://manus.io/cum-scythicis.aspx) ab suae remisso prius cingentibus iussos vincla concordare! Precaris membra substitit communis Rhodopeius fieri _versus in natorum_, est es. Vident paribus an ipse illis, [amplexo](http://nisi.com/) ramaliaque Iovis, potes **simque** omnia.
</file>

<file path="src/content/pages/_template.txt">
---
title: "Page title for <title> and OG tags"
description: "Description for <meta> description and OG tags"
permalink: "/page-path/"
image: "OPTIONAL - If an image path is specified here, it will be used for that page's OG image. Useful for blog posts (implemented as standard with this kit)"
---

{% extends "layouts/base.html" %}

{% block head %}
    <!-- Any page-specific tags that belong in the <head>, such as a page-specific stylesheet -->
{% endblock %}

{% block body %}
    <!-- Page HTML goes here, without a <main> wrapper. The <main> tag is already presented in layouts/base.html -->
{% endblock %}
</file>

<file path="src/content/pages/about.html">
---
title: "About | NexSite"
description: "Meta description for the page"
permalink: "/about/"
---

{% extends "layouts/base.html" %}

{% block head %}
    <link rel="preload" as="image" href="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | avif %}"/>
    <link rel="preload" as="image" href="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 482, height: 536 }) | avif %}"/>
    <link rel="stylesheet" href="/assets/css/about.css">
{% endblock %}

{% block body %}

    <!-- ============================================ -->
    <!--                   Banner                     -->
    <!-- ============================================ -->

    <div id="banner-310">
        <div class="cs-container">
            <span class="cs-int-title">About Us</span>
            <div class="cs-breadcrumbs">
                <a href="/" class="cs-link">Home</a>
                <a href="/about/" class="cs-link cs-active">About Us</a>
            </div>
        </div>
        <!--Background Image-->
        <picture class="cs-background">
            <!--Mobile Image-->
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | avif %}" type="image/avif">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | webp %}" type="image/webp">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | jpeg %}" type="image/jpeg">
            <!--Tablet Image-->
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | avif %}" type="image/avif">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | webp %}" type="image/webp">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | jpeg %}" type="image/jpeg">
            <!--Desktop Image-->
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | avif %}" type="image/avif">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | webp %}" type="image/webp">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" type="image/jpeg">
            <img src="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" alt="library" width="1920" height="482" loading="eager" decoding="async">
        </picture>
    </div>

    <!-- ============================================ -->
    <!--                 Side By Side                 -->
    <!-- ============================================ -->

    <section id="RPsbs-313">
        <div class="cs-container">
            <!-- Left Image Section -->
            <div class="cs-image-group">
                <picture class="cs-picture cs-picture1">
                    <!--Mobile Image-->
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 482, height: 536 }) | avif %}" type="image/avif">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 482, height: 536 }) | webp %}" type="image/webp">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 482, height: 536 }) | jpeg %}" type="image/jpeg">
                    <!--Tablet Image-->
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 802, height: 892 }) | avif %}" type="image/avif">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 802, height: 892 }) | webp %}" type="image/webp">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 802, height: 892 }) | jpeg %}" type="image/jpeg">
                    <!--Desktop Image-->
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 1044, height: 1162 }) | avif %}" type="image/avif">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 1044, height: 1162 }) | webp %}" type="image/webp">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 1044, height: 1162 }) | jpeg %}" type="image/jpeg">
                    <img src="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 1044, height: 1162 }) | jpeg %}" alt="lawyers" width="522" height="581" decoding="async">
                </picture>
                <picture class="cs-picture cs-picture2">
                    <!--Mobile Image-->
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 366, height: 354 }) | avif %}" type="image/avif">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 366, height: 354 }) | webp %}" type="image/webp">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 366, height: 354 }) | jpeg %}" type="image/jpeg">
                    <!--Tablet Image-->
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 600, height: 578 }) | avif %}" type="image/avif">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 600, height: 578 }) | webp %}" type="image/webp">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 600, height: 578 }) | jpeg %}" type="image/jpeg">
                    <!--Desktop Image-->
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 780, height: 752 }) | avif %}" type="image/avif">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 780, height: 752 }) | webp %}" type="image/webp">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 780, height: 752 }) | jpeg %}" type="image/jpeg">
                    <img src="{% getUrl "/assets/images/construction.jpg" | resize({ width: 780, height: 752 }) | jpeg %}" alt="gavel" width="390" height="376" loading="lazy" decoding="async">
                </picture>
            </div>
            <!-- Right Content Section-->
            <div class="cs-content">
                <span class="cs-topper">About Us</span>
                <h2 class="cs-title">About NexSite</h2>
                <p class="cs-text">
                    In consequat tincidunt turpis sit amet imperdiet. Praesent Class officelan nonatoureanor mauris laoreet, iaculis libero quis. Curabitur et tempus eri consequat tincidunt turpis sit amet imperdiet. Praesent nonatourean olei aptent taciti sociosqu ad litora torquent per.
                </p>
                <div class="cs-quote">
                    <span class="cs-quote-text">
                        In consequat tincidunt turpis sit amet imperdiet. Praesent Classei consequat tincidunt turpis sit amet imperdiet for mind.
                    </span>
                    <span class="cs-name">Justin Time</span>
                    <span class="cs-job">CEO-Founder</span>
                    <img class="cs-quote-icon" loading="lazy" decoding="async" src="/assets/svgs/quote.svg" alt="gavel" width="136" height="77">
                </div>
                <a href="/contact/" class="cs-button-solid">Get in Touch</a>
            </div>
        </div>
    </section>

    {% include 'sections/cta.html' %}

{% endblock %}
</file>

<file path="src/content/pages/blog.html">
---
title: "Blog | Code Stitch Web Designs"
description: "Meta description for the page"
permalink: "/blog/"
---

{% extends "layouts/base.html" %}

{% block head %}
    <link rel="preload" as="image" href="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | avif %}"/>
    <link rel="stylesheet" href="/assets/css/blog.css">
{% endblock %}

{% block body %}
    <!-- ============================================ -->
    <!--                   Banner                     -->
    <!-- ============================================ -->

    <div id="banner-310">
        <div class="cs-container">
            <span class="cs-int-title">Blog</span>
            <div class="cs-breadcrumbs">
                <a href="/" class="cs-link">Home</a>
                <a href="/blog/" class="cs-link cs-active">Blog</a>
            </div>
        </div>
        <!--Background Image-->
        <picture class="cs-background">
            <!--Mobile Image-->
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | avif %}" type="image/avif">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | webp %}" type="image/webp">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | jpeg %}" type="image/jpeg">
            <!--Tablet Image-->
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | avif %}" type="image/avif">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | webp %}" type="image/webp">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | jpeg %}" type="image/jpeg">
            <!--Desktop Image-->
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | avif %}" type="image/avif">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | webp %}" type="image/webp">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" type="image/jpeg">
            <img src="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" alt="library" width="1920" height="482" loading="eager" decoding="async">
        </picture>
    </div>

    <!-- ============================================ -->
    <!--                 Blog Listings                -->
    <!-- ============================================ -->

    <div id="blog-listing">
        <div class="cs-container">
            {% if collections.post | length == 0 %}
                <h1 class="cs-title">No Recent Posts</h1>
            {% else %}
                {%- for post in collections.post | reverse -%}
                    <article class="cs-article">
                        <picture class="cs-article-image">
                            <!--Mobile Image-->
                            <source media="(max-width: 600px)" srcset="{% getUrl post.data.image | resize({ width: 576, height: 400 }) | avif %}" type="image/avif">
                            <source media="(max-width: 600px)" srcset="{% getUrl post.data.image | resize({ width: 576, height: 400 }) | webp %}" type="image/webp">
                            <source media="(max-width: 600px)" srcset="{% getUrl post.data.image | resize({ width: 576, height: 400 }) | jpeg %}" type="image/jpeg">
                            <!--Tablet Image-->
                            <source media="(max-width: 1024px)" srcset="{% getUrl post.data.image | resize({ width: 1142, height: 614 }) | avif %}" type="image/avif">
                            <source media="(max-width: 1024px)" srcset="{% getUrl post.data.image | resize({ width: 1142, height: 614 }) | webp %}" type="image/webp">
                            <source media="(max-width: 1024px)" srcset="{% getUrl post.data.image | resize({ width: 1142, height: 614 }) | jpeg %}" type="image/jpeg">
                            <!--Desktop Image-->
                            <source media="(min-width: 1024px)" srcset="{% getUrl post.data.image | resize({ width: 1648, height: 800 }) | avif %}" type="image/avif">
                            <source media="(min-width: 1024px)" srcset="{% getUrl post.data.image | resize({ width: 1648, height: 800 }) | webp %}" type="image/webp">
                            <source media="(min-width: 1024px)" srcset="{% getUrl post.data.image | resize({ width: 1648, height: 800 }) | jpeg %}" type="image/jpeg">
                            <img src="{% getUrl post.data.image | resize({ width: 1648, height: 800 }) | jpeg %}" alt="{{ post.data.alt }}" width="824" height="400" decoding="async">
                        </picture>
                        <div class="cs-article-group">
                            <div class="cs-author-group">
                                <picture class="cs-author-img">
                                    <img src="/assets/svgs/profile.svg" alt="Profile icon" width="32" height="32" decoding="async" loading="lazy" aria-hidden="true"/>
                                </picture>
                                <span class="cs-author-name">{{ post.data.author }}</span>
                                <span aria-hidden="true" class="cs-dot"></span>
                                <span class="cs-date">{{ post.date | postDate }}</span>
                            </div>
                            <h2 class="cs-article-title">
                                {{ post.data.title }}
                            </h2>
                            <p class="cs-article-desc">
                                {{ post.data.description }}
                            </p>
                            <a href="{{ post.url }}" class="cs-button-solid">Continue Reading</a>
                        </div>
                    </article>
                {%- endfor -%}
            {% endif %}
        </div>

        {% include 'components/featured-posts.html' %}
    </div>
{% endblock %}
</file>

<file path="src/content/pages/contact.html">
---
title: "Contact | NexSite"
description: "Meta description for the page"
permalink: "/contact/"
---

{% extends "layouts/base.html" %}

{% block head %}
    <link rel="stylesheet" href="/assets/css/contact.css">
    <link rel="preload" as="image" href="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | avif %}"/>
    <link rel="preload" as="image" href="{% getUrl "/assets/images/construction.jpg" | resize({ width: 576, height: 640 }) | avif %}"/>
{% endblock %}

{% block body %}

    <!-- ============================================ -->
    <!--                   Banner                     -->
    <!-- ============================================ -->

    <div id="banner-310">
        <div class="cs-container">
            <span class="cs-int-title">Contact Us</span>
            <div class="cs-breadcrumbs">
                <a href="/" class="cs-link">Home</a>
                <a href="/contact/" class="cs-link cs-active">Contact Us</a>
            </div>
        </div>
        <!--Background Image-->
        <picture class="cs-background">
            <!--Mobile Image-->
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | avif %}" type="image/avif">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | webp %}" type="image/webp">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | jpeg %}" type="image/jpeg">
            <!--Tablet Image-->
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | avif %}" type="image/avif">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | webp %}" type="image/webp">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | jpeg %}" type="image/jpeg">
            <!--Desktop Image-->
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | avif %}" type="image/avif">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | webp %}" type="image/webp">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" type="image/jpeg">
            <img src="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" alt="library" width="1920" height="482" loading="eager" decoding="async">
        </picture>
    </div>

    <!-- ============================================ -->
    <!--                Contact Form                  -->
    <!-- ============================================ -->

    <section id="cs-contact-265">
        <div class="cs-container">
            <div class="cs-left-section">
                <div class="cs-content">
                    <span class="cs-topper">Contact</span>
                    <h2 class="cs-title">Get in Touch</h2>
                    <p class="cs-text">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ridiculus elementum ullamcorper ipsum porttitor aliquam. Id magna urna ultrices odio pulvinar. Sed ut.
                    </p>
                </div>
                <form id="cs-form-265" name="Contact Form" method="post">
                    <label>
                        Name
                        <input required type="text" id="name-265" name="name" placeholder="Name">
                    </label>
                    <label>
                        Email
                        <input required type="text" id="email-265" name="email" placeholder="Email">
                    </label>
                    <label>
                        Phone
                        <input required type="text" id="phone-265" name="phone" placeholder="Phone">
                    </label>
                    <label>
                        How Did You Find Us
                        <input type="text" id="find-265" name="find-us" placeholder="How did you find us?">
                    </label>
                    <label class="cs-label-message">
                        Message
                        <textarea required name="Message" id="message-265" placeholder="Write message..."></textarea>
                    </label>
                    <button class="cs-button-solid cs-submit" type="submit">Submit Message</button>
                </form>
            </div>
            <div class="cs-right-section">
                <!--Email-->
                <span class="cs-header">Email</span>
                <a class="cs-link" href="mailto:{{ client.email }}">{{ client.email }}</a>
                <!--Phone-->
                <span class="cs-header">Phone</span>
                <a class="cs-link" href="tel:{{ client.phoneForTel }}">{{ client.phoneFormatted }}</a>
                <!--Address-->
                <span class="cs-header">Address</span>
                <a class="cs-link" href="{{ client.address.mapLink }}">
                    {{ client.address.lineOne }}, <br>
                    {{ client.address.lineTwo }}, <br>
                    {{ client.address.city }}, {{ client.address.state }}
                    {{ client.address.zip }}
                </a>
                <!-- Background Image-->
                <picture class="cs-bg-picture">
                    <!--Mobile Image-->
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 576, height: 640 }) | avif %}" type="image/avif">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 576, height: 640 }) | webp %}" type="image/webp">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 576, height: 640 }) | jpeg %}" type="image/jpeg">
                    <!--Tablet Image-->
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 820, height: 1372 }) | avif %}" type="image/avif">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 820, height: 1372 }) | webp %}" type="image/webp">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 820, height: 1372 }) | jpeg %}" type="image/jpeg">
                    <!--Desktop Image-->
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 1084, height: 1156 }) | avif %}" type="image/avif">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 1084, height: 1156 }) | webp %}" type="image/webp">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 1084, height: 1156 }) | jpeg %}" type="image/jpeg">
                    <img src="{% getUrl "/assets/images/construction.jpg" | resize({ width: 1084, height: 1156 }) | jpeg %}" alt="building" width="542" height="578" decoding="async">
                </picture>
            </div>
        </div>
    </section>

{% endblock %}
</file>

<file path="src/content/pages/project-one.html">
---
title: "Project One | NexSite"
description: "Meta description for the page"
permalink: "/project-one/"
---

{% extends "layouts/base.html" %}

{% block head %}
    <link rel="stylesheet" href="/assets/css/projects.css">
{% endblock %}

{% block body %}

    <!-- ============================================ -->
    <!--                   Banner                     -->
    <!-- ============================================ -->

    <div id="banner-310">
        <div class="cs-container">
            <span class="cs-int-title">Project One Gallery</span>
            <div class="cs-breadcrumbs">
                <a href="/" class="cs-link">Home</a>
                <a href="/project-one/" class="cs-link cs-active">Project One Gallery</a>
            </div>
        </div>
        <!--Background Image-->

        <picture class="cs-background">
            <!--Mobile Image-->
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | avif %}" type="image/avif">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | webp %}" type="image/webp">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | jpeg %}" type="image/jpeg">
            <!--Tablet Image-->
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | avif %}" type="image/avif">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | webp %}" type="image/webp">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | jpeg %}" type="image/jpeg">
            <!--Desktop Image-->
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | avif %}" type="image/avif">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | webp %}" type="image/webp">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" type="image/jpeg">
            <img src="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" alt="library" width="1920" height="482" loading="eager" decoding="async">
        </picture>
    </div>

    <!-- ============================================ -->
    <!--                   Gallery                    -->
    <!-- ============================================ -->

    <section id="gallery-48">
        <div class="cs-container">
            <div class="cs-content">
                <span class="cs-topper">Our Portfolio</span>
                <h2 class="cs-title">Et orci volutpat, back up generator installations</h2>
            </div>
            <div class="cs-image-group">
                <div class="cs-row cs-row-1">
                    <!-- Row 1-->
                    <picture class="cs-picture cs-picture-1">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port1.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port1.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port1.jpg" alt="new hallway" width="420" height="567">
                    </picture>
                    <picture class="cs-picture cs-picture-2">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port4.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port4.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port4.jpg" alt="new home construction" width="420" height="630">
                    </picture>
                    <picture class="cs-picture cs-picture-3">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port7.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port7.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port7.jpg" alt="building a new wall" width="420" height="512">
                    </picture>
                    <!-- To add more images, copy and paste this row's picture tags here in order from cs-picture-1 to cs-picture-3 and they will maintain the same layout-->
                </div>
                <!-- Row 2 -->
                <div class="cs-row cs-row-2">
                    <picture class="cs-picture cs-picture-1">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port2.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port2.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port2.jpg" alt="new kitchen" width="420" height="492">
                    </picture>
                    <picture class="cs-picture cs-picture-2">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port5.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port5.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port5.jpg" alt="apartment addition" width="420" height="517">
                    </picture>
                    <picture class="cs-picture cs-picture-3">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port8.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port8.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port8.jpg" alt="kew kitchen cabinets" width="420" height="629">
                    </picture>
                    <!-- To add more images, copy and paste this row's picture tags here in order from cs-picture-1 to cs-picture-3 and they will maintain the same layout-->
                </div>
                <!-- Row 3 -->
                <div class="cs-row cs-row-3">
                    <picture class="cs-picture cs-picture-1">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port3.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port3.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port3.jpg" alt="new black window structure" width="420" height="625">
                    </picture>
                    <picture class="cs-picture cs-picture-2">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port6.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port6.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port6.jpg" alt="kitchen rebovation" width="420" height="452">
                    </picture>
                    <picture class="cs-picture cs-picture-3">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port9.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port9.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port9.jpg" alt="bathroom renovation" width="420" height="629">
                    </picture>
                    <!-- To add more images, copy and paste this row's picture tags here in order from cs-picture-1 to cs-picture-3 and they will maintain the same layout-->
                </div>
            </div>
            <a href="/contact/" class="cs-button-solid">Get Started</a>
        </div>
    </section>

    {% include 'sections/cta.html' %}

{% endblock %}
</file>

<file path="src/content/pages/project-two.html">
---
title: "Project Two | NexSite"
description: "Meta description for the page"
permalink: "/project-two/"
---

{% extends "layouts/base.html" %}

{% block head %}
    <link rel="stylesheet" href="/assets/css/projects.css">
{% endblock %}

{% block body %}

    <!-- ============================================ -->
    <!--                   Banner                     -->
    <!-- ============================================ -->

    <div id="banner-310">
        <div class="cs-container">
            <span class="cs-int-title">Project Two Gallery</span>
            <div class="cs-breadcrumbs">
                <a href="/" class="cs-link">Home</a>
                <a href="/project-two/" class="cs-link cs-active">Project Two Gallery</a>
            </div>
        </div>
        <!--Background Image-->

        <picture class="cs-background">
            <!--Mobile Image-->
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | avif %}" type="image/avif">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | webp %}" type="image/webp">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | jpeg %}" type="image/jpeg">
            <!--Tablet Image-->
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | avif %}" type="image/avif">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | webp %}" type="image/webp">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | jpeg %}" type="image/jpeg">
            <!--Desktop Image-->
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | avif %}" type="image/avif">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | webp %}" type="image/webp">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" type="image/jpeg">
            <img src="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" alt="library" width="1920" height="482" loading="eager" decoding="async">
        </picture>
    </div>

    <!-- ============================================ -->
    <!--                   Gallery                    -->
    <!-- ============================================ -->

    <section id="gallery-48">
        <div class="cs-container">
            <div class="cs-content">
                <span class="cs-topper">Our Portfolio</span>
                <h2 class="cs-title">Et orci volutpat, back up generator installations</h2>
            </div>
            <div class="cs-image-group">
                <div class="cs-row cs-row-1">
                    <!-- Row 1-->
                    <picture class="cs-picture cs-picture-1">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port1.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port1.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port1.jpg" alt="new hallway" width="420" height="567">
                    </picture>
                    <picture class="cs-picture cs-picture-2">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port4.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port4.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port4.jpg" alt="new home construction" width="420" height="630">
                    </picture>
                    <picture class="cs-picture cs-picture-3">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port7.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port7.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port7.jpg" alt="building a new wall" width="420" height="512">
                    </picture>
                    <!-- To add more images, copy and paste this row's picture tags here in order from cs-picture-1 to cs-picture-3 and they will maintain the same layout-->
                </div>
                <!-- Row 2 -->
                <div class="cs-row cs-row-2">
                    <picture class="cs-picture cs-picture-1">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port2.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port2.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port2.jpg" alt="new kitchen" width="420" height="492">
                    </picture>
                    <picture class="cs-picture cs-picture-2">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port5.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port5.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port5.jpg" alt="apartment addition" width="420" height="517">
                    </picture>
                    <picture class="cs-picture cs-picture-3">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port8.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port8.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port8.jpg" alt="kew kitchen cabinets" width="420" height="629">
                    </picture>
                    <!-- To add more images, copy and paste this row's picture tags here in order from cs-picture-1 to cs-picture-3 and they will maintain the same layout-->
                </div>
                <!-- Row 3 -->
                <div class="cs-row cs-row-3">
                    <picture class="cs-picture cs-picture-1">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port3.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port3.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port3.jpg" alt="new black window structure" width="420" height="625">
                    </picture>
                    <picture class="cs-picture cs-picture-2">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port6.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port6.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port6.jpg" alt="kitchen rebovation" width="420" height="452">
                    </picture>
                    <picture class="cs-picture cs-picture-3">
                        <source media="(max-width: 600px)" srcset="/assets/images/portfolio/port9.jpg">
                        <source media="(min-width: 601px)" srcset="/assets/images/portfolio/port9.jpg">
                        <img loading="lazy" decoding="async" src="/assets/images/portfolio/port9.jpg" alt="bathroom renovation" width="420" height="629">
                    </picture>
                    <!-- To add more images, copy and paste this row's picture tags here in order from cs-picture-1 to cs-picture-3 and they will maintain the same layout-->
                </div>
            </div>
            <a href="/contact/" class="cs-button-solid">Get Started</a>
        </div>
    </section>

    {% include 'sections/cta.html' %}

{% endblock %}
</file>

<file path="src/content/pages/reviews.html">
---
title: "Reviews | Code Stitch Web Designs"
description: "Meta description for the page"
permalink: "/reviews/"
---

{% extends "layouts/base.html" %}

{% block head %}
    <link rel="stylesheet" href="/assets/css/reviews.css">
{% endblock %}

{% block body %}

    <!-- ============================================ -->
    <!--                   Banner                     -->
    <!-- ============================================ -->

    <div id="banner-310">
        <div class="cs-container">
            <span class="cs-int-title">Reviews</span>
            <div class="cs-breadcrumbs">
                <a href="/" class="cs-link">Home</a>
                <a href="/reviews/" class="cs-link cs-active">Reviews</a>
            </div>
        </div>
        <!--Background Image-->
        <picture class="cs-background">
            <!--Mobile Image-->
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | avif %}" type="image/avif">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | webp %}" type="image/webp">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 640, height: 600 }) | jpeg %}" type="image/jpeg">
            <!--Tablet Image-->
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | avif %}" type="image/avif">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | webp %}" type="image/webp">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2048, height: 942 }) | jpeg %}" type="image/jpeg">
            <!--Desktop Image-->
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | avif %}" type="image/avif">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | webp %}" type="image/webp">
            <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" type="image/jpeg">
            <img src="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 2500, height: 628 }) | jpeg %}" alt="library" width="1920" height="482" loading="eager" decoding="async">
        </picture>
    </div>

    <!-- ============================================ -->
    <!--                   Reviews                    -->
    <!-- ============================================ -->

    <section id="reviews-67">
        <div class="cs-container">
            <div class="cs-content">
                <span class="cs-topper">Our Reviews</span>
                <h2 class="cs-title">Words From Our Customers</h2>
                <p class="cs-text">
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sit dolor volutpat porttitor sagittis nunc nisl. Sagittis sit pellentesque gravida viverra. Leo ut sed euismod tortor risus et. Ornare non neque, leo, ornare. Lorem ipsum dolor sit amet.
                </p>
            </div>
            <ul class="cs-card-group">
                <!-- Review 1 -->
                <li class="cs-item">
                    <img class="cs-item-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/newsvgs/profile.svg" alt="profile picture" width="80" height="80">
                    <p class="cs-item-text">
                        Dictum dolor, nullam morbi sem in auctor proin. Consequat dolor habitasse nam sed tempor. Viverra magna pharetra rhoncus, nec sed ullamcorper lectus et. Auctor velit diam fermentum consequat. Feugiat viverra massa urna, volutpat orci imperdiet eget eget. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Inventore, debitis!
                    </p>
                    <div class="cs-info">
                        <div class="cs-flex-group">
                            <span class="cs-name">Jon Doe</span>
                            <span class="cs-desc">Homeowner</span>
                        </div>
                        <img class="cs-item-stars" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/stars.svg" alt="stars" width="96" height="16">
                    </div>
                </li>
                <!-- Review 2 -->
                <li class="cs-item">
                    <img class="cs-item-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/newsvgs/profile.svg" alt="profile picture" width="80" height="80">
                    <p class="cs-item-text">
                        Dictum dolor, nullam morbi sem in auctor proin. Consequat dolor habitasse nam sed tempor. Viverra magna pharetra rhoncus, nec sed ullamcorper lectus et. Auctor velit diam fermentum consequat. Feugiat viverra massa urna, volutpat orci imperdiet eget eget.
                    </p>
                    <div class="cs-info">
                        <div class="cs-flex-group">
                            <span class="cs-name">Jon Doe</span>
                            <span class="cs-desc">Homeowner</span>
                        </div>
                        <img class="cs-item-stars" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/stars.svg" alt="stars" width="96" height="16">
                    </div>
                </li>
                <!-- Review 3 -->
                <li class="cs-item">
                    <img class="cs-item-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/newsvgs/profile.svg" alt="profile picture" width="80" height="80">
                    <p class="cs-item-text">
                        Dictum dolor, nullam morbi sem in auctor proin. Consequat dolor habitasse nam sed tempor. Viverra magna pharetra rhoncus, nec sed ullamcorper lectus et. Auctor velit diam fermentum consequat. Feugiat viverra massa urna, volutpat orci imperdiet eget eget.
                    </p>
                    <div class="cs-info">
                        <div class="cs-flex-group">
                            <span class="cs-name">Jon Doe</span>
                            <span class="cs-desc">Homeowner</span>
                        </div>
                        <img class="cs-item-stars" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/stars.svg" alt="stars" width="96" height="16">
                    </div>
                </li>
                <!-- Review 1 -->
                <li class="cs-item">
                    <img class="cs-item-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/newsvgs/profile.svg" alt="profile picture" width="80" height="80">
                    <p class="cs-item-text">
                        Dictum dolor, nullam morbi sem in auctor proin. Consequat dolor habitasse nam sed tempor. Viverra magna pharetra rhoncus, nec sed ullamcorper lectus et. Auctor velit diam fermentum consequat. Feugiat viverra massa urna, volutpat orci imperdiet eget eget. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Inventore, debitis!
                    </p>
                    <div class="cs-info">
                        <div class="cs-flex-group">
                            <span class="cs-name">Jon Doe</span>
                            <span class="cs-desc">Homeowner</span>
                        </div>
                        <img class="cs-item-stars" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/stars.svg" alt="stars" width="96" height="16">
                    </div>
                </li>
                <!-- Review 2 -->
                <li class="cs-item">
                    <img class="cs-item-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/newsvgs/profile.svg" alt="profile picture" width="80" height="80">
                    <p class="cs-item-text">
                        Dictum dolor, nullam morbi sem in auctor proin. Consequat dolor habitasse nam sed tempor. Viverra magna pharetra rhoncus, nec sed ullamcorper lectus et. Auctor velit diam fermentum consequat. Feugiat viverra massa urna, volutpat orci imperdiet eget eget.
                    </p>
                    <div class="cs-info">
                        <div class="cs-flex-group">
                            <span class="cs-name">Jon Doe</span>
                            <span class="cs-desc">Homeowner</span>
                        </div>
                        <img class="cs-item-stars" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/stars.svg" alt="stars" width="96" height="16">
                    </div>
                </li>
                <!-- Review 3 -->
                <li class="cs-item">
                    <img class="cs-item-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/newsvgs/profile.svg" alt="profile picture" width="80" height="80">
                    <p class="cs-item-text">
                        Dictum dolor, nullam morbi sem in auctor proin. Consequat dolor habitasse nam sed tempor. Viverra magna pharetra rhoncus, nec sed ullamcorper lectus et. Auctor velit diam fermentum consequat. Feugiat viverra massa urna, volutpat orci imperdiet eget eget.
                    </p>
                    <div class="cs-info">
                        <div class="cs-flex-group">
                            <span class="cs-name">Jon Doe</span>
                            <span class="cs-desc">Homeowner</span>
                        </div>
                        <img class="cs-item-stars" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/stars.svg" alt="stars" width="96" height="16">
                    </div>
                </li>
                <!-- Review 1 -->
                <li class="cs-item">
                    <img class="cs-item-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/newsvgs/profile.svg" alt="profile picture" width="80" height="80">
                    <p class="cs-item-text">
                        Dictum dolor, nullam morbi sem in auctor proin. Consequat dolor habitasse nam sed tempor. Viverra magna pharetra rhoncus, nec sed ullamcorper lectus et. Auctor velit diam fermentum consequat. Feugiat viverra massa urna, volutpat orci imperdiet eget eget. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Inventore, debitis!
                    </p>
                    <div class="cs-info">
                        <div class="cs-flex-group">
                            <span class="cs-name">Jon Doe</span>
                            <span class="cs-desc">Homeowner</span>
                        </div>
                        <img class="cs-item-stars" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/stars.svg" alt="stars" width="96" height="16">
                    </div>
                </li>
                <!-- Review 2 -->
                <li class="cs-item">
                    <img class="cs-item-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/newsvgs/profile.svg" alt="profile picture" width="80" height="80">
                    <p class="cs-item-text">
                        Dictum dolor, nullam morbi sem in auctor proin. Consequat dolor habitasse nam sed tempor. Viverra magna pharetra rhoncus, nec sed ullamcorper lectus et. Auctor velit diam fermentum consequat. Feugiat viverra massa urna, volutpat orci imperdiet eget eget.
                    </p>
                    <div class="cs-info">
                        <div class="cs-flex-group">
                            <span class="cs-name">Jon Doe</span>
                            <span class="cs-desc">Homeowner</span>
                        </div>
                        <img class="cs-item-stars" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/stars.svg" alt="stars" width="96" height="16">
                    </div>
                </li>
                <!-- Review 3 -->
                <li class="cs-item">
                    <img class="cs-item-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/newsvgs/profile.svg" alt="profile picture" width="80" height="80">
                    <p class="cs-item-text">
                        Dictum dolor, nullam morbi sem in auctor proin. Consequat dolor habitasse nam sed tempor. Viverra magna pharetra rhoncus, nec sed ullamcorper lectus et. Auctor velit diam fermentum consequat. Feugiat viverra massa urna, volutpat orci imperdiet eget eget.
                    </p>
                    <div class="cs-info">
                        <div class="cs-flex-group">
                            <span class="cs-name">Jon Doe</span>
                            <span class="cs-desc">Homeowner</span>
                        </div>
                        <img class="cs-item-stars" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/stars.svg" alt="stars" width="96" height="16">
                    </div>
                </li>
            </ul>
            <a href="/contact/" class="cs-button-solid">Get in Touch</a>
        </div>
    </section>

    {% include 'sections/cta.html' %}

{% endblock %}
</file>

<file path="src/content/content.json">
{
    "tags": "sitemap"
}
</file>

<file path="src/_redirects">

</file>

<file path="src/index.html">
---
title: "Pixel Perfect Websites | NexSite | Denver, CO"
description: "Meta description for the page"
permalink: "/"
tags: "sitemap" # content/content.json will make sure that all pages in content/ are marked with a "sitemap" tag, for automatic sitemap generation. As index.html is not in content/, we need to add it here to ensure the root page is included in the sitemap generation
---

{% extends "layouts/base.html" %}

{% block head %}
    <!-- Critical styles are loaded first -->
    <link rel="stylesheet" href="/assets/css/critical.css"/>

    <!-- If we're in production, defer the rest of the home page styles. In development, always load it. Otherwise the site will break when hot-reload is used. -->
    {% if kit.isProduction %}
        <link rel="preload" href="/assets/css/local.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
        <noscript>
            <link rel="stylesheet" href="/assets/css/local.css">
        </noscript>

    {% else %}
        <link rel="stylesheet" href="/assets/css/local.css"/>
    {% endif %}

    <!-- To ensure proper validation, prevent errors, and encourage developers to check, schema's are an opt-in feature. They're very bespoke and requires some customising  -->
    <!-- Uncomment the code below to enable Structured Data, and test it when you deploy to Netlify - https://developers.google.com/search/docs/appearance/structured-data -->
    <!-- {% include "components/home-schema.html" %} -->
{% endblock %}

{% block body %}

    <!-- ============================================ -->
    <!--                    Hero                      -->
    <!-- ============================================ -->

    <section id="hero-143">
        <div class="cs-container">
            <span class="cs-topper">NexSite Presents</span>
            <h1 class="cs-title">The NexSite template (LESS)</h1>
            <p class="cs-text">
                Building faster websites, faster. Just clone, update _data/client.js, swap out some sections, and away you go!
            </p>
            <a href="/contact/" class="cs-button-solid">Get in Touch</a>
        </div>

        <!-- Background Image -->
        <picture class="cs-background">
            <!--Mobile Image-->
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/landing.jpg" | resize({ width: 640, height: 1490 }) | avif %}" type="image/avif">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/landing.jpg" | resize({ width: 640, height: 1490 }) | webp %}" type="image/webp">
            <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/landing.jpg" | resize({ width: 640, height: 1490 }) | jpeg %}" type="image/jpeg">
            <!--Tablet Image-->
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/landing.jpg" | resize({ width: 2048, height: 1922 }) | avif %}" type="image/avif">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/landing.jpg" | resize({ width: 2048, height: 1922 }) | webp %}" type="image/webp">
            <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/landing.jpg" | resize({ width: 2048, height: 1922 }) | jpeg %}" type="image/jpeg">
            <!--Large Tablet Image-->
            <source media="(min-width: 1024px) and (max-width: 1300px)" srcset="{% getUrl "/assets/images/landing.jpg" | resize({ width: 2048, height: 1922 }) | avif %}" type="image/avif">
            <source media="(min-width: 1024px) and (max-width: 1300px)" srcset="{% getUrl "/assets/images/landing.jpg" | resize({ width: 2048, height: 1922 }) | webp %}" type="image/webp">
            <source media="(min-width: 1024px) and (max-width: 1300px)" srcset="{% getUrl "/assets/images/landing.jpg" | resize({ width: 2048, height: 1922 }) | jpeg %}" type="image/jpeg">
            <!--Desktop Image-->
            <source media="(min-width: 1300px)" srcset="{% getUrl "/assets/images/landing.jpg" | resize({ width: 1, height: 1 }) | avif %}" type="image/avif">
            <source media="(min-width: 1300px)" srcset="{% getUrl "/assets/images/landing.jpg" | resize({ width: 1, height: 1 }) | webp %}" type="image/webp">
            <source media="(min-width: 1300px)" srcset="{% getUrl "/assets/images/landing.jpg" | resize({ width: 1, height: 1 }) | jpeg %}" type="image/jpeg">
            <img src="{% getUrl "/assets/images/landing.jpg" | resize({ width: 1, height: 1 }) | jpeg %}" alt="kitchen" width="1" height="1" loading="eager" decoding="async">
        </picture>
    </section>

    <!-- ============================================ -->
    <!--                   Services                   -->
    <!-- ============================================ -->

    <section id="h-services-143">
        <ul class="cs-card-group">
            <li class="cs-item">
                <picture class="cs-icon">
                    <img loading="lazy" decoding="async" src="/assets/svgs/s1.svg" alt="icon" width="52" height="52" aria-hidden="true">
                </picture>
                <h2 class="cs-title">Full Kitchen Remodel</h2>
                <p class="cs-text">
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                </p>
            </li>
            <li class="cs-item">
                <picture class="cs-icon">
                    <img loading="lazy" decoding="async" src="/assets/svgs/s2.svg" alt="icon" width="52" height="52" aria-hidden="true">
                </picture>
                <h2 class="cs-title">Exterior Repairs</h2>
                <p class="cs-text">
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                </p>
            </li>
            <li class="cs-item">
                <picture class="cs-icon">
                    <img loading="lazy" decoding="async" src="/assets/svgs/s3.svg" alt="icon" width="52" height="52" aria-hidden="true">
                </picture>
                <h2 class="cs-title">Utility Maintenance</h2>
                <p class="cs-text">
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                </p>
            </li>
            <li class="cs-item">
                <picture class="cs-icon">
                    <img loading="lazy" decoding="async" src="/assets/svgs/s4.svg" alt="icon" width="52" height="52" aria-hidden="true">
                </picture>
                <h2 class="cs-title">Design Consultation</h2>
                <p class="cs-text">
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                </p>
            </li>
        </ul>
    </section>

    <!-- ============================================ -->
    <!--                 Side By Side                 -->
    <!-- ============================================ -->

    <section id="RPsbs-313">
        <div class="cs-container">
            <!-- Left Image Section -->
            <div class="cs-image-group">
                <picture class="cs-picture cs-picture1">
                    <!--Mobile Image-->
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 482, height: 536 }) | avif %}" type="image/avif">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 482, height: 536 }) | webp %}" type="image/webp">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 482, height: 536 }) | jpeg %}" type="image/jpeg">
                    <!--Tablet Image-->
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 802, height: 892 }) | avif %}" type="image/avif">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 802, height: 892 }) | webp %}" type="image/webp">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 802, height: 892 }) | jpeg %}" type="image/jpeg">
                    <!--Desktop Image-->
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 1044, height: 1162 }) | avif %}" type="image/avif">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 1044, height: 1162 }) | webp %}" type="image/webp">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 1044, height: 1162 }) | jpeg %}" type="image/jpeg">
                    <img src="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 1044, height: 1162 }) | jpeg %}" alt="lawyers" width="522" height="581" loading="lazy" decoding="async">
                </picture>
                <picture class="cs-picture cs-picture2">
                    <!--Mobile Image-->
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 366, height: 354 }) | avif %}" type="image/avif">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 366, height: 354 }) | webp %}" type="image/webp">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 366, height: 354 }) | jpeg %}" type="image/jpeg">
                    <!--Tablet Image-->
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 600, height: 578 }) | avif %}" type="image/avif">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 600, height: 578 }) | webp %}" type="image/webp">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 600, height: 578 }) | jpeg %}" type="image/jpeg">
                    <!--Desktop Image-->
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 780, height: 752 }) | avif %}" type="image/avif">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 780, height: 752 }) | webp %}" type="image/webp">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 780, height: 752 }) | jpeg %}" type="image/jpeg">
                    <img src="{% getUrl "/assets/images/construction.jpg" | resize({ width: 780, height: 752 }) | jpeg %}" alt="gavel" width="390" height="376" loading="lazy" decoding="async">
                </picture>
            </div>
            <!-- Right Content Section-->
            <div class="cs-content">
                <span class="cs-topper">About Us</span>
                <h2 class="cs-title">About Stitch Law</h2>
                <p class="cs-text">
                    In consequat tincidunt turpis sit amet imperdiet. Praesent Class officelan nonatoureanor mauris laoreet, iaculis libero quis. Curabitur et tempus eri consequat tincidunt turpis sit amet imperdiet. Praesent nonatourean olei aptent taciti sociosqu ad litora torquent per.
                </p>
                <div class="cs-quote">
                    <span class="cs-quote-text">
                        In consequat tincidunt turpis sit amet imperdiet. Praesent Classei consequat tincidunt turpis sit amet imperdiet for mind.
                    </span>
                    <span class="cs-name">Justin Time</span>
                    <span class="cs-job">CEO-Founder</span>
                    <img class="cs-quote-icon" loading="lazy" decoding="async" src="/assets/svgs/quote.svg" alt="gavel" width="136" height="77">
                </div>
                <a href="/about/" class="cs-button-solid">About Us</a>
            </div>
        </div>
    </section>

    <!-- ============================================ -->
    <!--             Side By Side Reverse             -->
    <!-- ============================================ -->

    <section id="RPsbsr-313">
        <div class="cs-container">
            <!-- Left Image Section -->
            <div class="cs-image-group">
                <picture class="cs-picture cs-picture1">
                    <!--Mobile Image-->
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 482, height: 536 }) | avif %}" type="image/avif">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 482, height: 536 }) | webp %}" type="image/webp">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 482, height: 536 }) | jpeg %}" type="image/jpeg">
                    <!--Tablet Image-->
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 802, height: 892 }) | avif %}" type="image/avif">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 802, height: 892 }) | webp %}" type="image/webp">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 802, height: 892 }) | jpeg %}" type="image/jpeg">
                    <!--Desktop Image-->
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 1044, height: 1162 }) | avif %}" type="image/avif">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 1044, height: 1162 }) | webp %}" type="image/webp">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 1044, height: 1162 }) | jpeg %}" type="image/jpeg">
                    <img src="{% getUrl "/assets/images/cabinets.jpg" | resize({ width: 1044, height: 1162 }) | jpeg %}" alt="lawyers" width="522" height="581" loading="lazy" decoding="async">
                </picture>
                <picture class="cs-picture cs-picture2">
                    <!--Mobile Image-->
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 366, height: 354 }) | avif %}" type="image/avif">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 366, height: 354 }) | webp %}" type="image/webp">
                    <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 366, height: 354 }) | jpeg %}" type="image/jpeg">
                    <!--Tablet Image-->
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 600, height: 578 }) | avif %}" type="image/avif">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 600, height: 578 }) | webp %}" type="image/webp">
                    <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 600, height: 578 }) | jpeg %}" type="image/jpeg">
                    <!--Desktop Image-->
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 780, height: 752 }) | avif %}" type="image/avif">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 780, height: 752 }) | webp %}" type="image/webp">
                    <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/construction.jpg" | resize({ width: 780, height: 752 }) | jpeg %}" type="image/jpeg">
                    <img src="{% getUrl "/assets/images/construction.jpg" | resize({ width: 780, height: 752 }) | jpeg %}" alt="gavel" width="390" height="376" loading="lazy" decoding="async">
                </picture>
            </div>
            <!-- Right Content Section-->
            <div class="cs-content">
                <span class="cs-topper">About Us</span>
                <h2 class="cs-title">About Stitch Law</h2>
                <p class="cs-text">
                    In consequat tincidunt turpis sit amet imperdiet. Praesent Class officelan nonatoureanor mauris laoreet, iaculis libero quis. Curabitur et tempus eri consequat tincidunt turpis sit amet imperdiet. Praesent nonatourean olei aptent taciti sociosqu ad litora torquent per.
                </p>
                <p class="cs-text">
                    In consequat tincidunt turpis sit amet imperdiet. Praesent Class officelan nonatoureanor mauris laoreet, iaculis libero quis. Curabitur et tempus eri consequat tincidunt turpis sit amet imperdiet. Praesent nonatourean olei aptent taciti sociosqu ad litora torquent per.
                </p>
                <p class="cs-text">
                    In consequat tincidunt turpis sit amet imperdiet. Praesent Class officelan nonatoureanor mauris laoreet, iaculis libero quis. Curabitur et tempus eri consequat tincidunt turpis sit amet imperdiet. Praesent nonatourean olei aptent taciti sociosqu ad litora torquent per.
                </p>
                <a href="/about/" class="cs-button-solid">About Us</a>
            </div>
        </div>
    </section>

    <!-- ============================================ -->
    <!--                   Gallery                    -->
    <!-- ============================================ -->

    <section id="gallery-48">
        <div class="cs-container">
            <div class="cs-content">
                <span class="cs-topper">Our Portfolio</span>
                <h2 class="cs-title">Et orci volutpat, back up generator installations</h2>
            </div>
            <div class="cs-image-group">
                <div class="cs-row cs-row-1">
                    <!-- Row 1-->
                    <picture class="cs-picture cs-picture-1">
                        <!--Mobile Image-->
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port1.jpg" | resize({ width: 182, height: 250 }) | avif %}" type="image/avif">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port1.jpg" | resize({ width: 182, height: 250 }) | webp %}" type="image/webp">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port1.jpg" | resize({ width: 182, height: 250 }) | jpeg %}" type="image/jpeg">
                        <!--Tablet Image-->
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port1.jpg" | resize({ width: 634, height: 798 }) | avif %}" type="image/avif">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port1.jpg" | resize({ width: 634, height: 798 }) | webp %}" type="image/webp">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port1.jpg" | resize({ width: 634, height: 798 }) | jpeg %}" type="image/jpeg">
                        <!--Desktop Image-->
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port1.jpg" | resize({ width: 826, height: 1134 }) | avif %}" type="image/avif">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port1.jpg" | resize({ width: 826, height: 1134 }) | webp %}" type="image/webp">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port1.jpg" | resize({ width: 826, height: 1134 }) | jpeg %}" type="image/jpeg">
                        <img src="{% getUrl "/assets/images/portfolio/port1.jpg" | resize({ width: 826, height: 1134 }) | jpeg %}" alt="new hallway" width="413" height="567" loading="lazy" decoding="async">
                    </picture>
                    <picture class="cs-picture cs-picture-2">
                        <!--Mobile Image-->
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port4.jpg" | resize({ width: 182, height: 276 }) | avif %}" type="image/avif">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port4.jpg" | resize({ width: 182, height: 276 }) | webp %}" type="image/webp">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port4.jpg" | resize({ width: 182, height: 276 }) | jpeg %}" type="image/jpeg">
                        <!--Tablet Image-->
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port4.jpg" | resize({ width: 634, height: 886 }) | avif %}" type="image/avif">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port4.jpg" | resize({ width: 634, height: 886 }) | webp %}" type="image/webp">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port4.jpg" | resize({ width: 634, height: 886 }) | jpeg %}" type="image/jpeg">
                        <!--Desktop Image-->
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port4.jpg" | resize({ width: 826, height: 1258 }) | avif %}" type="image/avif">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port4.jpg" | resize({ width: 826, height: 1258 }) | webp %}" type="image/webp">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port4.jpg" | resize({ width: 826, height: 1258 }) | jpeg %}" type="image/jpeg">
                        <img src="{% getUrl "/assets/images/portfolio/port4.jpg" | resize({ width: 826, height: 1258 }) | jpeg %}" alt="new home construction" width="413" height="629" loading="lazy" decoding="async">
                    </picture>
                    <picture class="cs-picture cs-picture-3">
                        <!--Mobile Image-->
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port7.jpg" | resize({ width: 182, height: 226 }) | avif %}" type="image/avif">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port7.jpg" | resize({ width: 182, height: 226 }) | webp %}" type="image/webp">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port7.jpg" | resize({ width: 182, height: 226 }) | jpeg %}" type="image/jpeg">
                        <!--Tablet Image-->
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port7.jpg" | resize({ width: 634, height: 720 }) | avif %}" type="image/avif">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port7.jpg" | resize({ width: 634, height: 720 }) | webp %}" type="image/webp">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port7.jpg" | resize({ width: 634, height: 720 }) | jpeg %}" type="image/jpeg">
                        <!--Desktop Image-->
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port7.jpg" | resize({ width: 826, height: 1024 }) | avif %}" type="image/avif">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port7.jpg" | resize({ width: 826, height: 1024 }) | webp %}" type="image/webp">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port7.jpg" | resize({ width: 826, height: 1024 }) | jpeg %}" type="image/jpeg">
                        <img src="{% getUrl "/assets/images/portfolio/port7.jpg" | resize({ width: 826, height: 1024 }) | jpeg %}" alt="building a new wall" width="413" height="512" loading="lazy" decoding="async">
                    </picture>
                    <!-- To add more images, copy and paste this row's picture tags here in order from cs-picture-1 to cs-picture-3 and they will maintain the same layout-->
                </div>
                <!-- Row 2 -->
                <div class="cs-row cs-row-2">
                    <picture class="cs-picture cs-picture-1">
                        <!--Mobile Image-->
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port2.jpg" | resize({ width: 182, height: 216 }) | avif %}" type="image/avif">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port2.jpg" | resize({ width: 182, height: 216 }) | webp %}" type="image/webp">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port2.jpg" | resize({ width: 182, height: 216 }) | jpeg %}" type="image/jpeg">
                        <!--Tablet Image-->
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port2.jpg" | resize({ width: 634, height: 692 }) | avif %}" type="image/avif">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port2.jpg" | resize({ width: 634, height: 692 }) | webp %}" type="image/webp">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port2.jpg" | resize({ width: 634, height: 692 }) | jpeg %}" type="image/jpeg">
                        <!--Desktop Image-->
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port2.jpg" | resize({ width: 826, height: 984 }) | avif %}" type="image/avif">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port2.jpg" | resize({ width: 826, height: 984 }) | webp %}" type="image/webp">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port2.jpg" | resize({ width: 826, height: 984 }) | jpeg %}" type="image/jpeg">
                        <img src="{% getUrl "/assets/images/portfolio/port2.jpg" | resize({ width: 826, height: 984 }) | jpeg %}" alt="new kitchen" width="413" height="492" loading="lazy" decoding="async">
                    </picture>
                    <picture class="cs-picture cs-picture-2">
                        <!--Mobile Image-->
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port5.jpg" | resize({ width: 182, height: 228 }) | avif %}" type="image/avif">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port5.jpg" | resize({ width: 182, height: 228 }) | webp %}" type="image/webp">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port5.jpg" | resize({ width: 182, height: 228 }) | jpeg %}" type="image/jpeg">
                        <!--Tablet Image-->
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port5.jpg" | resize({ width: 634, height: 728 }) | avif %}" type="image/avif">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port5.jpg" | resize({ width: 634, height: 728 }) | webp %}" type="image/webp">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port5.jpg" | resize({ width: 634, height: 728 }) | jpeg %}" type="image/jpeg">
                        <!--Desktop Image-->
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port5.jpg" | resize({ width: 826, height: 1034 }) | avif %}" type="image/avif">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port5.jpg" | resize({ width: 826, height: 1034 }) | webp %}" type="image/webp">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port5.jpg" | resize({ width: 826, height: 1034 }) | jpeg %}" type="image/jpeg">
                        <img src="{% getUrl "/assets/images/portfolio/port5.jpg" | resize({ width: 826, height: 1034 }) | jpeg %}" alt="apartment addition" width="413" height="517" loading="lazy" decoding="async">
                    </picture>

                    <picture class="cs-picture cs-picture-3">
                        <!--Mobile Image-->
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port8.jpg" | resize({ width: 182, height: 276 }) | avif %}" type="image/avif">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port8.jpg" | resize({ width: 182, height: 276 }) | webp %}" type="image/webp">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port8.jpg" | resize({ width: 182, height: 276 }) | jpeg %}" type="image/jpeg">
                        <!--Tablet Image-->
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port8.jpg" | resize({ width: 634, height: 886 }) | avif %}" type="image/avif">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port8.jpg" | resize({ width: 634, height: 886 }) | webp %}" type="image/webp">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port8.jpg" | resize({ width: 634, height: 886 }) | jpeg %}" type="image/jpeg">
                        <!--Desktop Image-->
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port8.jpg" | resize({ width: 826, height: 1258 }) | avif %}" type="image/avif">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port8.jpg" | resize({ width: 826, height: 1258 }) | webp %}" type="image/webp">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port8.jpg" | resize({ width: 826, height: 1258 }) | jpeg %}" type="image/jpeg">
                        <img src="{% getUrl "/assets/images/portfolio/port8.jpg" | resize({ width: 826, height: 1258 }) | jpeg %}" alt="kew kitchen cabinets" width="413" height="629" loading="lazy" decoding="async">
                    </picture>

                    <!-- To add more images, copy and paste this row's picture tags here in order from cs-picture-1 to cs-picture-3 and they will maintain the same layout-->
                </div>
                <!-- Row 3 -->
                <div class="cs-row cs-row-3">
                    <picture class="cs-picture cs-picture-1">
                        <!--Mobile Image-->
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port3.jpg" | resize({ width: 182, height: 276 }) | avif %}" type="image/avif">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port3.jpg" | resize({ width: 182, height: 276 }) | webp %}" type="image/webp">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port3.jpg" | resize({ width: 182, height: 276 }) | jpeg %}" type="image/jpeg">
                        <!--Tablet Image-->
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port3.jpg" | resize({ width: 634, height: 880 }) | avif %}" type="image/avif">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port3.jpg" | resize({ width: 634, height: 880 }) | webp %}" type="image/webp">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port3.jpg" | resize({ width: 634, height: 880 }) | jpeg %}" type="image/jpeg">
                        <!--Desktop Image-->
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port3.jpg" | resize({ width: 826, height: 1250 }) | avif %}" type="image/avif">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port3.jpg" | resize({ width: 826, height: 1250 }) | webp %}" type="image/webp">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port3.jpg" | resize({ width: 826, height: 1250 }) | jpeg %}" type="image/jpeg">
                        <img src="{% getUrl "/assets/images/portfolio/port3.jpg" | resize({ width: 826, height: 1250 }) | jpeg %}" alt="new black window structure" width="413" height="625" loading="lazy" decoding="async">
                    </picture>
                    <picture class="cs-picture cs-picture-2">
                        <!--Mobile Image-->
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port6.jpg" | resize({ width: 182, height: 198 }) | avif %}" type="image/avif">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port6.jpg" | resize({ width: 182, height: 198 }) | webp %}" type="image/webp">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port6.jpg" | resize({ width: 182, height: 198 }) | jpeg %}" type="image/jpeg">
                        <!--Tablet Image-->
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port6.jpg" | resize({ width: 634, height: 636 }) | avif %}" type="image/avif">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port6.jpg" | resize({ width: 634, height: 636 }) | webp %}" type="image/webp">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port6.jpg" | resize({ width: 634, height: 636 }) | jpeg %}" type="image/jpeg">
                        <!--Desktop Image-->
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port6.jpg" | resize({ width: 826, height: 904 }) | avif %}" type="image/avif">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port6.jpg" | resize({ width: 826, height: 904 }) | webp %}" type="image/webp">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port6.jpg" | resize({ width: 826, height: 904 }) | jpeg %}" type="image/jpeg">
                        <img src="{% getUrl "/assets/images/portfolio/port6.jpg" | resize({ width: 826, height: 904 }) | jpeg %}" alt="kitchen rebovation" width="413" height="452" loading="lazy" decoding="async">
                    </picture>

                    <picture class="cs-picture cs-picture-3">
                        <!--Mobile Image-->
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port9.jpg" | resize({ width: 182, height: 276 }) | avif %}" type="image/avif">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port9.jpg" | resize({ width: 182, height: 276 }) | webp %}" type="image/webp">
                        <source media="(max-width: 600px)" srcset="{% getUrl "/assets/images/portfolio/port9.jpg" | resize({ width: 182, height: 276 }) | jpeg %}" type="image/jpeg">
                        <!--Tablet Image-->
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port9.jpg" | resize({ width: 634, height: 886 }) | avif %}" type="image/avif">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port9.jpg" | resize({ width: 634, height: 886 }) | webp %}" type="image/webp">
                        <source media="(max-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port9.jpg" | resize({ width: 634, height: 886 }) | jpeg %}" type="image/jpeg">
                        <!--Desktop Image-->
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port9.jpg" | resize({ width: 826, height: 1258 }) | avif %}" type="image/avif">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port9.jpg" | resize({ width: 826, height: 1258 }) | webp %}" type="image/webp">
                        <source media="(min-width: 1024px)" srcset="{% getUrl "/assets/images/portfolio/port9.jpg" | resize({ width: 826, height: 1258 }) | jpeg %}" type="image/jpeg">
                        <img src="{% getUrl "/assets/images/portfolio/port9.jpg" | resize({ width: 826, height: 1258 }) | jpeg %}" alt="bathroom renovation" width="413" height="629" loading="lazy" decoding="async">
                    </picture>

                    <!-- To add more images, copy and paste this row's picture tags here in order from cs-picture-1 to cs-picture-3 and they will maintain the same layout-->
                </div>
            </div>
            <a href="/project-one/" class="cs-button-solid">View a Project</a>
        </div>
    </section>

    <!-- ============================================ -->
    <!--                   Reviews                    -->
    <!-- ============================================ -->

    <section id="reviews-67">
        <div class="cs-container">
            <div class="cs-content">
                <span class="cs-topper">Our Reviews</span>
                <h2 class="cs-title">Words From Our Customers</h2>
                <p class="cs-text">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sit dolor volutpat porttitor sagittis nunc nisl. Sagittis sit pellentesque gravida viverra. Leo ut sed euismod tortor risus et. Ornare non neque, leo, ornare. Lorem ipsum dolor sit amet.
            </p>
            </div>
            <ul class="cs-card-group">
                <!-- Review 1 -->
                <li class="cs-item">
                    <img class="cs-item-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/newsvgs/profile.svg" alt="profile picture" width="80" height="80">
                    <p class="cs-item-text">
                    Dictum dolor, nullam morbi sem in auctor proin. Consequat dolor habitasse nam sed tempor. Viverra magna pharetra rhoncus, nec sed ullamcorper lectus et. Auctor velit diam fermentum consequat. Feugiat viverra massa urna, volutpat orci imperdiet eget eget. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Inventore, debitis!
                </p>
                    <div class="cs-info">
                        <div class="cs-flex-group">
                            <span class="cs-name">Jon Doe</span>
                            <span class="cs-desc">Homeowner</span>
                        </div>
                        <img class="cs-item-stars" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/stars.svg" alt="stars" width="96" height="16">
                    </div>
                </li>
                <!-- Review 2 -->
                <li class="cs-item">
                    <img class="cs-item-img" aria-hidden="true" loading="lazy" decoding="async" src="/assets/newsvgs/profile.svg" alt="profile picture" width="80" height="80">
                    <p class="cs-item-text">
                    Dictum dolor, nullam morbi sem in auctor proin. Consequat dolor habitasse nam sed tempor. Viverra magna pharetra rhoncus, nec sed ullamcorper lectus et. Auctor velit diam fermentum consequat. Feugiat viverra massa urna, volutpat orci imperdiet eget eget.
                </p>
                    <div class="cs-info">
                        <div class="cs-flex-group">
                            <span class="cs-name">Jon Doe</span>
                            <span class="cs-desc">Homeowner</span>
                        </div>
                        <img class="cs-item-stars" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/stars.svg" alt="stars" width="96" height="16">
                    </div>
                </li>
            </ul>
            <a href="/reviews/" class="cs-button-solid">Read All Reviews</a>
        </div>
    </section>

    {% include 'sections/cta.html' %}
{% endblock %}
</file>

<file path="src/robots.html">
---
permalink: /robots.txt
layout: null
eleventyExcludeFromCollections: true
---
User-agent: *
Disallow: /admin/
Allow: /

Sitemap: {{ client.domain }}/sitemap.xml
</file>

<file path="src/sitemap.html">
---
permalink: /sitemap.xml
layout: null
eleventyExcludeFromCollections: true
---
<!-- This will get all pages that has a "tag" of "sitemap" and generate a sitemap.xml file every time the site is built -->
<!-- All pages in ./src/content will automatically be tagged, because of the content/content.json directory data file -->
<!-- index.html has this tag in the front matter -->
{% sitemap collections.sitemap %}
</file>

<file path=".eleventy.js">
// ─────────────────────────────────────────────────────────────────────────────
// ELEVENTY CONFIGURATION
// This file configures how Eleventy builds your static site
// Documentation: https://www.11ty.dev/docs/config/
// ─────────────────────────────────────────────────────────────────────────────

// 📦 Plugin Imports
const pluginImages = require("@codestitchofficial/eleventy-plugin-sharp-images");
const pluginMinifier = require("@codestitchofficial/eleventy-plugin-minify");
const pluginSitemap = require("@quasibit/eleventy-plugin-sitemap");

// ⚙️ Configuration Files
const configSitemap = require("./src/config/plugins/sitemap");
const configImages = require("./src/config/plugins/images");

// 🔧 Processing Functions
const less = require("./src/config/processors/less");
const javascript = require("./src/config/processors/javascript");

// 🛠️ Utilities
const filterPostDate = require("./src/config/filters/postDate");
const filterIsoDate = require("./src/config/filters/isoDate");
const isProduction = process.env.ELEVENTY_ENV === "PROD";

module.exports = function (eleventyConfig) {
    // ═════════════════════════════════════════════════════════════════════════
    // LANGUAGES
    // Using Eleventy's build events to process non-template languages
    // Learn more: https://www.11ty.dev/docs/events/
    // ═════════════════════════════════════════════════════════════════════════

    /*
     * JavaScript & CSS Processing
     * These processors handle bundling, transpiling, and minification
     * - JavaScript: Compiled with esbuild for modern bundling
     * - CSS/LESS: Processed and minified for production, including a PostCSS pipeline
     */
    eleventyConfig.on("eleventy.after", javascript);
    eleventyConfig.on("eleventy.after", less);

    // ═════════════════════════════════════════════════════════════════════════
    // PLUGINS
    // Extend Eleventy with additional functionality
    // Learn more: https://www.11ty.dev/docs/plugins/
    // ═════════════════════════════════════════════════════════════════════════

    /*
     * 🖼️ Image Optimization
     * Resize and optimize images for better performance using {% getUrl %}
     * Documentation: https://github.com/CodeStitchOfficial/eleventy-plugin-sharp-images
     */
    eleventyConfig.addPlugin(pluginImages, configImages);

    /*
     * 🗺️ Sitemap Generation
     * Creates sitemap.xml automatically using domain from _data/client.json
     * Documentation: https://github.com/quasibit/eleventy-plugin-sitemap
     */
    eleventyConfig.addPlugin(pluginSitemap, configSitemap);

    /*
     * 📦 Production Minification
     * Minifies HTML, CSS, JSON, XML, XSL, and webmanifest files
     * Only runs during production builds (npm run build)
     * Documentation: https://github.com/CodeStitchOfficial/eleventy-plugin-minify
     */
    if (isProduction) {
        eleventyConfig.addPlugin(pluginMinifier);
    }

    // ═════════════════════════════════════════════════════════════════════════
    // PASSTHROUGH COPIES
    // Copy files directly to output without processing
    // Learn more: https://www.11ty.dev/docs/copy/
    // ═════════════════════════════════════════════════════════════════════════

    eleventyConfig.addPassthroughCopy("./src/assets"); // Static assets
    eleventyConfig.addPassthroughCopy("./src/admin"); // CMS admin files
    eleventyConfig.addPassthroughCopy("./src/_redirects"); // Redirect rules

    // ═════════════════════════════════════════════════════════════════════════
    // FILTERS
    // Transform data in templates at build time
    // Learn more: https://www.11ty.dev/docs/filters/
    // ═════════════════════════════════════════════════════════════════════════

    /*
     * 📅 Human-Readable Date Formatting Filter
     * Converts JavaScript dates to human-readable format
     * Usage: {{ "2023-12-02" | postDate }}
     * Powered by Luxon: https://moment.github.io/luxon/api-docs/
     */
    eleventyConfig.addFilter("postDate", filterPostDate);

    /*
     * 📅 ISO Date Formatting Filter
     * Converts JavaScript dates to ISO 8601 format
     * Usage: {{ "2023-12-02" | isoDate }}
     * Powered by Luxon: https://moment.github.io/luxon/api-docs/
     */
    eleventyConfig.addFilter("isoDate", filterIsoDate);

    // ═════════════════════════════════════════════════════════════════════════
    // SHORTCODES
    // Generate dynamic content with JavaScript
    // Learn more: https://www.11ty.dev/docs/shortcodes/
    // ═════════════════════════════════════════════════════════════════════════

    /*
     * 📆 Current Year Shortcode
     * Outputs the current year (useful for copyright notices)
     * Usage: {% year %}
     * Updates automatically with each build
     */
    eleventyConfig.addShortcode("year", () => `${new Date().getFullYear()}`);

    // ═════════════════════════════════════════════════════════════════════════
    // BUILD CONFIGURATION
    // Define input/output directories and template engine
    // ═════════════════════════════════════════════════════════════════════════

    return {
        dir: {
            input: "src", // Source files directory
            output: "public", // Build output directory
            includes: "_includes", // Partial templates directory
            data: "_data", // Global data files directory
        },
        htmlTemplateEngine: "njk", // Nunjucks for HTML templates
    };
};
</file>

<file path=".gitignore">
.vscode
.cache
node_modules
public
</file>

<file path="LICENSE.md">
Creative Commons Legal Code

CC0 1.0 Universal

    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE
    LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN
    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS
    INFORMATION ON AN "AS-IS" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES
    REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS
    PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM
    THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED
    HEREUNDER.

Statement of Purpose

The laws of most jurisdictions throughout the world automatically confer
exclusive Copyright and Related Rights (defined below) upon the creator
and subsequent owner(s) (each and all, an "owner") of an original work of
authorship and/or a database (each, a "Work").

Certain owners wish to permanently relinquish those rights to a Work for
the purpose of contributing to a commons of creative, cultural and
scientific works ("Commons") that the public can reliably and without fear
of later claims of infringement build upon, modify, incorporate in other
works, reuse and redistribute as freely as possible in any form whatsoever
and for any purposes, including without limitation commercial purposes.
These owners may contribute to the Commons to promote the ideal of a free
culture and the further production of creative, cultural and scientific
works, or to gain reputation or greater distribution for their Work in
part through the use and efforts of others.

For these and/or other purposes and motivations, and without any
expectation of additional consideration or compensation, the person
associating CC0 with a Work (the "Affirmer"), to the extent that he or she
is an owner of Copyright and Related Rights in the Work, voluntarily
elects to apply CC0 to the Work and publicly distribute the Work under its
terms, with knowledge of his or her Copyright and Related Rights in the
Work and the meaning and intended legal effect of CC0 on those rights.

1. Copyright and Related Rights. A Work made available under CC0 may be
protected by copyright and related or neighboring rights ("Copyright and
Related Rights"). Copyright and Related Rights include, but are not
limited to, the following:

  i. the right to reproduce, adapt, distribute, perform, display,
     communicate, and translate a Work;
 ii. moral rights retained by the original author(s) and/or performer(s);
iii. publicity and privacy rights pertaining to a person's image or
     likeness depicted in a Work;
 iv. rights protecting against unfair competition in regards to a Work,
     subject to the limitations in paragraph 4(a), below;
  v. rights protecting the extraction, dissemination, use and reuse of data
     in a Work;
 vi. database rights (such as those arising under Directive 96/9/EC of the
     European Parliament and of the Council of 11 March 1996 on the legal
     protection of databases, and under any national implementation
     thereof, including any amended or successor version of such
     directive); and
vii. other similar, equivalent or corresponding rights throughout the
     world based on applicable law or treaty, and any national
     implementations thereof.

2. Waiver. To the greatest extent permitted by, but not in contravention
of, applicable law, Affirmer hereby overtly, fully, permanently,
irrevocably and unconditionally waives, abandons, and surrenders all of
Affirmer's Copyright and Related Rights and associated claims and causes
of action, whether now known or unknown (including existing as well as
future claims and causes of action), in the Work (i) in all territories
worldwide, (ii) for the maximum duration provided by applicable law or
treaty (including future time extensions), (iii) in any current or future
medium and for any number of copies, and (iv) for any purpose whatsoever,
including without limitation commercial, advertising or promotional
purposes (the "Waiver"). Affirmer makes the Waiver for the benefit of each
member of the public at large and to the detriment of Affirmer's heirs and
successors, fully intending that such Waiver shall not be subject to
revocation, rescission, cancellation, termination, or any other legal or
equitable action to disrupt the quiet enjoyment of the Work by the public
as contemplated by Affirmer's express Statement of Purpose.

3. Public License Fallback. Should any part of the Waiver for any reason
be judged legally invalid or ineffective under applicable law, then the
Waiver shall be preserved to the maximum extent permitted taking into
account Affirmer's express Statement of Purpose. In addition, to the
extent the Waiver is so judged Affirmer hereby grants to each affected
person a royalty-free, non transferable, non sublicensable, non exclusive,
irrevocable and unconditional license to exercise Affirmer's Copyright and
Related Rights in the Work (i) in all territories worldwide, (ii) for the
maximum duration provided by applicable law or treaty (including future
time extensions), (iii) in any current or future medium and for any number
of copies, and (iv) for any purpose whatsoever, including without
limitation commercial, advertising or promotional purposes (the
"License"). The License shall be deemed effective as of the date CC0 was
applied by Affirmer to the Work. Should any part of the License for any
reason be judged legally invalid or ineffective under applicable law, such
partial invalidity or ineffectiveness shall not invalidate the remainder
of the License, and in such case Affirmer hereby affirms that he or she
will not (i) exercise any of his or her remaining Copyright and Related
Rights in the Work or (ii) assert any associated claims and causes of
action with respect to the Work, in either case contrary to Affirmer's
express Statement of Purpose.

4. Limitations and Disclaimers.

 a. No trademark or patent rights held by Affirmer are waived, abandoned,
    surrendered, licensed or otherwise affected by this document.
 b. Affirmer offers the Work as-is and makes no representations or
    warranties of any kind concerning the Work, express, implied,
    statutory or otherwise, including without limitation warranties of
    title, merchantability, fitness for a particular purpose, non
    infringement, or the absence of latent or other defects, accuracy, or
    the present or absence of errors, whether or not discoverable, all to
    the greatest extent permissible under applicable law.
 c. Affirmer disclaims responsibility for clearing rights of other persons
    that may apply to the Work or any use thereof, including without
    limitation any person's Copyright and Related Rights in the Work.
    Further, Affirmer disclaims responsibility for obtaining any necessary
    consents, permissions or other rights required for any use of the
    Work.
 d. Affirmer understands and acknowledges that Creative Commons is not a
    party to this document and has no duty or obligation with respect to
    this CC0 or use of the Work.
</file>

<file path="netlify.toml">
[build]
  publish = "public/"
  command = "npm run build"

[[plugins]]
  # Installs the Lighthouse Build Plugin for all deploy contexts
  package = "@netlify/plugin-lighthouse"

[[plugins]]
package = "netlify-plugin-cache"

  [plugins.inputs]
  paths = [
    "public/assets/images", # Processed images - adjust to match your outputDir
    ".cache" # Remote Assets
  ]
</file>

<file path="package.json">
{
    "name": "nexsite-template",
    "version": "2.0.0",
    "description": "The official NexSite template, featuring 11ty, Decap CMS and LESS - all set up for you! Perfect for websites of all sizes.",
    "main": "index.js",
    "scripts": {
        "watch:cms": "npx decap-server",
        "watch:eleventy": "cross-env ELEVENTY_ENV=DEV eleventy --serve",
        "build:eleventy": "cross-env ELEVENTY_ENV=PROD eleventy",
        "start": "run-p watch:*",
        "build": "run-s build:*"
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/Adrielcodes/nexsite-template.git"
    },
    "keywords": [],
    "author": "NexSite",
    "license": "ISC",
    "bugs": {
        "url": "https://github.com/Adrielcodes/nexsite-template/issues"
    },
    "homepage": "https://github.com/Adrielcodes/nexsite-template#readme",
    "dependencies": {
        "@11ty/eleventy": "^3.1.1",
        "@11ty/eleventy-navigation": "^0.3.5",
        "@codestitchofficial/eleventy-plugin-minify": "^1.1.3",
        "@codestitchofficial/eleventy-plugin-sharp-images": "^2.1.1",
        "@quasibit/eleventy-plugin-sitemap": "^2.2.0",
        "autoprefixer": "^10.4.21",
        "codestitch-sharp-image-automation": "^0.3.0",
        "cross-env": "^7.0.3",
        "cssnano": "^7.0.7",
        "decap-server": "^3.0.1",
        "esbuild": "^0.25.5",
        "glob": "^10.4.5",
        "less": "^4.1.3",
        "netlify-plugin-cache": "^1.0.3",
        "npm-run-all": "^4.1.5",
        "postcss": "^8.5.5"
    }
}
</file>

<file path="README.md">
<br/>
<p align="center">
  <a href="https://codestitch.app/">
    <img src="https://codestitch.app/frontend/images/icon.png" alt="Logo" width="80" height="80">
  </a>

  <h3 align="center">NexSite template (LESS)</h3>

  <p align="center">
    Introducing the NexSite template, presented by NexSite. This kit includes a pre-configured Eleventy environment with Nunjucks templating, along with seamless integration of Decap CMS. This setup allows you to quickly start a project while providing your client with a blog for content management. Everything is ready to go right from the start, offering a fantastic introduction to the advantages of a Static Site Generator, complete with LESS preprocessing.
    <br/>
    <br/>
    <a href="https://github.com/Adrielcodes/nexsite-template">NexSite Template Repo</a>
    .
    <a href="#">View Live Result</a>
    .
    <a href="#">Watch Video</a>
    .
    <a href="#">Report Bug</a>
  </p>
</p>

## Table of Contents

-   <a href="#overview">Overview</a>
-   <a href="#prerequisites">Prerequisites</a>
    -   <a href="#must-knows">Must Knows</a>
    -   <a href="#good-to-knows">Good-to-knows</a>
-   <a href="#quick-start-guide">Quick Start Guide</a>
-   <a href="#explanation-of-file-structure">Explanation of File Structure</a>
    -   <a href="#root-files">Root Files</a>
        -   <a href="#eleventyjs">.eleventy.js</a>
        -   <a href="#netlifytoml">netlify.toml</a>
        -   <a href="#packagejson-and-package-lockjson">package.json and package-lock.json</a>
    -   <a href="#nodemodules">node_modules/</a>
    -   <a href="#public">public/</a>
    -   <a href="#src">src/</a>
        -   <a href="#_data">\_data/</a>
        -   <a href="#_includes">\_includes</a>
            -   <a href="#nav-auto">Navigations \- Rendering Automatically</a>
            -   <a href="#nav-manual">Navigations \- Rendering Manually</a>
    -   <a href="#admin">admin/</a>
    -   <a href="#assets">assets/</a>
    -   <a href="#config">config/</a>
    -   <a href="#content">content/</a>
    -   <a href="#root-src-files">Root src/ Files</a>
        -   <a href="#redirects">\_redirects</a>
        -   <a href="#indexhtml">index.html</a>
        -   <a href="#robotshtml">robots.html</a>
        -   <a href="#sitemaphtml">sitemap.html</a>
-   <a href="#deployment">Deployment</a>

<a name="overview"></a>

## Overview

The Intermediate Website Kit builds off the beginner kits, mainly by including a pre-configured [Eleventy](https://www.11ty.dev) environment. This setup allows for reusable components, centralized data, and greater scalability as your clients grow. Additionally, a blog has been provided through [Decap CMS](https://decapcms.org/), enabling your clients to manage their own content. This can easily be adapted to various use cases, such as menus, job listing boards, portfolios, and more. A few additional plugins have also been included to enhance the developer experience, offering HTML/CSS minification, JS bundling/minification, and automatic sitemap generation.

An example website is also provided, with easy substitution of website sections through the use of [CodeStitch's vanilla component library](https://codestitch.app/). This kit aims to get any project off the ground as quickly as possible, with deployment achievable in as little as two minutes, including CMS hosting.

<a name="prerequisites"></a>

## Prerequisites

<a name="must-knows"></a>

### Must Knows

_Knowledge requirements before using the kit_

-   HTML/CSS
-   Beginner-level JS
-   Familiarity with working in a NodeJS-powered project (handling dependencies with npm, source vs built files, etc)
-   Familiarity with templating languages (this kit uses Nunjucks)

<a name="good-to-knows"></a>

### Good-to-knows

_Not required for light-medium kit usage, but helpful if you want to customise the kit beyond base functionality_

-   Nunjucks ([Docs found here](https://mozilla.github.io/nunjucks/))
    -   If you've never used Nunjucks before, [this excellent article by Hyunbin](https://hyunbinseo.medium.com/nunjucks-settings-for-vs-code-a0da0dc66b95) explains how to set up VSCode to best support Nunjucks, including formatting, syntax highlighting and Emmet.
-   Eleventy ([Docs found here](https://www.11ty.dev/docs/)). Key topics include:
    -   [The Data Cascade](https://www.11ty.dev/docs/data-cascade/)
    -   [Layouts](https://www.11ty.dev/docs/layouts/)
    -   [Permalinks](https://www.11ty.dev/docs/permalinks/)
    -   [Passthroughs](https://www.11ty.dev/docs/copy/)
-   Decap CMS ([Docs found here](https://decapcms.org/docs/intro/))

<a name="quick-start-guide"></a>

## Quick Start Guide

1.  At the top of this repository page, click the **Use This Template** button to create a new repository.
2.  Follow the instructions to create a new repository from the starter kit.
3.  Clone the repository locally to your computer and open it in VS Code.
4.  Run `npm install` to install all dependencies.
5.  After the installation is complete, run `npm start` to start the development server.
6.  Fill out the `./src/_data/client.js` file with the appropriate information for your client.
7.  Adjust the `:root` variables in `./src/assets/[sass or less]/root.[scss or less]`
8.  Modify the website files (use `./src`, NOT `./public`) as needed. Use the template file in `content/pages/_template.txt` to get started, or modify the existing pages.
9.  Deploy using your preferred hosting provider.

<a name="explanation-of-file-structure"></a>

## Explaination of File Structure

This documentation will explain all the files and directories in the starter kit, from root inwards, top to bottom. By the end, you should have a full understanding of all files and directories, and be fully equipped to adapt the kit to your needs.

```
.
├── public/
├── src/
│ ├── _data/
│ │ └── client.js
│ ├── _includes/
│ │ ├── components/
│ │ └── layouts/
│ ├── admin/
│ │ └── config.yml
│ ├── assets/
│ │ ├── css/
│ │ ├── favicons/
│ │ ├── fonts/
│ │ ├── images/
│ │ ├── js/
│ │ ├── sass or less/
│ │ └── svgs/
| ├── config/
│ ├── content/
│ │ ├── blog/
│ │ └── pages/
│ ├── _redirects
│ ├── index.html
│ ├── robots.txt
├── .eleventy.js
└── netlify.toml
└── package-lock.json
└── package.json
```

<a name="root-files"></a>

### Root Files

<a name="eleventyjs"></a>

#### .eleventy.js

The heart of the kit, the `.eleventy.js` file configures the Eleventy static site generator to work as needed. Here, we're able to define settings that control how files are processed, set up filters/shortcodes to modify data at build time, define which languages are used, and set up third-party plugins to add additional functionality to the kit.

The `.eleventy.js` file is well-documented, with all necessary extra documentation provided for extra reading if desired. A full list of functionalities added via `.eleventy.js` is given below:

-   Sets up CSS and JS as template languages, allowing modification at build time by Eleventy. JS is bundled and minified by esbuild.
-   Adds the following plugins:
    -   [Eleventy Navigation](https://github.com/11ty/eleventy-navigation) - Allows the option to define navigation data within the template front matter.
    -   [Eleventy Sitemap](https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap) - Automatically generates a sitemap from all files in `./src/content`.
    -   [Eleventy Minification](https://github.com/benjaminrancourt/eleventy-plugin-files-minifier) - Minifies HTML and CSS (only run in production - when `npm run build` is executed).
-   Passes through all assets (in `./src/assets`) without modification by Eleventy.
-   Adds date formatting filters and a year shortcode.
-   Sets some basic server options.

<a name="netlifytoml"></a>

#### netlify.toml

The kit is made to support deployment to Netlify out-of-the-box, enabled through this `netlify.toml` file. Here, some basic configuration is used to define the `public/` directory as serving the built website files, as well as adding a Google Lighthouse plugin to show Lighthouse scores in Netlify.

<a name="packagejson-and-package-lockjson"></a>

#### package.json and package-lock.json

Standard NodeJS package files, containing the dependencies needed for the project to work. The only things worth noting are the `watch:eleventy` and `build:eleventy` scripts in `package.json`. When `npm start` is used, the `watch:eleventy` script is run, which contains an environment variable (`ELEVENTY_ENV=DEV`). When `npm run build` is used, the `ELEVENTY_ENV` variable is set to `PROD`.

You may notice around the project (e.g., `./src/config/server.js` and `.eleventy.js`) that there is reference to an `isProduction` variable. This is used to control some functionality that is only run while the website is "in production". For example, when `npm run build` is used, we can assume the website is deployed to a live domain, so we can do things like minify the code. This allows comments to be shown in the dev tools while you're actively working on the site but have them removed, and the code minified, for the smallest file sizes and most efficiency when you deploy it.

You shouldn't have to worry about this, however, as all the initial setup has been done for you. It's still good to know if you wish to expand the kit to add production-only functionality.

<a name="nodemodules"></a>

### node_modules/

This directory contains the code for all the dependencies that power this kit. It comes as standard with any NodeJS-powered project, much like the `package.json` and `package-lock.json` files. You can safely ignore this directory in your day-to-day work.

<a name="public"></a>

### public/

All files that have been processed and built by Eleventy are stored here. These are the files that your users will be served and see when they visit the website. It's helpful to look into this directory to debug any issues that may appear in your project, but take care not to actively work in this directory. Any changes you make here will be overwritten the next time the project is run with what's contained in `src/`.

It's also good to understand how it works when a user goes to a domain. If a user goes to [www.example.com](http://www.example.com), the server will look for an `index.html` file at the root of the directory. If they then navigate to [www.example.com/about](http://www.example.com/about), the server will serve the `index.html` file in the /about directory. This is why you'll see a number of directories, all with "index.html" files contained within. If you're expecting a file to be present but you're getting 404 errors when navigating to the appropriate path, check to see if the correct directory/file is being written.

<a name="src"></a>

### src/

<a name="_data"></a>

#### \_data/

This directory contains data files that are accessible within any template throughout the project. Out of the box, the kit only contains a `client.js` file, which holds some information you may wish to define for a client. It's important to fill this file out with the correct information for your client, as many HTML meta tags, the sitemap, and robots.txt all use data from this file.

Consider adding the client's contact details, address, and social media information to this file. Examples have been provided in the kit. This way, you can access the client's information from a single source of truth. If a client changes their email address, you can update it in the `client.js` file and have it reflect across the website without needing to search through multiple files or use Find and Replace.

As an example, we have defined the client's email address under the `email` key. In the footer (`./src/_includes/components/footer.html`), we can use `{{ client.email }}` to access this value and output "help@codestitch.app". The format for outputting the data is `{{ [FILENAME].[KEY] }}`. If we wanted to add another file for pricing information, we could create a file (`_data/pricing.json`), then use `{{ pricing.price }}` to render the price.

In Eleventy, this is known as "Global Data". You can read more about Global Data [here](https://www.11ty.dev/docs/data-global/), with more information about how this works in the context of the Data Cascade [here](https://www.11ty.dev/docs/data-cascade/).

<a name="_includes"></a>

#### \_includes

The `_includes` directory contains pieces of HTML code that you want to share between multiple pages. This code could be small components (a button or a loading spinner), larger sections (header, footer, or a stitch from [CodeStitch](https://codestitch.app/)), or a layout containing a reusable `<head>` element with all necessary meta tags.

By default, the kit has two sub-directories in `_includes` - one for components and one for layouts.

Components can be used on one, none, or many pages. For example, we've set up a header and a footer that we load on all pages (through `_includes/layouts/base.html`). If you want to make a change to the header or footer, you can do so within `_includes/components`, and this change will be reflected across all pages. This is done by using `{% include "components/header.html" %}`. If you want to adjust some of the data within the component (e.g., a button that has the same structure/core styles but different CTA text), you should look into using a [Nunjucks Macro](https://mozilla.github.io/nunjucks/templating#macro), which you can [import](https://mozilla.github.io/nunjucks/templating#import) where needed.

Layouts define the wider page structure. The main one used in this kit is `base.html`, which contains the document type declaration, `<head>` tag with associated `<meta>` tags (using data in `_data/client.js` and the page front matter), a `<body>` with a `<main>` tag and skip-to-content link, and calls to the header and footer. All pages use `base.html`. This has been configured to work automatically, so you shouldn't need much additional work. For the blog, we have also created a `post.html` layout (which also uses the `base.html` file, through Nunjucks' `{% extends %}`) that we use to render the blog article pages.

<a name="nav-auto"></a>

##### Navigations - Rendering Automatically

One thing you may notice in the `\_includes/header.html` file is the vast amount of Nunjucks code in the `cs-ul-wrapper` element. This is code that makes use of the `eleventyNavigation` object and keys in the frontmatter of all pages that are, by default, added to the kit. This is part of the Eleventy Navigation plugin, which allows us to create scalable navigation menus without having to constantly add new list items and dropdowns to the header whenever a new page is made. If you make a new page using the `\_template.txt` file in `content/pages`, you will be guided to add this information into the front matter, where the navigation will be remade with the new page data automatically.

If you wish to use this kit, and benefit from this way of doing navigations but want to swap out the navigation for another one in the CodeStitch template library, you can copy the `cs-ul-wrapper` `<div>` element that's found in the kit and replace the `cs-ul-wrapper` in the new stitch. As the class system is the same with all Stitches, the auto-rendering functionality, including the application of active-style classes and dropdowns (if a "dropdown" Stitch is used) will remain the same.

<a name="nav-manual"></a>

##### Navigations - Rendering Manually

Some developers may wish to continue with the "old school" way of rendering navigations and add the HTML for new navigation links to the header individually. This is fine to do too.

One issue that you may run into, however, is the addition of the `cs-active` class to the page that the user is currently on. As the same navigation element is being rendered on all pages, manually adding the `cs-active` class to one of the navigation items will cause that item to be "activated" between all pages.

To get around this, you will need to manually add some Nunjucks code to each of the navigation items to check the page the user is on and add `cs-active` if that particular page is being viewed. That code would look like this:

```
<a href="/contact" class="cs-li-link {% if page.url == '/contact/' %} cs-active {% endif %}">
    Contact
</a>
```

Note the if-check in the `class` attribute of the anchor element. Here, we're checking if `page.url` (the page we're currently on) matches the permalink of the navigation item. Make sure both leading and trailing slashes are used. If this were for the home page, we'd just check for "/", like so:

```
<a href="/" class="cs-li-link {% if page.url == '/' %} cs-active {% endif %}">
    Home
</a>
```

<a name="admin"></a>

#### admin/

The `admin/` directory sets up [Decap CMS](https://decapcms.org/) to be used within the project. It's configured as a blog that a client can access by navigating to the `/admin/` path on the deployed site, where they can create, update, and delete blog posts whenever they want. This modifies the markdown files in the source code, which will trigger a rebuild in Netlify, incorporating the new blog data. After about one minute, the client can see the new blog post on the website.

Decap CMS has been chosen due to its open-source nature, good UX/DX, and stability. Very little training is required on the client's end to get it to work - the interface is clean and operates without trouble. It works through an `index.html` file in the `admin/`. This `index.html` file is processed as an Eleventy template, added to `/public/admin`, and the CMS is loaded when navigating to the `/admin` path. This kit uses DecapBridge for authentication as the Netlify Identity feature has been deprecated. Visit [Decapbridge Discord](<(https://discord.com/channels/1257728522361901219/1257728681380417600)>) and their [open-sources repos](https://github.com/decapbridge) for more information and support.

The CMS is configured through a `config.yml` file, as per the Decap documentation. If you wish to use the blog as-is, you shouldn't need to make any changes here. If you want to extend the kit and modify the CMS for your own needs, we recommend referring to the Decap documentation for guidance on how to do so.

Styling the Decap preview pane This template includes custom styles for the Decap CMS preview pane, so that blog posts in the admin dashboard look similar to the live site.

1. How it works:

The preview styles are defined in /admin/decap-preview-styles.css. The CMS preview script in /admin/index.html:

-   pulls the props from the collection
-   creates the DOM elements
-   registers these elements and styles for the preview panel to use

2. How to update or customize:

Edit /admin/decap-preview-styles.css and the preview pane script in /admin/index.html to match your site's branding or layout changes. Use Decap's documentation on [customizing the preview pane](https://decapcms.org/docs/customization/)

3.Notes

-   The style sheet must be a CSS file
-   The style sheet does not support nested CSS.

<a name="assets"></a>

#### assets/

All other non-content files are stored in `assets/`, which is set up in `.eleventy.js` to be passed through to `public/`. A brief overview of each of the folders within `assets/`, and any relevant notes, is provided below:

-   `css/` - SASS/LESS files from the `less/` or `sass/` directories are built into `css/`. From here, the CSS is processed as an Eleventy template, where we minify the code (production only), and pass it through to `public/`. **Do not** make CSS changes here - instead, use the SASS or LESS asset directory (depending on which kit you're using).
-   `favicons/` - Any favicon files can be stored here. We recommend using [this tool](https://realfavicongenerator.net/) to generate favicons for all devices.
-   `fonts/` - If you have any non-standard fonts you wish to locally host, you can put the files here. You can use [this tool](https://gwfh.mranftl.com/fonts) to download font files to be stored in `fonts/`, as well as generate the code to be put in your `root.scss` or `root.less` file.
-   `images/` - Any images can go here. No processing will occur.
-   `js/` - Put any JavaScript in this directory. It will be processed, bundled, and minified by esbuild.
-   `sass/` or `less/` - Depending on whether you're using the SASS or LESS version of the kit, you'll find your preprocessor files in one of these directories. Make your changes to styling here, not in `assets/css`
-   `svgs/` - A separate directory for SVGs. This makes it easier to bulk-compress SVGs separate from `images/` if you're using a tool like [compressor.io](https://compressor.io/).

<a name="config"></a>

#### config/

All configurations for Eleventy are held in this directory. This includes settings for plugins, extensions, filters, and shortcodes, among other things.

Unless you are confident in your Eleventy abilities, we recommend not making any changes to the files in this directory, as they have all been carefully configured to work without modification. If you are confident enough to make changes, you likely don't need a README to tell you what you're doing!

<a name="content"></a>

#### content/

Any files that are built into HTML pages are held in `content/`. This includes standalone informational pages (held in `pages/`) and the blog markdown posts, which use the `post.html` layout (that in turn uses `base.html` through [Eleventy layout chaining](https://www.11ty.dev/docs/layout-chaining/) and [Nunjucks template inheritance](https://mozilla.github.io/nunjucks/templating#block)) to form the blog posts controlled by the CMS.

You're welcome to modify any of these pages or create your own. If you wish to create your own pages, a template can be found in `pages/content/_template.txt`. Copy this file, paste it, rename it to an HTML file, and follow the structure shown in the template. This template contains some code at the top, wrapped between "---"s, which is called the front matter. This contains data specific to this page, which is used within the layout to set the `<title>` tag, `<meta>` description tag, among other things. This data will overwrite any data contained elsewhere in the [Eleventy Data Cascade](https://www.11ty.dev/docs/data-cascade/).

A copy of the default front matter can be found below:

```
---
title: 'Page title for <title> and OG tags'
description: 'Description for <meta> description and OG tags'
preloadImg: '/assets/images/imagename.format'
permalink: 'page-path/'
eleventyNavigation:
    key: Name to appear in navigation
    order: 1000
    parent: Optional - Put another page's "key" here to create a dropdown
    hideOnMobile: Optional - set to "true" to hide on devices from, and below, 1023px
    hideOnDesktop: Optional - set to "true" to hide on devices above, and including, 1024px
---
```

Under the front matter, there is some more code:

```
{% extends "layouts/base.html" %}

{% block head %}
    <!-- Any page-specific tags that belong in the <head>, such as a page-specific stylesheet -->
{% endblock %}

{% block body %}
    <!-- Page HTML goes here, without a <main> wrapper -->
{% endblock %}
```

The first line, `{% extends "layouts/base.html" %}`, denotes the layout we should use. In the case of this kit, we're using the layout in `_includes/layouts/base.html`. Any code between the `{% block head %} ... {% endblock %}` will be inserted in the `<head>` of the document. This can be useful to insert stylesheets and scripts which you only want to load on this particular page. The page HTML content can be provided within the `{% block body %} ... {% endblock %}`. This will be inserted in the `<body>` of the HTML document, within a `<main>` tag.

Blocks are a Nunjucks feature, which you can read more about [here](https://mozilla.github.io/nunjucks/templating#block).

As mentioned, blog files are held in `content/blog`, with the CMS configured to add new posts as markdown files to this directory. As we can't define things like the layout, tags, permalink, or CSS preloads in the individual markdown files, a [directory data file](https://www.11ty.dev/docs/data-template-dir/) is used in `/blog/` to define this.

A similar directory data file (`content.json`) is used in the `content/` directory to define a "sitemap" tag. This adds all pages in `content/` to the sitemap [collection](https://www.11ty.dev/docs/collections/), which renders our sitemap automatically for us.

<a name="root-src-files"></a>

#### Root src/ Files

<a name="redirects"></a>

##### \_redirects

Set up any redirect rules here. More information can be found in the [Netlify Docs](https://docs.netlify.com/routing/redirects/).

<a name="indexhtml"></a>

##### index.html

The home page. Treat it as if it were any other page in `content/pages`.

<a name="robotshtml"></a>

##### robots.html

Set up as an HTML file so we can use the domain in `_data/client.js` to automatically create a `robots.txt` file in `/public`. We do this by setting the permalink to `/robots.txt`. Unless you need to block crawlers from other pages (we've already blocked `/admin` for you), you shouldn't need to touch this file.

<a name="sitemaphtml"></a>

##### sitemap.html

Similar to `robots.html`, a `.html` file is used to generate a `sitemap.xml` file. It uses all HTML files that have a "sitemap" tag applied, which should be all pages in `content/`.

<a name="deployment"></a>

## Deployment

When you're happy with your website, you can deploy it to your hosting provider of choice. As this kit uses Netlify, we have outlined some instructions below:

1.  Sign in to or create an account with [Netlify](https://www.netlify.com/).
2.  Go to [https://app.netlify.com](https://app.netlify.com), click **Sites** on the left-hand navigation, then click **Add new site**, and choose **Import an existing project**.
3.  Choose to deploy your project with GitHub. Follow the steps to link Netlify and GitHub.
4.  Find your project in the list of repositories.
5.  Everything should be already configured, thanks to the `netlify.toml` file. Click **Deploy [PROJECT NAME]**.
6.  Check to see if your site deploys without error. The site should be live, but we still need to set up the CMS.

With slight modifications for usage with 11ty, this setup guide for DecapBridge was written by Geoffrey on the [Intermediate Astro Decap kit](https://github.com/CodeStitchOfficial/Intermediate-Astro-Decap-CMS/blob/main/README.md?plain=1#deployment)

> [!IMPORTANT] This kit now uses decapbridge.com for its authentication solution. If you still use Netlify Identity, please refer to [the Netlify Identity branch](https://github.com/CodeStitchOfficial/Intermediate-Website-Kit-LESS/tree/deprecated---using-Netlify-Identity)

> [!TIP] If you are updating your kit from Netlify Identity to decapbridge.com:
>
> 1. Login to your Netlify account
> 2. Navigate to Projects/Your-Site
> 3. Navigate to Project Configuration/Identity and delete the Netlify Identity instance. This will delete your users as well. They will have to be re-created in decapbridge later.
> 4. Delete the Netlify Identity script in src/index.html and in src/admin/index.html

### On decapbridge.com:

1. Make sure that your repo is on Github and your site is deployed (doesn't have to be Netlify) before moving on to the next step.
2. Navigate to https://decapbridge.com/ and create an account. It's free.
3. Navigate to the dashboard and Create New Site. You see this screen:

![decapbridge.com dashboard](github/decapbridge-dashboard.png)

Fill in the 3 input fields:

-   Github repository: it has to be in a `user-or-org/repository-name` format. e.g. `BuckyBuck135/testing-decapbridge`
-   Github access token. To create a personal access token in GitHub, follow these steps:

    1. Log into your Github account.
    2. Click on your profile picture (top right) (not the repository profile), and click the "Settings" link.
    3. Scroll down and click the "Developer Settings" link.
    4. Click the GitHub "Personal access tokens" link and choose `fine-grained tokens"
    5. Click the "Generate new token" button and provide your password again if required.
    6. Provide a name for the GitHub personal access token in the "Note" field.
    7. Set the access token's "expiration" timeout to "No expiration."
    8. Set the "Repository access" to the desired repository only.
    9. Set the "Permissions / Repository permissions" to **read-write access** for this repository's **Contents** and **Pull requests**. (This is needed by DecapCMS to read your markdown, and write new content via Pull Requests.)
    10. Click "Generate token.", double check the permissions and click the Generate Token button
    11. **Make sure to copy your GitHub Personal Access Token now as you will not be able to see this again.**

        ![The Permissions settings](github/github-permissions.png)

    12. Double check your permissions before generating the token. It must have read and write access to Contents and Pull Requests.

-   Decap CMS URL: provide the (deployed) URL of the Decap CMS dashboard. e.g [`https://testing-decapbridge.netlify.app/admin/#/`](https://testing-decapbridge.netlify.app/admin/#/)

### On your CS Decap kit:

1. In `/src/admin/config.yml`, edit the `backend` Decap config to paste in the snippet provided by the [DecapBridge.com](http://DecapBridge.com) dashboard. It should look something like this:

```yaml
# Use DecapBridge auth (required)
backend:
    name: git-gateway
    repo: BuckyBuck135/testing-decapbridge # provided by decapbridge
    branch: main
    identity_url: https://auth.decapbridge.com/sites/5605bbe7-08f2-4ce5-bce2-7d97def08bed # provided by decapbridge
    gateway_url: https://gateway.decapbridge.com # provided by decapbridge

    # Quickly see who did what (optional)
    commit_messages:
        create: Create {{collection}} "{{slug}}" - {{author-name}} <{{author-login}}> via DecapBridge
        update: Update {{collection}} "{{slug}}" - {{author-name}} <{{author-login}}> via DecapBridge
        delete: Delete {{collection}} "{{slug}}" - {{author-name}} <{{author-login}}> via DecapBridge
        uploadMedia: Upload "{{path}}" - {{author-name}} <{{author-login}}> via DecapBridge
        deleteMedia: Delete "{{path}}" - {{author-name}} <{{author-login}}> via DecapBridge
        openAuthoring: Message {{message}} - {{author-name}} <{{author-login}}> via DecapBridge

# Better Decap + Bridge logo (optional)
logo_url: https://decapbridge.com/decapcms-with-bridge.svg

# Add site links in DecapCMS (optional)
site_url: https://testing-decapbridge.netlify.app
```

2. Push changes to the repo and test the authentication system. As the admin of the site, your login credentials to access the Decap dashboard are the same as your decapbridge.com credentials.
3. Invite your client from your decapbridge dashboard. This will create a decapbridge collaborator account for them. From there, they will be able to access their Decap dashboard, reset their password etc.
</file>

</files>
